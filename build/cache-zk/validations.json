{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "withoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "linkedWithoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac",
          "withoutMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac",
          "linkedWithoutMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "withoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "linkedWithoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "withoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "linkedWithoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "withoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "linkedWithoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "withoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "linkedWithoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "withoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "linkedWithoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "withoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "linkedWithoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "withoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "linkedWithoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "withoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "linkedWithoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "withoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "linkedWithoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "withoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "linkedWithoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "withoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "linkedWithoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "withoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "linkedWithoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol:IPyth": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPyth.sol:10",
        "inherit": [
          "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents"
        ],
        "libraries": [],
        "methods": [
          "getValidTimePeriod()",
          "getPrice(bytes32)",
          "getEmaPrice(bytes32)",
          "getPriceUnsafe(bytes32)",
          "getPriceNoOlderThan(bytes32,uint256)",
          "getEmaPriceUnsafe(bytes32)",
          "getEmaPriceNoOlderThan(bytes32,uint256)",
          "updatePriceFeeds(bytes[])",
          "updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])",
          "getUpdateFee(bytes[])",
          "parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:PythStructs": {
        "src": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:4",
        "version": {
          "withMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "withoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "linkedWithoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket": {
        "src": "contracts/SpeedMarkets/SpeedMarket.sol:9",
        "version": {
          "withMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "withoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "linkedWithoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize((address,address,bytes32,uint64,int64,uint8,uint256))",
          "resolve(int64)",
          "isUserWinner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)5271",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)5271": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketsAMM.sol:SpeedMarketsAMM": {
        "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:31",
        "version": {
          "withMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "withoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "linkedWithoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "createNewMarket(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDelta(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDifferentCollateral(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "createNewMarketWithDifferentCollateralAndDelta(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "resolveMarket(address,bytes[])",
          "resolveMarketsBatch(address[],bytes[])",
          "resolveMarketManually(address,int64)",
          "resolveMarketManuallyBatch(address[],int64[])",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "numActiveMarketsPerUser(address)",
          "activeMarketsPerUser(uint256,uint256,address)",
          "numMaturedMarketsPerUser(address)",
          "maturedMarketsPerUser(uint256,uint256,address)",
          "canResolveMarket(address)",
          "getMarketsData(address[])",
          "getDirectionalRiskPerAsset(bytes32)",
          "setMastercopy(address)",
          "setAmounts(uint256,uint256)",
          "setTimes(uint256,uint256)",
          "setAssetToPythID(bytes32,bytes32)",
          "setMaximumPriceDelay(uint64)",
          "setMaximumPriceDelayForResolving(uint64)",
          "setMaxRiskPerAsset(bytes32,uint256)",
          "setMaxRiskPerAssetAndDirection(bytes32,uint256)",
          "setSafeBoxParams(address,uint256)",
          "setLPFee(uint256)",
          "setStakingThales(address)",
          "setReferrals(address)",
          "setPyth(address)",
          "setSupportedAsset(bytes32,bool)",
          "setMultiCollateralOnOffRamp(address,bool)",
          "addToWhitelist(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(AddressSet)5408_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:35"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)5408_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:36"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:40"
            },
            {
              "label": "speedMarketMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:42"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:44"
            },
            {
              "label": "lpFee",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:45"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:47"
            },
            {
              "label": "supportedAsset",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:49"
            },
            {
              "label": "minimalTimeToMaturity",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:51"
            },
            {
              "label": "maximalTimeToMaturity",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:52"
            },
            {
              "label": "minBuyinAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:54"
            },
            {
              "label": "maxBuyinAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:55"
            },
            {
              "label": "maxRiskPerAsset",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:57"
            },
            {
              "label": "currentRiskPerAsset",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:58"
            },
            {
              "label": "assetToPythId",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:60"
            },
            {
              "label": "pyth",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(IPyth)2666",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:63"
            },
            {
              "label": "maximumPriceDelay",
              "offset": 20,
              "slot": "23",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:65"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(IStakingThales)5398",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
            },
            {
              "label": "_activeMarketsPerUser",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_struct(AddressSet)5408_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
            },
            {
              "label": "_maturedMarketsPerUser",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_struct(AddressSet)5408_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
            },
            {
              "label": "multiCollateralOnOffRamp",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IMultiCollateralOnOffRamp)5290",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
            },
            {
              "label": "multicollateralEnabled",
              "offset": 20,
              "slot": "28",
              "type": "t_bool",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
            },
            {
              "label": "maxRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
            },
            {
              "label": "currentRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:92"
            },
            {
              "label": "maximumPriceDelayForResolving",
              "offset": 0,
              "slot": "31",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
            },
            {
              "label": "marketHasCreatedAtAttribute",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "33",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IMultiCollateralOnOffRamp)5290": {
              "label": "contract IMultiCollateralOnOffRamp",
              "numberOfBytes": "20"
            },
            "t_contract(IPyth)2666": {
              "label": "contract IPyth",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)5398": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5408_storage)": {
              "label": "mapping(address => struct AddressSetLib.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))": {
              "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Direction)2737,t_uint256)": {
              "label": "mapping(enum SpeedMarket.Direction => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5408_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IMultiCollateralOnOffRamp.sol:IMultiCollateralOnOffRamp": {
        "src": "contracts/interfaces/IMultiCollateralOnOffRamp.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onramp(address,uint256)",
          "onrampWithEth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IReferrals.sol:IReferrals": {
        "src": "contracts/interfaces/IReferrals.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "referrals(address)",
          "getReferrerFee(address)",
          "sportReferrals(address)",
          "setReferrer(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThales.sol:IStakingThales": {
        "src": "contracts/interfaces/IStakingThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateVolume(address,uint256)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "currentPeriodRewards()",
          "currentPeriodFees()",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "getAMMVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/AddressSetLib.sol:AddressSetLib": {
        "src": "contracts/utils/libraries/AddressSetLib.sol:5",
        "version": {
          "withMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "withoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "linkedWithoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "withoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "linkedWithoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "withoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "linkedWithoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "withoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "linkedWithoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "withoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "linkedWithoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac",
          "withoutMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac",
          "linkedWithoutMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "withoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "linkedWithoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "withoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "linkedWithoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "withoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "linkedWithoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "withoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "linkedWithoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "withoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "linkedWithoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "withoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "linkedWithoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "withoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "linkedWithoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "withoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "linkedWithoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "withoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "linkedWithoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "withoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "linkedWithoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "withoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "linkedWithoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "withoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "linkedWithoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol:IPyth": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPyth.sol:10",
        "inherit": [
          "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents"
        ],
        "libraries": [],
        "methods": [
          "getValidTimePeriod()",
          "getPrice(bytes32)",
          "getEmaPrice(bytes32)",
          "getPriceUnsafe(bytes32)",
          "getPriceNoOlderThan(bytes32,uint256)",
          "getEmaPriceUnsafe(bytes32)",
          "getEmaPriceNoOlderThan(bytes32,uint256)",
          "updatePriceFeeds(bytes[])",
          "updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])",
          "getUpdateFee(bytes[])",
          "parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:PythStructs": {
        "src": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:4",
        "version": {
          "withMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "withoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "linkedWithoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket": {
        "src": "contracts/SpeedMarkets/SpeedMarket.sol:9",
        "version": {
          "withMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "withoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "linkedWithoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize((address,address,bytes32,uint64,int64,uint8,uint256))",
          "resolve(int64)",
          "isUserWinner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)5271",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)5271": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketsAMM.sol:SpeedMarketsAMM": {
        "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:31",
        "version": {
          "withMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "withoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "linkedWithoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "createNewMarket(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDelta(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDifferentCollateral(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "createNewMarketWithDifferentCollateralAndDelta(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "resolveMarket(address,bytes[])",
          "resolveMarketsBatch(address[],bytes[])",
          "resolveMarketManually(address,int64)",
          "resolveMarketManuallyBatch(address[],int64[])",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "numActiveMarketsPerUser(address)",
          "activeMarketsPerUser(uint256,uint256,address)",
          "numMaturedMarketsPerUser(address)",
          "maturedMarketsPerUser(uint256,uint256,address)",
          "canResolveMarket(address)",
          "getMarketsData(address[])",
          "getDirectionalRiskPerAsset(bytes32)",
          "setMastercopy(address)",
          "setAmounts(uint256,uint256)",
          "setTimes(uint256,uint256)",
          "setAssetToPythID(bytes32,bytes32)",
          "setMaximumPriceDelay(uint64)",
          "setMaximumPriceDelayForResolving(uint64)",
          "setMaxRiskPerAsset(bytes32,uint256)",
          "setMaxRiskPerAssetAndDirection(bytes32,uint256)",
          "setSafeBoxParams(address,uint256)",
          "setLPFee(uint256)",
          "setStakingThales(address)",
          "setReferrals(address)",
          "setPyth(address)",
          "setSupportedAsset(bytes32,bool)",
          "setMultiCollateralOnOffRamp(address,bool)",
          "addToWhitelist(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(AddressSet)5408_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:35"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)5408_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:36"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:40"
            },
            {
              "label": "speedMarketMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:42"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:44"
            },
            {
              "label": "lpFee",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:45"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:47"
            },
            {
              "label": "supportedAsset",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:49"
            },
            {
              "label": "minimalTimeToMaturity",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:51"
            },
            {
              "label": "maximalTimeToMaturity",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:52"
            },
            {
              "label": "minBuyinAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:54"
            },
            {
              "label": "maxBuyinAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:55"
            },
            {
              "label": "maxRiskPerAsset",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:57"
            },
            {
              "label": "currentRiskPerAsset",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:58"
            },
            {
              "label": "assetToPythId",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:60"
            },
            {
              "label": "pyth",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(IPyth)2666",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:63"
            },
            {
              "label": "maximumPriceDelay",
              "offset": 20,
              "slot": "23",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:65"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(IStakingThales)5398",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
            },
            {
              "label": "_activeMarketsPerUser",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_struct(AddressSet)5408_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
            },
            {
              "label": "_maturedMarketsPerUser",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_struct(AddressSet)5408_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
            },
            {
              "label": "multiCollateralOnOffRamp",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IMultiCollateralOnOffRamp)5290",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
            },
            {
              "label": "multicollateralEnabled",
              "offset": 20,
              "slot": "28",
              "type": "t_bool",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
            },
            {
              "label": "maxRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
            },
            {
              "label": "currentRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:92"
            },
            {
              "label": "maximumPriceDelayForResolving",
              "offset": 0,
              "slot": "31",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
            },
            {
              "label": "marketHasCreatedAtAttribute",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "33",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IMultiCollateralOnOffRamp)5290": {
              "label": "contract IMultiCollateralOnOffRamp",
              "numberOfBytes": "20"
            },
            "t_contract(IPyth)2666": {
              "label": "contract IPyth",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)5398": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5408_storage)": {
              "label": "mapping(address => struct AddressSetLib.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))": {
              "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Direction)2737,t_uint256)": {
              "label": "mapping(enum SpeedMarket.Direction => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5408_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IMultiCollateralOnOffRamp.sol:IMultiCollateralOnOffRamp": {
        "src": "contracts/interfaces/IMultiCollateralOnOffRamp.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onramp(address,uint256)",
          "onrampWithEth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IReferrals.sol:IReferrals": {
        "src": "contracts/interfaces/IReferrals.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "referrals(address)",
          "getReferrerFee(address)",
          "sportReferrals(address)",
          "setReferrer(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThales.sol:IStakingThales": {
        "src": "contracts/interfaces/IStakingThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateVolume(address,uint256)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "currentPeriodRewards()",
          "currentPeriodFees()",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "getAMMVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/AddressSetLib.sol:AddressSetLib": {
        "src": "contracts/utils/libraries/AddressSetLib.sol:5",
        "version": {
          "withMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "withoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "linkedWithoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "withoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "linkedWithoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "withoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "linkedWithoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "withoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "linkedWithoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "withoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "linkedWithoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac",
          "withoutMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac",
          "linkedWithoutMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "withoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "linkedWithoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "withoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "linkedWithoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "withoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "linkedWithoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "withoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "linkedWithoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "withoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "linkedWithoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "withoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "linkedWithoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "withoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "linkedWithoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "withoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "linkedWithoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "withoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "linkedWithoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "withoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "linkedWithoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "withoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "linkedWithoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "withoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "linkedWithoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol:IPyth": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPyth.sol:10",
        "inherit": [
          "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents"
        ],
        "libraries": [],
        "methods": [
          "getValidTimePeriod()",
          "getPrice(bytes32)",
          "getEmaPrice(bytes32)",
          "getPriceUnsafe(bytes32)",
          "getPriceNoOlderThan(bytes32,uint256)",
          "getEmaPriceUnsafe(bytes32)",
          "getEmaPriceNoOlderThan(bytes32,uint256)",
          "updatePriceFeeds(bytes[])",
          "updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])",
          "getUpdateFee(bytes[])",
          "parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:PythStructs": {
        "src": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:4",
        "version": {
          "withMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "withoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "linkedWithoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket": {
        "src": "contracts/SpeedMarkets/SpeedMarket.sol:9",
        "version": {
          "withMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "withoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "linkedWithoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize((address,address,bytes32,uint64,int64,uint8,uint256))",
          "resolve(int64)",
          "isUserWinner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)5271",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)5271": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketsAMM.sol:SpeedMarketsAMM": {
        "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:31",
        "version": {
          "withMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "withoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "linkedWithoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "createNewMarket(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDelta(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDifferentCollateral(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "createNewMarketWithDifferentCollateralAndDelta(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "resolveMarket(address,bytes[])",
          "resolveMarketsBatch(address[],bytes[])",
          "resolveMarketManually(address,int64)",
          "resolveMarketManuallyBatch(address[],int64[])",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "numActiveMarketsPerUser(address)",
          "activeMarketsPerUser(uint256,uint256,address)",
          "numMaturedMarketsPerUser(address)",
          "maturedMarketsPerUser(uint256,uint256,address)",
          "canResolveMarket(address)",
          "getMarketsData(address[])",
          "getDirectionalRiskPerAsset(bytes32)",
          "setMastercopy(address)",
          "setAmounts(uint256,uint256)",
          "setTimes(uint256,uint256)",
          "setAssetToPythID(bytes32,bytes32)",
          "setMaximumPriceDelay(uint64)",
          "setMaximumPriceDelayForResolving(uint64)",
          "setMaxRiskPerAsset(bytes32,uint256)",
          "setMaxRiskPerAssetAndDirection(bytes32,uint256)",
          "setSafeBoxParams(address,uint256)",
          "setLPFee(uint256)",
          "setStakingThales(address)",
          "setReferrals(address)",
          "setPyth(address)",
          "setSupportedAsset(bytes32,bool)",
          "setMultiCollateralOnOffRamp(address,bool)",
          "addToWhitelist(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(AddressSet)5408_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:35"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)5408_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:36"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:40"
            },
            {
              "label": "speedMarketMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:42"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:44"
            },
            {
              "label": "lpFee",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:45"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:47"
            },
            {
              "label": "supportedAsset",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:49"
            },
            {
              "label": "minimalTimeToMaturity",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:51"
            },
            {
              "label": "maximalTimeToMaturity",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:52"
            },
            {
              "label": "minBuyinAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:54"
            },
            {
              "label": "maxBuyinAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:55"
            },
            {
              "label": "maxRiskPerAsset",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:57"
            },
            {
              "label": "currentRiskPerAsset",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:58"
            },
            {
              "label": "assetToPythId",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:60"
            },
            {
              "label": "pyth",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(IPyth)2666",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:63"
            },
            {
              "label": "maximumPriceDelay",
              "offset": 20,
              "slot": "23",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:65"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(IStakingThales)5398",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
            },
            {
              "label": "_activeMarketsPerUser",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_struct(AddressSet)5408_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
            },
            {
              "label": "_maturedMarketsPerUser",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_struct(AddressSet)5408_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
            },
            {
              "label": "multiCollateralOnOffRamp",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IMultiCollateralOnOffRamp)5290",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
            },
            {
              "label": "multicollateralEnabled",
              "offset": 20,
              "slot": "28",
              "type": "t_bool",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
            },
            {
              "label": "maxRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
            },
            {
              "label": "currentRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:92"
            },
            {
              "label": "maximumPriceDelayForResolving",
              "offset": 0,
              "slot": "31",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
            },
            {
              "label": "marketHasCreatedAtAttribute",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "33",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IMultiCollateralOnOffRamp)5290": {
              "label": "contract IMultiCollateralOnOffRamp",
              "numberOfBytes": "20"
            },
            "t_contract(IPyth)2666": {
              "label": "contract IPyth",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)5398": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5408_storage)": {
              "label": "mapping(address => struct AddressSetLib.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))": {
              "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Direction)2737,t_uint256)": {
              "label": "mapping(enum SpeedMarket.Direction => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5408_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IMultiCollateralOnOffRamp.sol:IMultiCollateralOnOffRamp": {
        "src": "contracts/interfaces/IMultiCollateralOnOffRamp.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onramp(address,uint256)",
          "onrampWithEth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IReferrals.sol:IReferrals": {
        "src": "contracts/interfaces/IReferrals.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "referrals(address)",
          "getReferrerFee(address)",
          "sportReferrals(address)",
          "setReferrer(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThales.sol:IStakingThales": {
        "src": "contracts/interfaces/IStakingThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateVolume(address,uint256)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "currentPeriodRewards()",
          "currentPeriodFees()",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "getAMMVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/AddressSetLib.sol:AddressSetLib": {
        "src": "contracts/utils/libraries/AddressSetLib.sol:5",
        "version": {
          "withMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "withoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "linkedWithoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "withoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "linkedWithoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "withoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "linkedWithoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "withoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "linkedWithoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "withoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "linkedWithoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "withoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "linkedWithoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "withoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "linkedWithoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "withoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "linkedWithoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "withoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "linkedWithoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol:IPyth": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPyth.sol:10",
        "inherit": [
          "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents"
        ],
        "libraries": [],
        "methods": [
          "getValidTimePeriod()",
          "getPrice(bytes32)",
          "getEmaPrice(bytes32)",
          "getPriceUnsafe(bytes32)",
          "getPriceNoOlderThan(bytes32,uint256)",
          "getEmaPriceUnsafe(bytes32)",
          "getEmaPriceNoOlderThan(bytes32,uint256)",
          "updatePriceFeeds(bytes[])",
          "updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])",
          "getUpdateFee(bytes[])",
          "parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:PythStructs": {
        "src": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:4",
        "version": {
          "withMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "withoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "linkedWithoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket": {
        "src": "contracts/SpeedMarkets/SpeedMarket.sol:9",
        "version": {
          "withMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "withoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "linkedWithoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize((address,address,bytes32,uint64,int64,uint8,uint256))",
          "resolve(int64)",
          "isUserWinner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)5285",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)5285": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:SpeedMarketMastercopy": {
        "src": "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:7",
        "version": {
          "withMetadata": "7e807585dbd3ad15f0c4814905c69d1bc612ebbec7cffaf2407c4066538f9586",
          "withoutMetadata": "7e807585dbd3ad15f0c4814905c69d1bc612ebbec7cffaf2407c4066538f9586",
          "linkedWithoutMetadata": "7e807585dbd3ad15f0c4814905c69d1bc612ebbec7cffaf2407c4066538f9586"
        },
        "inherit": [
          "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SpeedMarketMastercopy",
            "src": "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)2737",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)5285",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)5285": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketsAMM.sol:SpeedMarketsAMM": {
        "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:31",
        "version": {
          "withMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "withoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "linkedWithoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "createNewMarket(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDelta(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDifferentCollateral(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "createNewMarketWithDifferentCollateralAndDelta(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "resolveMarket(address,bytes[])",
          "resolveMarketsBatch(address[],bytes[])",
          "resolveMarketManually(address,int64)",
          "resolveMarketManuallyBatch(address[],int64[])",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "numActiveMarketsPerUser(address)",
          "activeMarketsPerUser(uint256,uint256,address)",
          "numMaturedMarketsPerUser(address)",
          "maturedMarketsPerUser(uint256,uint256,address)",
          "canResolveMarket(address)",
          "getMarketsData(address[])",
          "getDirectionalRiskPerAsset(bytes32)",
          "setMastercopy(address)",
          "setAmounts(uint256,uint256)",
          "setTimes(uint256,uint256)",
          "setAssetToPythID(bytes32,bytes32)",
          "setMaximumPriceDelay(uint64)",
          "setMaximumPriceDelayForResolving(uint64)",
          "setMaxRiskPerAsset(bytes32,uint256)",
          "setMaxRiskPerAssetAndDirection(bytes32,uint256)",
          "setSafeBoxParams(address,uint256)",
          "setLPFee(uint256)",
          "setStakingThales(address)",
          "setReferrals(address)",
          "setPyth(address)",
          "setSupportedAsset(bytes32,bool)",
          "setMultiCollateralOnOffRamp(address,bool)",
          "addToWhitelist(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(AddressSet)5422_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:35"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)5422_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:36"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:40"
            },
            {
              "label": "speedMarketMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:42"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:44"
            },
            {
              "label": "lpFee",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:45"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:47"
            },
            {
              "label": "supportedAsset",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:49"
            },
            {
              "label": "minimalTimeToMaturity",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:51"
            },
            {
              "label": "maximalTimeToMaturity",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:52"
            },
            {
              "label": "minBuyinAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:54"
            },
            {
              "label": "maxBuyinAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:55"
            },
            {
              "label": "maxRiskPerAsset",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:57"
            },
            {
              "label": "currentRiskPerAsset",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:58"
            },
            {
              "label": "assetToPythId",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:60"
            },
            {
              "label": "pyth",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(IPyth)2666",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:63"
            },
            {
              "label": "maximumPriceDelay",
              "offset": 20,
              "slot": "23",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:65"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(IStakingThales)5412",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
            },
            {
              "label": "_activeMarketsPerUser",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_struct(AddressSet)5422_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
            },
            {
              "label": "_maturedMarketsPerUser",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_struct(AddressSet)5422_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
            },
            {
              "label": "multiCollateralOnOffRamp",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IMultiCollateralOnOffRamp)5304",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
            },
            {
              "label": "multicollateralEnabled",
              "offset": 20,
              "slot": "28",
              "type": "t_bool",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
            },
            {
              "label": "maxRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
            },
            {
              "label": "currentRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:92"
            },
            {
              "label": "maximumPriceDelayForResolving",
              "offset": 0,
              "slot": "31",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
            },
            {
              "label": "marketHasCreatedAtAttribute",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "33",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IMultiCollateralOnOffRamp)5304": {
              "label": "contract IMultiCollateralOnOffRamp",
              "numberOfBytes": "20"
            },
            "t_contract(IPyth)2666": {
              "label": "contract IPyth",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)5412": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)2737": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5422_storage)": {
              "label": "mapping(address => struct AddressSetLib.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_enum(Direction)2737,t_uint256))": {
              "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Direction)2737,t_uint256)": {
              "label": "mapping(enum SpeedMarket.Direction => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5422_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IMultiCollateralOnOffRamp.sol:IMultiCollateralOnOffRamp": {
        "src": "contracts/interfaces/IMultiCollateralOnOffRamp.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onramp(address,uint256)",
          "onrampWithEth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IReferrals.sol:IReferrals": {
        "src": "contracts/interfaces/IReferrals.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "referrals(address)",
          "getReferrerFee(address)",
          "sportReferrals(address)",
          "setReferrer(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThales.sol:IStakingThales": {
        "src": "contracts/interfaces/IStakingThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateVolume(address,uint256)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "currentPeriodRewards()",
          "currentPeriodFees()",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "getAMMVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/AddressSetLib.sol:AddressSetLib": {
        "src": "contracts/utils/libraries/AddressSetLib.sol:5",
        "version": {
          "withMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "withoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "linkedWithoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "withoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "linkedWithoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "withoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "linkedWithoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "withoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "linkedWithoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorInterface.sol:AggregatorInterface": {
        "src": "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorInterface.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "latestTimestamp()",
          "latestRound()",
          "getAnswer(uint256)",
          "getTimestamp(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorV2V3Interface.sol:AggregatorV2V3Interface": {
        "src": "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorV2V3Interface.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "latestTimestamp()",
          "latestRound()",
          "getAnswer(uint256)",
          "getTimestamp(uint256)",
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorV3Interface.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/Chainlink.sol:Chainlink": {
        "src": "@chainlink/contracts/src/v0.8/Chainlink.sol:11",
        "version": {
          "withMetadata": "fd90ba271b5a544d3282bbe40f5f832ee51c623cd3cee366125ee522802813ee",
          "withoutMetadata": "fd90ba271b5a544d3282bbe40f5f832ee51c623cd3cee366125ee522802813ee",
          "linkedWithoutMetadata": "fd90ba271b5a544d3282bbe40f5f832ee51c623cd3cee366125ee522802813ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient": {
        "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "s_requestCount",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)1162",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)1257",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)1337",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)1162": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)1257": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)1337": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol:ENSInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol:OperatorInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface",
          "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes)",
          "fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)",
          "ownerTransferAndCall(address,uint256,bytes)",
          "distributeFunds(address payable[],uint256[])",
          "getAuthorizedSenders()",
          "setAuthorizedSenders(address[])",
          "getForwarder()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:OracleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)",
          "isAuthorizedSender(address)",
          "withdraw(address,uint256)",
          "withdrawable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol:PointerInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:BufferChainlink": {
        "src": "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:12",
        "version": {
          "withMetadata": "599bcdd54a7e1a944850bf108c9760b0a23f1194fccb2b67050e75e66d1c8911",
          "withoutMetadata": "599bcdd54a7e1a944850bf108c9760b0a23f1194fccb2b67050e75e66d1c8911",
          "linkedWithoutMetadata": "599bcdd54a7e1a944850bf108c9760b0a23f1194fccb2b67050e75e66d1c8911"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:CBORChainlink": {
        "src": "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:6",
        "version": {
          "withMetadata": "48f9c64bdc1441eb7386920e9fabed5515806147ac723b21c5258f523487c1a0",
          "withoutMetadata": "48f9c64bdc1441eb7386920e9fabed5515806147ac723b21c5258f523487c1a0",
          "linkedWithoutMetadata": "48f9c64bdc1441eb7386920e9fabed5515806147ac723b21c5258f523487c1a0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol:ENSResolver": {
        "src": "@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "withoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab",
          "linkedWithoutMetadata": "35d399ea0373e9bfe60ec489372bab5491211d89d7ea55730a53b9b41d5127ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "withoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001",
          "linkedWithoutMetadata": "52a9f230eef90e06c1cb1db3e3fa1e5e8efa86f77118ec80715866047a773001"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "withoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a",
          "linkedWithoutMetadata": "9c8770094fd62cbea039cf83808ed55ddf098fbaf381d1806972d480736bb02a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "withoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3",
          "linkedWithoutMetadata": "908dd83672889ce42b4a01f7594ebc1d00dc61ec77fff319ff599503addd31a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "withoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586",
          "linkedWithoutMetadata": "84f47299c179c6f4baca57d197e3199206afd2d3243db37fbe7ad39365b12586"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "withoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d",
          "linkedWithoutMetadata": "1d5f50c70b815f5a1b46dd86755436c26b9d1216d5b85587d029cca634e04a4d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "5cdbe418caaacad86a2a771a078d6f335dcf3a77618d4a9e863335d4d477ba7d",
          "withoutMetadata": "5cdbe418caaacad86a2a771a078d6f335dcf3a77618d4a9e863335d4d477ba7d",
          "linkedWithoutMetadata": "5cdbe418caaacad86a2a771a078d6f335dcf3a77618d4a9e863335d4d477ba7d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "12db22bf4f639ecdaa9a298d4bf3dc509f94886b2d7bc1ac6d5e4396387846ba",
          "withoutMetadata": "12db22bf4f639ecdaa9a298d4bf3dc509f94886b2d7bc1ac6d5e4396387846ba",
          "linkedWithoutMetadata": "12db22bf4f639ecdaa9a298d4bf3dc509f94886b2d7bc1ac6d5e4396387846ba"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac",
          "withoutMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac",
          "linkedWithoutMetadata": "cb9097bdfb2dbeaf4ca6f3174d1b0155d992cebf5c9abd03e6e52605f03520ac"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "withoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089",
          "linkedWithoutMetadata": "0415c01ceb964b97089314ac4bd02877d8bf46cc4a7ee24693e9993cf99d0089"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "8a9cc030b12d65533a340a29f0433f5c7c29543ecad00883d854af547805c392",
          "withoutMetadata": "8a9cc030b12d65533a340a29f0433f5c7c29543ecad00883d854af547805c392",
          "linkedWithoutMetadata": "8a9cc030b12d65533a340a29f0433f5c7c29543ecad00883d854af547805c392"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "875a835534327cd307b7663cc8a359df16c694860f7f6a9be70f03202e247b1a",
          "withoutMetadata": "875a835534327cd307b7663cc8a359df16c694860f7f6a9be70f03202e247b1a",
          "linkedWithoutMetadata": "875a835534327cd307b7663cc8a359df16c694860f7f6a9be70f03202e247b1a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "withoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169",
          "linkedWithoutMetadata": "17dc726d36a24ae64bf19188ac7ffd698febf68a061dd383077c3c34a09e0169"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "withoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623",
          "linkedWithoutMetadata": "766b3c310b443a0e224437b9a1fc00ccc45b147afc6fcedcce2d00d7d118d623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "76c14fc418a079de8330e3a122c3309b3aac0b440eaec579fd351e00962c5393",
          "withoutMetadata": "76c14fc418a079de8330e3a122c3309b3aac0b440eaec579fd351e00962c5393",
          "linkedWithoutMetadata": "76c14fc418a079de8330e3a122c3309b3aac0b440eaec579fd351e00962c5393"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "e07b1891a6be081063af35f959271dfb42d0230788b9cb2e985b0a7c96771b23",
          "withoutMetadata": "e07b1891a6be081063af35f959271dfb42d0230788b9cb2e985b0a7c96771b23",
          "linkedWithoutMetadata": "e07b1891a6be081063af35f959271dfb42d0230788b9cb2e985b0a7c96771b23"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0b8d2df95e3bde59806cddfd98db078f7ca7cefed60416e4ae2f6b9b2e3af932",
          "withoutMetadata": "0b8d2df95e3bde59806cddfd98db078f7ca7cefed60416e4ae2f6b9b2e3af932",
          "linkedWithoutMetadata": "0b8d2df95e3bde59806cddfd98db078f7ca7cefed60416e4ae2f6b9b2e3af932"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "2260b69753663aa4cb23bce97ab094ed9a0220b8e9d6bf9299cf0eacc8610fc1",
          "withoutMetadata": "2260b69753663aa4cb23bce97ab094ed9a0220b8e9d6bf9299cf0eacc8610fc1",
          "linkedWithoutMetadata": "2260b69753663aa4cb23bce97ab094ed9a0220b8e9d6bf9299cf0eacc8610fc1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@prb/math/contracts/PRBMath.sol:PRBMath": {
        "src": "@prb/math/contracts/PRBMath.sol:97",
        "version": {
          "withMetadata": "53c722c4ea205c42000cfeb466cd1b1e453db1a15e22fba5ad1966cb00639e73",
          "withoutMetadata": "53c722c4ea205c42000cfeb466cd1b1e453db1a15e22fba5ad1966cb00639e73",
          "linkedWithoutMetadata": "53c722c4ea205c42000cfeb466cd1b1e453db1a15e22fba5ad1966cb00639e73"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@prb/math/contracts/PRBMathUD60x18.sol:PRBMathUD60x18": {
        "src": "@prb/math/contracts/PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "b3946edaa6bf0ed98ccad4d7c9a5eb0d7b1b6d8363f3e13e3aad050e4a7250be",
          "withoutMetadata": "b3946edaa6bf0ed98ccad4d7c9a5eb0d7b1b6d8363f3e13e3aad050e4a7250be",
          "linkedWithoutMetadata": "b3946edaa6bf0ed98ccad4d7c9a5eb0d7b1b6d8363f3e13e3aad050e4a7250be"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol:IPyth": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPyth.sol:10",
        "inherit": [
          "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents"
        ],
        "libraries": [],
        "methods": [
          "getValidTimePeriod()",
          "getPrice(bytes32)",
          "getEmaPrice(bytes32)",
          "getPriceUnsafe(bytes32)",
          "getPriceNoOlderThan(bytes32,uint256)",
          "getEmaPriceUnsafe(bytes32)",
          "getEmaPriceNoOlderThan(bytes32,uint256)",
          "updatePriceFeeds(bytes[])",
          "updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])",
          "getUpdateFee(bytes[])",
          "parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:PythStructs": {
        "src": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:4",
        "version": {
          "withMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "withoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07",
          "linkedWithoutMetadata": "086dfada358a467c571ca81f7771143149f07e306c9daea0f9ae256fe4c3cc07"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/libraries/LiquidityMath.sol:LiquidityMath": {
        "src": "@uniswap/v3-core/contracts/libraries/LiquidityMath.sol:5",
        "version": {
          "withMetadata": "045fcf9b7bb9c28609c73f669d30260d6203950c345946586636595d41a8df7d",
          "withoutMetadata": "045fcf9b7bb9c28609c73f669d30260d6203950c345946586636595d41a8df7d",
          "linkedWithoutMetadata": "045fcf9b7bb9c28609c73f669d30260d6203950c345946586636595d41a8df7d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath": {
        "src": "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol:6",
        "version": {
          "withMetadata": "ec3ddd22746eb5775475c858ba90773fb20b0b39cfe88faa14b9db876cf7d7ef",
          "withoutMetadata": "ec3ddd22746eb5775475c858ba90773fb20b0b39cfe88faa14b9db876cf7d7ef",
          "linkedWithoutMetadata": "ec3ddd22746eb5775475c858ba90773fb20b0b39cfe88faa14b9db876cf7d7ef"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/libraries/SafeCast.sol:SafeCast": {
        "src": "@uniswap/v3-core/contracts/libraries/SafeCast.sol:6",
        "version": {
          "withMetadata": "cc8fb690c5f151f35a976bdf82b0ea8c588a9d768a87772972a43698a9bb7a3f",
          "withoutMetadata": "cc8fb690c5f151f35a976bdf82b0ea8c588a9d768a87772972a43698a9bb7a3f",
          "linkedWithoutMetadata": "cc8fb690c5f151f35a976bdf82b0ea8c588a9d768a87772972a43698a9bb7a3f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:IQuoter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "base64-sol/base64.sol:Base64": {
        "src": "base64-sol/base64.sol:8",
        "version": {
          "withMetadata": "0e170d6bee0aae9ecbc8a98bd12bf1a93195b97cd922cf4b371253292458ae6c",
          "withoutMetadata": "0e170d6bee0aae9ecbc8a98bd12bf1a93195b97cd922cf4b371253292458ae6c",
          "linkedWithoutMetadata": "0e170d6bee0aae9ecbc8a98bd12bf1a93195b97cd922cf4b371253292458ae6c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:ThalesAMMDefaultLiquidityProvider": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:11",
        "version": {
          "withMetadata": "29c5dc137a0a164a51f9b8ad765eca83cbbae7327f6dba55df6d7f67bf170f04",
          "withoutMetadata": "29c5dc137a0a164a51f9b8ad765eca83cbbae7327f6dba55df6d7f67bf170f04",
          "linkedWithoutMetadata": "29c5dc137a0a164a51f9b8ad765eca83cbbae7327f6dba55df6d7f67bf170f04"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "setThalesAMMLiquidityPool(address)",
          "retrieveSUSDAmount(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "_initialized",
              "offset": 22,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 23,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "sUSD",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMMDefaultLiquidityProvider",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:14"
            },
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "ThalesAMMDefaultLiquidityProvider",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:ThalesAMMLiquidityPool": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:19",
        "version": {
          "withMetadata": "8bc1c55eeb4f89c9c4639d04488b92ada85f8c04a1feffd8ba86c0af1f3f743d",
          "withoutMetadata": "8bc1c55eeb4f89c9c4639d04488b92ada85f8c04a1feffd8ba86c0af1f3f743d",
          "linkedWithoutMetadata": "8bc1c55eeb4f89c9c4639d04488b92ada85f8c04a1feffd8ba86c0af1f3f743d"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize((address,address,address,uint256,uint256,uint256,uint256,bool))",
          "start()",
          "deposit(uint256)",
          "commitTrade(address,uint256)",
          "getOptionsForBuy(address,uint256,uint8)",
          "getOptionsForBuyByAddress(address,uint256,address)",
          "getOrCreateMarketPool(address)",
          "withdrawalRequest()",
          "partialWithdrawalRequest(uint256)",
          "prepareRoundClosing()",
          "processRoundClosingBatch(uint256)",
          "closeRound()",
          "exerciseMarketsReadyToExercised()",
          "exerciseMarketsReadyToExercisedBatch(uint256)",
          "isUserLPing(address)",
          "getMaxAvailableDepositForUser(address)",
          "getNeededStakedThalesToWithdrawForUser(address)",
          "getMarketPool(address)",
          "canCloseCurrentRound()",
          "hasMarketsReadyToBeExercised()",
          "cumulativePnLBetweenRounds(uint256,uint256)",
          "getRoundStartTime(uint256)",
          "getRoundEndTime(uint256)",
          "getMarketRound(address)",
          "getUsersCountInCurrentRound()",
          "setPaused(bool)",
          "setOnlyWhitelistedStakersAllowed(bool)",
          "setPoolRoundMastercopy(address)",
          "setStakedThalesMultiplier(uint256)",
          "setStakingThales(address)",
          "setMaxAllowedDeposit(uint256)",
          "setMinAllowedDeposit(uint256)",
          "setMaxAllowedUsers(uint256)",
          "setThalesAmm(address)",
          "setDefaultLiquidityProvider(address)",
          "setRoundLength(uint256)",
          "setWhitelistedAddresses(address[],bool)",
          "setWhitelistedStakerAddresses(address[],bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "52",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "103",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "thalesAMM",
              "offset": 1,
              "slot": "103",
              "type": "t_contract(IThalesAMM)49529",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:41"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:42"
            },
            {
              "label": "started",
              "offset": 20,
              "slot": "104",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:44"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:46"
            },
            {
              "label": "roundLength",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:47"
            },
            {
              "label": "firstRoundStartTime",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:48"
            },
            {
              "label": "roundPools",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:50"
            },
            {
              "label": "usersPerRound",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:52"
            },
            {
              "label": "userInRound",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:53"
            },
            {
              "label": "balancesPerRound",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:55"
            },
            {
              "label": "allocationPerRound",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:56"
            },
            {
              "label": "withdrawalRequested",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:58"
            },
            {
              "label": "tradingMarketsPerRound",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:60"
            },
            {
              "label": "isTradingMarketInARound",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:61"
            },
            {
              "label": "profitAndLossPerRound",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:63"
            },
            {
              "label": "cumulativeProfitAndLoss",
              "offset": 0,
              "slot": "117",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:64"
            },
            {
              "label": "maxAllowedDeposit",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:66"
            },
            {
              "label": "minDepositAmount",
              "offset": 0,
              "slot": "119",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:67"
            },
            {
              "label": "maxAllowedUsers",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:68"
            },
            {
              "label": "usersCurrentlyInPool",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:69"
            },
            {
              "label": "defaultLiquidityProvider",
              "offset": 0,
              "slot": "122",
              "type": "t_address",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:71"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "123",
              "type": "t_contract(IStakingThales)49359",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:73"
            },
            {
              "label": "stakedThalesMultiplier",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:75"
            },
            {
              "label": "poolRoundMastercopy",
              "offset": 0,
              "slot": "125",
              "type": "t_address",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:77"
            },
            {
              "label": "whitelistedDeposits",
              "offset": 0,
              "slot": "126",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:79"
            },
            {
              "label": "totalDeposited",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:81"
            },
            {
              "label": "onlyWhitelistedStakersAllowed",
              "offset": 0,
              "slot": "128",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:83"
            },
            {
              "label": "whitelistedStakers",
              "offset": 0,
              "slot": "129",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:85"
            },
            {
              "label": "needsTransformingCollateral",
              "offset": 0,
              "slot": "130",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:87"
            },
            {
              "label": "marketAlreadyExercisedInRound",
              "offset": 0,
              "slot": "131",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:89"
            },
            {
              "label": "roundClosingPrepared",
              "offset": 0,
              "slot": "132",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:91"
            },
            {
              "label": "usersProcessedInRound",
              "offset": 0,
              "slot": "133",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:93"
            },
            {
              "label": "marketsProcessedInRound",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:95"
            },
            {
              "label": "withdrawalShare",
              "offset": 0,
              "slot": "135",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)49359": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMM)49529": {
              "label": "contract IThalesAMM",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolData.sol:ThalesAMMLiquidityPoolData": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolData.sol:10",
        "version": {
          "withMetadata": "ae53f1b7b3a2a34fe3d20ef98304e9ac0960824b6b7404f58ace3765bec4d88d",
          "withoutMetadata": "ae53f1b7b3a2a34fe3d20ef98304e9ac0960824b6b7404f58ace3765bec4d88d",
          "linkedWithoutMetadata": "ae53f1b7b3a2a34fe3d20ef98304e9ac0960824b6b7404f58ace3765bec4d88d"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getLiquidityPoolData(address)",
          "getUserLiquidityPoolData(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:ThalesAMMLiquidityPoolRound": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:10",
        "version": {
          "withMetadata": "af074302745d7edbd34d993a0dce862e9e43bd1707457f0868404eca62b80d75",
          "withoutMetadata": "af074302745d7edbd34d993a0dce862e9e43bd1707457f0868404eca62b80d75",
          "linkedWithoutMetadata": "af074302745d7edbd34d993a0dce862e9e43bd1707457f0868404eca62b80d75"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256,uint256,uint256)",
          "updateRoundTimes(uint256,uint256)",
          "exerciseMarketReadyToExercised(address)",
          "moveOptions(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ThalesAMMLiquidityPool)15993",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:16"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:17"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:19"
            },
            {
              "label": "roundStartTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:20"
            },
            {
              "label": "roundEndTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:21"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:25"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ThalesAMMLiquidityPool)15993": {
              "label": "contract ThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRoundMastercopy.sol:ThalesAMMLiquidityPoolRoundMastercopy": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRoundMastercopy.sol:7",
        "version": {
          "withMetadata": "8db52ee3d3a38acb77f6187d33e58a1daf51dd569d3861a326c5db6558926809",
          "withoutMetadata": "8db52ee3d3a38acb77f6187d33e58a1daf51dd569d3861a326c5db6558926809",
          "linkedWithoutMetadata": "8db52ee3d3a38acb77f6187d33e58a1daf51dd569d3861a326c5db6558926809"
        },
        "inherit": [
          "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:ThalesAMMLiquidityPoolRound"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ThalesAMMLiquidityPoolRoundMastercopy",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRoundMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ThalesAMMLiquidityPool)15993",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:16"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:17"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:19"
            },
            {
              "label": "roundStartTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:20"
            },
            {
              "label": "roundEndTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:21"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:25"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ThalesAMMLiquidityPool)15993": {
              "label": "contract ThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/Referrals.sol:Referrals": {
        "src": "contracts/AMM/Referrals.sol:20",
        "version": {
          "withMetadata": "fc3e8c90eb2cc3fa6c9549c00c0f06a134b646f78023c9f11f9f5331342ca541",
          "withoutMetadata": "fc3e8c90eb2cc3fa6c9549c00c0f06a134b646f78023c9f11f9f5331342ca541",
          "linkedWithoutMetadata": "fc3e8c90eb2cc3fa6c9549c00c0f06a134b646f78023c9f11f9f5331342ca541"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "setReferrer(address,address)",
          "setWhitelistedAddress(address,bool)",
          "setTradedBefore(address[])",
          "setSportTradedBefore(address[])",
          "setSportsAMM(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:21"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:22"
            },
            {
              "label": "referralStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:23"
            },
            {
              "label": "tradedBefore",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:25"
            },
            {
              "label": "sportReferrals",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:27"
            },
            {
              "label": "sportReferralStarted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:28"
            },
            {
              "label": "sportTradedBefore",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:29"
            },
            {
              "label": "sportsAMM",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:30"
            },
            {
              "label": "parlayAMM",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/SafeBox.sol:SafeBox": {
        "src": "contracts/AMM/SafeBox.sol:8",
        "version": {
          "withMetadata": "dba3d9f7873fe20e548501da45382e8d74a62304e11f3e6ebcb75dcc69a8e41d",
          "withoutMetadata": "dba3d9f7873fe20e548501da45382e8d74a62304e11f3e6ebcb75dcc69a8e41d",
          "linkedWithoutMetadata": "dba3d9f7873fe20e548501da45382e8d74a62304e11f3e6ebcb75dcc69a8e41d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "retrieveSUSDAmount(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_initialized",
              "offset": 22,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 23,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)6957",
              "contract": "SafeBox",
              "src": "contracts/AMM/SafeBox.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/SafeBoxBuyback.sol:SafeBoxBuyback": {
        "src": "contracts/AMM/SafeBoxBuyback.sol:16",
        "version": {
          "withMetadata": "b131085bb4802514fa39a582f48a9e913244de918b42ef14e16ea69c7035eecc",
          "withoutMetadata": "b131085bb4802514fa39a582f48a9e913244de918b42ef14e16ea69c7035eecc",
          "linkedWithoutMetadata": "b131085bb4802514fa39a582f48a9e913244de918b42ef14e16ea69c7035eecc"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "executeBuyback()",
          "getTicksFromLastBuys()",
          "setTickRate(uint256)",
          "setTickLength(uint256)",
          "setThalesToken(address)",
          "setWETHAddress(address)",
          "setSwapRouter(address)",
          "setUniswapV3Factory(address)",
          "setMinAccepted(uint256)",
          "setBuybacksEnabled(bool)",
          "retrieveSUSDAmount(address payable,uint256)",
          "retrieveThalesAmount(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "_initialized",
              "offset": 22,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 23,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "sUSD",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:19"
            },
            {
              "label": "thalesToken",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:20"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:21"
            },
            {
              "label": "swapRouter",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ISwapRouter)12982",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:23"
            },
            {
              "label": "uniswapFactory",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IUniswapV3Factory)12117",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:24"
            },
            {
              "label": "sUSDperTick",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:26"
            },
            {
              "label": "tickLength",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:27"
            },
            {
              "label": "lastBuyback",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:28"
            },
            {
              "label": "buybacksEnabled",
              "offset": 0,
              "slot": "11",
              "type": "t_bool",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:30"
            },
            {
              "label": "minAccepted",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ISwapRouter)12982": {
              "label": "contract ISwapRouter",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV3Factory)12117": {
              "label": "contract IUniswapV3Factory",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/ThalesAMM.sol:ThalesAMM": {
        "src": "contracts/AMM/ThalesAMM.sol:30",
        "version": {
          "withMetadata": "1c8b9d780115e0472a17eb1f1bf5093f6cde18fbbf451c42844c5c7371ca6ac5",
          "withoutMetadata": "1c8b9d780115e0472a17eb1f1bf5093f6cde18fbbf451c42844c5c7371ca6ac5",
          "linkedWithoutMetadata": "1c8b9d780115e0472a17eb1f1bf5093f6cde18fbbf451c42844c5c7371ca6ac5"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256,address,uint256,uint256,uint256)",
          "availableToBuyFromAMM(address,uint8)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)",
          "buyPriceImpact(address,uint8,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellPriceImpact(address,uint8,uint256)",
          "price(address,uint8)",
          "isMarketInAMMTrading(address)",
          "getCapPerAsset(bytes32)",
          "buyFromAMMWithReferrer(address,uint8,uint256,uint256,uint256,address)",
          "buyFromAMMWithDifferentCollateralAndReferrer(address,uint8,uint256,uint256,uint256,address,address)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "retrieveSUSDAmount(address payable,uint256)",
          "setMinimalTimeLeftToMaturity(uint256)",
          "setWhitelistedAddress(address,bool)",
          "setSafeBoxFeePerAddress(address,uint256)",
          "setMinSpreadPerAddress(address,uint256)",
          "setMinMaxSpread(uint256,uint256)",
          "setSafeBoxData(address,uint256)",
          "setMinMaxSupportedPriceAndCap(uint256,uint256,uint256)",
          "setImpliedVolatilityPerAsset(bytes32,uint256)",
          "setPriceFeedAndSUSD(address,address)",
          "setAmmUtils(address)",
          "setStakingThalesAndReferrals(address,address,uint256)",
          "setPositionalMarketManager(address)",
          "setLiquidityPool(address)",
          "setCurveSUSD(address,address,address,address,bool,uint256)",
          "setCapPerAsset(bytes32,uint256)",
          "transferTokens(address[],address payable,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "priceFeed",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IPriceFeed)48614",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:46"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:47"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:48"
            },
            {
              "label": "capPerMarket",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:50"
            },
            {
              "label": "min_spread",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:51"
            },
            {
              "label": "max_spread",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:52"
            },
            {
              "label": "impliedVolatilityPerAsset",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:54"
            },
            {
              "label": "minimalTimeLeftToMaturity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:56"
            },
            {
              "label": "spentOnMarket",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:58"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:60"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:61"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IStakingThales)49359",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:63"
            },
            {
              "label": "minSupportedPrice",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:65"
            },
            {
              "label": "maxSupportedPrice",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:66"
            },
            {
              "label": "_capPerAsset",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:68"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:70"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:72"
            },
            {
              "label": "referrerFee",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:73"
            },
            {
              "label": "curveSUSD",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(ICurveSUSD)47856",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:75"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:77"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:78"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:79"
            },
            {
              "label": "curveOnrampEnabled",
              "offset": 20,
              "slot": "26",
              "type": "t_bool",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:81"
            },
            {
              "label": "maxAllowedPegSlippagePercentage",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:83"
            },
            {
              "label": "ammUtils",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IThalesAMMUtils)49654",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:85"
            },
            {
              "label": "safeBoxFeePerAddress",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:90"
            },
            {
              "label": "min_spreadPerAddress",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:91"
            },
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "31",
              "type": "t_contract(ThalesAMMLiquidityPool)15993",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:93"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ICurveSUSD)47856": {
              "label": "contract ICurveSUSD",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)48614": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)49359": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMMUtils)49654": {
              "label": "contract IThalesAMMUtils",
              "numberOfBytes": "20"
            },
            "t_contract(ThalesAMMLiquidityPool)15993": {
              "label": "contract ThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/ThalesAMMUtils.sol:ThalesAMMUtils": {
        "src": "contracts/AMM/ThalesAMMUtils.sol:10",
        "version": {
          "withMetadata": "617a75be6d12cbc0c011492a712b71f60d4a20319d6cdab424d25a08f255abfb",
          "withoutMetadata": "617a75be6d12cbc0c011492a712b71f60d4a20319d6cdab424d25a08f255abfb",
          "linkedWithoutMetadata": "617a75be6d12cbc0c011492a712b71f60d4a20319d6cdab424d25a08f255abfb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateOdds(uint256,uint256,uint256,uint256)",
          "calculateDiscount((uint256,uint256,uint256,uint256,uint256))",
          "buyPriceImpactImbalancedSkew((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "sellPriceImpactImbalancedSkew(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "balanceOfPositionOnMarket(address,uint8,address)",
          "balanceOfPositionsOnMarket(address,uint8,address)",
          "getBalanceOfPositionsOnMarket(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/EscrowThales.sol:EscrowThales": {
        "src": "contracts/EscrowAndStaking/EscrowThales.sol:18",
        "version": {
          "withMetadata": "3b592ace50172ef66fc88caf1df0f75d5d0d845565a14c3b56ec7f2d195c19e1",
          "withoutMetadata": "3b592ace50172ef66fc88caf1df0f75d5d0d845565a14c3b56ec7f2d195c19e1",
          "linkedWithoutMetadata": "3b592ace50172ef66fc88caf1df0f75d5d0d845565a14c3b56ec7f2d195c19e1"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/interfaces/IEscrowThales.sol:IEscrowThales"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "getStakerPeriod(address,uint256)",
          "getStakerAmounts(address,uint256)",
          "getStakedEscrowedBalanceForRewards(address)",
          "claimable(address)",
          "addToEscrow(address,uint256)",
          "vest(uint256)",
          "addTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "subtractTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "updateCurrentPeriod()",
          "setStakingThalesContract(address)",
          "enableTestMode()",
          "setAirdropContract(address)",
          "setThalesStakingRewardsPool(address)",
          "fixEscrowEntry(address)",
          "mergeAccount(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "vestingToken",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20)6957",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:22"
            },
            {
              "label": "iStakingThales",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IStakingThales)49359",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:23"
            },
            {
              "label": "airdropContract",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:24"
            },
            {
              "label": "totalEscrowedRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:27"
            },
            {
              "label": "totalEscrowBalanceNotIncludedInStaking",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:28"
            },
            {
              "label": "currentVestingPeriod",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:29"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:31"
            },
            {
              "label": "vestingEntries",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_struct(VestingEntry)22106_storage)10_storage)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:38"
            },
            {
              "label": "totalAccountEscrowedAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:39"
            },
            {
              "label": "lastPeriodAddedReward",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:41"
            },
            {
              "label": "testMode",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:43"
            },
            {
              "label": "ThalesStakingRewardsPool",
              "offset": 1,
              "slot": "15",
              "type": "t_contract(IThalesStakingRewardsPool)49734",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VestingEntry)22106_storage)10_storage": {
              "label": "struct EscrowThales.VestingEntry[10]",
              "numberOfBytes": "640"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)49359": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesStakingRewardsPool)49734": {
              "label": "contract IThalesStakingRewardsPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(VestingEntry)22106_storage)10_storage)": {
              "label": "mapping(address => struct EscrowThales.VestingEntry[10])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(VestingEntry)22106_storage": {
              "label": "struct EscrowThales.VestingEntry",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "vesting_period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:LPStakingDoubleRewards": {
        "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:12",
        "version": {
          "withMetadata": "b6d727a329107e6d7127091be827b2bd228567b736e7d0bcb959c5dd1bb7f42e",
          "withoutMetadata": "b6d727a329107e6d7127091be827b2bd228567b736e7d0bcb959c5dd1bb7f42e",
          "linkedWithoutMetadata": "b6d727a329107e6d7127091be827b2bd228567b736e7d0bcb959c5dd1bb7f42e"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "lastTimeRewardApplicable()",
          "rewardPerToken()",
          "earned(address)",
          "getRewardForDuration()",
          "getSecondRewardForDuration()",
          "stake(uint256)",
          "withdraw(uint256)",
          "getReward()",
          "exit()",
          "notifyRewardAmount(uint256,uint256)",
          "addReward(uint256)",
          "addSecondReward(uint256)",
          "addBothRewards(uint256,uint256)",
          "recoverERC20(address,uint256)",
          "setRewardsDuration(uint256)",
          "setSecondRewardsToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "rewardsToken",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:18"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:19"
            },
            {
              "label": "secondRewardsToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:20"
            },
            {
              "label": "periodFinish",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:21"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:22"
            },
            {
              "label": "secondRewardRate",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:23"
            },
            {
              "label": "rewardsDuration",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:25"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:26"
            },
            {
              "label": "lastUpdateTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:27"
            },
            {
              "label": "rewardPerTokenStored",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:28"
            },
            {
              "label": "rewardPerSecondTokenStored",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:29"
            },
            {
              "label": "userRewardPerTokenPaid",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:31"
            },
            {
              "label": "userRewardPerSecondTokenPaid",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:32"
            },
            {
              "label": "rewards",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:33"
            },
            {
              "label": "secondRewards",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/LPStakingRewards.sol:LPStakingRewards": {
        "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:13",
        "version": {
          "withMetadata": "1a3c84a7970e7c9ecd12e2944ea6cef896af72e226467fbaa202f27032c41b6f",
          "withoutMetadata": "1a3c84a7970e7c9ecd12e2944ea6cef896af72e226467fbaa202f27032c41b6f",
          "linkedWithoutMetadata": "1a3c84a7970e7c9ecd12e2944ea6cef896af72e226467fbaa202f27032c41b6f"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "lastTimeRewardApplicable()",
          "rewardPerToken()",
          "earned(address)",
          "getRewardForDuration()",
          "stake(uint256)",
          "withdraw(uint256)",
          "getReward()",
          "exit()",
          "notifyRewardAmount(uint256)",
          "addReward(uint256)",
          "recoverERC20(address,uint256)",
          "setRewardsDuration(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "rewardsToken",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:19"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:20"
            },
            {
              "label": "periodFinish",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:21"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:22"
            },
            {
              "label": "rewardsDuration",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:23"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:24"
            },
            {
              "label": "lastUpdateTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:25"
            },
            {
              "label": "rewardPerTokenStored",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:26"
            },
            {
              "label": "userRewardPerTokenPaid",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:28"
            },
            {
              "label": "rewards",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:29"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/StakingData.sol:StakingData": {
        "src": "contracts/EscrowAndStaking/StakingData.sol:12",
        "version": {
          "withMetadata": "61be4d5947c0220a3b85c7ac916bd2729288219fb90e9b19b076799fae3147a3",
          "withoutMetadata": "61be4d5947c0220a3b85c7ac916bd2729288219fb90e9b19b076799fae3147a3",
          "linkedWithoutMetadata": "61be4d5947c0220a3b85c7ac916bd2729288219fb90e9b19b076799fae3147a3"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getStakingData()",
          "getUserStakingData(address)",
          "getUserVestingData(address)",
          "setStakingThales(address)",
          "setEscrowThales(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "stakingThales",
              "offset": 1,
              "slot": "3",
              "type": "t_address",
              "contract": "StakingData",
              "src": "contracts/EscrowAndStaking/StakingData.sol:62"
            },
            {
              "label": "escrowThales",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "StakingData",
              "src": "contracts/EscrowAndStaking/StakingData.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/StakingThales.sol:StakingThales": {
        "src": "contracts/EscrowAndStaking/StakingThales.sol:30",
        "version": {
          "withMetadata": "d09790866fbdf0671a83106de613703f59742e64db278478438eb03fee21d9b1",
          "withoutMetadata": "d09790866fbdf0671a83106de613703f59742e64db278478438eb03fee21d9b1",
          "linkedWithoutMetadata": "d09790866fbdf0671a83106de613703f59742e64db278478438eb03fee21d9b1"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/interfaces/IStakingThales.sol:IStakingThales"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,uint256,uint256,address)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "setStakingParameters(bool,bool,uint256,uint256,bool)",
          "setStakingRewardsParameters(uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256)",
          "setAddresses(address,address,address,address,address,address,address,address,address,address,address)",
          "setEscrow(address)",
          "setSupportedSportVault(address,bool)",
          "setSupportedAMMVault(address,bool)",
          "getSNXRewardsAddress()",
          "getSNXStaked(address)",
          "getBaseReward(address)",
          "getAMMVolume(address)",
          "getThalesAMMVolume(address)",
          "getThalesRangedAMMVolume(address)",
          "getExoticMarketsVolume(address)",
          "getSportsAMMVolume(address)",
          "getSNXBonusPercentage(address)",
          "getSNXBonus(address)",
          "getAMMBonusPercentage(address)",
          "getAMMBonus(address)",
          "getTotalBonusPercentage(address)",
          "getTotalBonus(address)",
          "canClosePeriod()",
          "getSNXTargetRatio()",
          "getCRatio(address)",
          "getSNXRateForCurrency()",
          "getSNXDebt(address)",
          "startStakingPeriod()",
          "closePeriod()",
          "stake(uint256)",
          "startUnstake(uint256)",
          "cancelUnstake()",
          "unstake()",
          "claimReward()",
          "claimRewardOnBehalf(address)",
          "updateVolume(address,uint256)",
          "mergeAccount(address)",
          "setCanClaimOnBehalf(address,bool)",
          "delegateVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "iEscrowThales",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IEscrowThales)47949",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)6957",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
            },
            {
              "label": "feeToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)6957",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
            },
            {
              "label": "SNXRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISNXRewards)48683",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
            },
            {
              "label": "thalesRoyale",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IThalesRoyale)49724",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IPriceFeed)48614",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
            },
            {
              "label": "periodsOfStaking",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
            },
            {
              "label": "lastPeriodTimeStamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
            },
            {
              "label": "durationPeriod",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
            },
            {
              "label": "unstakeDurationPeriod",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
            },
            {
              "label": "startTimeStamp",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
            },
            {
              "label": "currentPeriodRewards",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
            },
            {
              "label": "currentPeriodFees",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
            },
            {
              "label": "distributeFeesEnabled",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
            },
            {
              "label": "fixedPeriodReward",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
            },
            {
              "label": "periodExtraReward",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
            },
            {
              "label": "totalSNXRewardsInPeriod",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
            },
            {
              "label": "totalSNXFeesInPeriod",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
            },
            {
              "label": "claimEnabled",
              "offset": 0,
              "slot": "23",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
            },
            {
              "label": "stakerLifetimeRewardsClaimed",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
            },
            {
              "label": "stakerFeesClaimed",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
            },
            {
              "label": "_totalStakedAmount",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
            },
            {
              "label": "_totalEscrowedAmount",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
            },
            {
              "label": "_totalPendingStakeAmount",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
            },
            {
              "label": "_totalUnclaimedRewards",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
            },
            {
              "label": "_totalRewardsClaimed",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
            },
            {
              "label": "_totalRewardFeesClaimed",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
            },
            {
              "label": "lastUnstakeTime",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
            },
            {
              "label": "unstaking",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
            },
            {
              "label": "unstakingAmount",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
            },
            {
              "label": "_stakedBalances",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
            },
            {
              "label": "_lastRewardsClaimedPeriod",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:73"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "37",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:74"
            },
            {
              "label": "lastAMMUpdatePeriod",
              "offset": 0,
              "slot": "38",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
            },
            {
              "label": "stakerAMMVolume",
              "offset": 0,
              "slot": "39",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25312_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
            },
            {
              "label": "extraRewardsActive",
              "offset": 0,
              "slot": "40",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
            },
            {
              "label": "ThalesStakingRewardsPool",
              "offset": 1,
              "slot": "40",
              "type": "t_contract(IThalesStakingRewardsPool)49734",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:87"
            },
            {
              "label": "maxSNXRewardsPercentage",
              "offset": 0,
              "slot": "41",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
            },
            {
              "label": "maxAMMVolumeRewardsPercentage",
              "offset": 0,
              "slot": "42",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
            },
            {
              "label": "AMMVolumeRewardsMultiplier",
              "offset": 0,
              "slot": "43",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
            },
            {
              "label": "maxThalesRoyaleRewardsPercentage",
              "offset": 0,
              "slot": "44",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:92"
            },
            {
              "label": "SNXVolumeRewardsMultiplier",
              "offset": 0,
              "slot": "45",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
            },
            {
              "label": "_lastStakingPeriod",
              "offset": 0,
              "slot": "46",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
            },
            {
              "label": "totalStakedLastPeriodEnd",
              "offset": 0,
              "slot": "47",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
            },
            {
              "label": "totalEscrowedLastPeriodEnd",
              "offset": 0,
              "slot": "48",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
            },
            {
              "label": "exoticBonds",
              "offset": 0,
              "slot": "49",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
            },
            {
              "label": "addressResolver",
              "offset": 0,
              "slot": "50",
              "type": "t_contract(IAddressResolver)47829",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
            },
            {
              "label": "sportsAMM",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
            },
            {
              "label": "lastThalesAMMUpdatePeriod",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
            },
            {
              "label": "thalesAMMVolume",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25312_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
            },
            {
              "label": "lastThalesRangedAMMUpdatePeriod",
              "offset": 0,
              "slot": "55",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
            },
            {
              "label": "thalesRangedAMMVolume",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25312_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
            },
            {
              "label": "lastExoticMarketsUpdatePeriod",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
            },
            {
              "label": "exoticMarketsVolume",
              "offset": 0,
              "slot": "58",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25312_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
            },
            {
              "label": "lastSportsAMMUpdatePeriod",
              "offset": 0,
              "slot": "59",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
            },
            {
              "label": "sportsAMMVolume",
              "offset": 0,
              "slot": "60",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25312_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
            },
            {
              "label": "canClaimOnBehalf",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:119"
            },
            {
              "label": "mergeAccountEnabled",
              "offset": 0,
              "slot": "62",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:121"
            },
            {
              "label": "delegatedVolume",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_address)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
            },
            {
              "label": "supportedSportVault",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
            },
            {
              "label": "supportedAMMVault",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:125"
            },
            {
              "label": "sportsAMMLiquidityPool",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(ISportsAMMLiquidityPool)49282",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:127"
            },
            {
              "label": "thalesAMMLiquidityPool",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(IThalesAMMLiquidityPool)49539",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:128"
            },
            {
              "label": "stakingThalesBonusRewardsManager",
              "offset": 0,
              "slot": "68",
              "type": "t_contract(IStakingThalesBonusRewardsManager)49387",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:130"
            },
            {
              "label": "parlayAMMLiquidityPool",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(IParlayAMMLiquidityPool)48020",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(AMMVolumeEntry)25312_storage)4_storage": {
              "label": "struct StakingThales.AMMVolumeEntry[4]",
              "numberOfBytes": "256"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IAddressResolver)47829": {
              "label": "contract IAddressResolver",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IEscrowThales)47949": {
              "label": "contract IEscrowThales",
              "numberOfBytes": "20"
            },
            "t_contract(IParlayAMMLiquidityPool)48020": {
              "label": "contract IParlayAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)48614": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(ISNXRewards)48683": {
              "label": "contract ISNXRewards",
              "numberOfBytes": "20"
            },
            "t_contract(ISportsAMMLiquidityPool)49282": {
              "label": "contract ISportsAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThalesBonusRewardsManager)49387": {
              "label": "contract IStakingThalesBonusRewardsManager",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMMLiquidityPool)49539": {
              "label": "contract IThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesRoyale)49724": {
              "label": "contract IThalesRoyale",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesStakingRewardsPool)49734": {
              "label": "contract IThalesStakingRewardsPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25312_storage)4_storage)": {
              "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AMMVolumeEntry)25312_storage": {
              "label": "struct StakingThales.AMMVolumeEntry",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:StakingThalesBonusRewardsManager": {
        "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:11",
        "version": {
          "withMetadata": "3122d8254ff6312aaa883519b350b2c69377dd7e383b79b7019031b869686754",
          "withoutMetadata": "3122d8254ff6312aaa883519b350b2c69377dd7e383b79b7019031b869686754",
          "linkedWithoutMetadata": "3122d8254ff6312aaa883519b350b2c69377dd7e383b79b7019031b869686754"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "storePoints(address,address,uint256,uint256)",
          "setStakingThales(address)",
          "setKnownVault(address,bool)",
          "setKnownLiquidityPool(address,bool)",
          "setKnownTradingAMM(address,bool)",
          "setStakingBaseDivider(uint256)",
          "setMaxStakingMultiplier(uint256)",
          "setMultipliers(uint256,uint256,uint256)",
          "setUseNewModel(bool)",
          "getUserRoundBonusShare(address,uint256)",
          "getStakingMultiplier(address)",
          "getStakersLeaderboardData(address[],uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "_initialized",
              "offset": 22,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 23,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "stakingThales",
              "offset": 1,
              "slot": "3",
              "type": "t_address",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:24"
            },
            {
              "label": "stakingBaseDivider",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:26"
            },
            {
              "label": "maxStakingMultiplier",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:28"
            },
            {
              "label": "vaultsMultiplier",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:30"
            },
            {
              "label": "lpMultiplier",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:31"
            },
            {
              "label": "tradingMultiplier",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:32"
            },
            {
              "label": "userVaultBasePointsPerRound",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:34"
            },
            {
              "label": "userLPBasePointsPerRound",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:35"
            },
            {
              "label": "userTradingBasePointsPerRound",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:36"
            },
            {
              "label": "userRoundBonusPoints",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:37"
            },
            {
              "label": "totalVaultBasePointsPerRound",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:39"
            },
            {
              "label": "totalLPBasePointsPerRound",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:40"
            },
            {
              "label": "totalTradingBasePointsPerRound",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:41"
            },
            {
              "label": "totalRoundBonusPoints",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:42"
            },
            {
              "label": "knownVaults",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:44"
            },
            {
              "label": "knownLiquidityPools",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:45"
            },
            {
              "label": "knownTradingAMMs",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:46"
            },
            {
              "label": "useNewBonusModel",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:ThalesStakingRewardsPool": {
        "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:17",
        "version": {
          "withMetadata": "f6eecb98c065541db7e73ea2b662bb946a8ffb111b247fe78be7c989922958a4",
          "withoutMetadata": "f6eecb98c065541db7e73ea2b662bb946a8ffb111b247fe78be7c989922958a4",
          "linkedWithoutMetadata": "f6eecb98c065541db7e73ea2b662bb946a8ffb111b247fe78be7c989922958a4"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/interfaces/IThalesStakingRewardsPool.sol:IThalesStakingRewardsPool"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)",
          "setStakingThalesContract(address)",
          "setEscrow(address)",
          "setRewardToken(address)",
          "addToEscrow(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "iStakingThales",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IStakingThales)49359",
              "contract": "ThalesStakingRewardsPool",
              "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:28"
            },
            {
              "label": "iEscrowThales",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IEscrowThales)47949",
              "contract": "ThalesStakingRewardsPool",
              "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:29"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)6957",
              "contract": "ThalesStakingRewardsPool",
              "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:30"
            },
            {
              "label": "lifetimeClaimedRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ThalesStakingRewardsPool",
              "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IEscrowThales)47949": {
              "label": "contract IEscrowThales",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)49359": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/OwnedWithInit.sol:OwnedWithInit": {
        "src": "contracts/OwnedWithInit.sol:5",
        "version": {
          "withMetadata": "3cd682471ca2fa0cedff6ac8b5dfbadd85246ca2f5b6ac5e11c48816f133c1b0",
          "withoutMetadata": "3cd682471ca2fa0cedff6ac8b5dfbadd85246ca2f5b6ac5e11c48816f133c1b0",
          "linkedWithoutMetadata": "3cd682471ca2fa0cedff6ac8b5dfbadd85246ca2f5b6ac5e11c48816f133c1b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "nominateNewOwner(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/Position.sol:Position": {
        "src": "contracts/Positions/Position.sol:15",
        "version": {
          "withMetadata": "97ffeef08552415873802e35fff81e29d88ccf8b00ac5bd298fc981ee0a0e9a1",
          "withoutMetadata": "97ffeef08552415873802e35fff81e29d88ccf8b00ac5bd298fc981ee0a0e9a1",
          "linkedWithoutMetadata": "97ffeef08552415873802e35fff81e29d88ccf8b00ac5bd298fc981ee0a0e9a1"
        },
        "inherit": [
          "contracts/interfaces/IPosition.sol:IPosition",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "allowance(address,address)",
          "mint(address,uint256)",
          "exercise(address)",
          "exerciseWithAmount(address,uint256)",
          "expire(address payable)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getBalanceOf(address)",
          "getTotalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/Positions/Position.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:18"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:19"
            },
            {
              "label": "market",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PositionalMarket)31424",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:22"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:24"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:25"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:28"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:33"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PositionalMarket)31424": {
              "label": "contract PositionalMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionMastercopy.sol:PositionMastercopy": {
        "src": "contracts/Positions/PositionMastercopy.sol:8",
        "version": {
          "withMetadata": "d710c524893d8cebdfe5522981be744daa6bdc269378056ba39d4e021f75e9ad",
          "withoutMetadata": "d710c524893d8cebdfe5522981be744daa6bdc269378056ba39d4e021f75e9ad",
          "linkedWithoutMetadata": "d710c524893d8cebdfe5522981be744daa6bdc269378056ba39d4e021f75e9ad"
        },
        "inherit": [
          "contracts/Positions/Position.sol:Position",
          "contracts/interfaces/IPosition.sol:IPosition",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PositionMastercopy",
            "src": "contracts/Positions/PositionMastercopy.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:18"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:19"
            },
            {
              "label": "market",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PositionalMarket)31424",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:22"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:24"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:25"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:28"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:33"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PositionalMarket)31424": {
              "label": "contract PositionalMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarket.sol:PositionalMarket": {
        "src": "contracts/Positions/PositionalMarket.sol:18",
        "version": {
          "withMetadata": "deb818b83efc4e1bee333dfe3a2d0da21dfa7519c06600bff9abad3f124abd8e",
          "withoutMetadata": "deb818b83efc4e1bee333dfe3a2d0da21dfa7519c06600bff9abad3f124abd8e",
          "linkedWithoutMetadata": "deb818b83efc4e1bee333dfe3a2d0da21dfa7519c06600bff9abad3f124abd8e"
        },
        "inherit": [
          "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket",
          "contracts/OwnedWithInit.sol:OwnedWithInit"
        ],
        "libraries": [],
        "methods": [
          "initialize((address,address,address,address,bytes32,uint256,uint256[2],uint256,address,address,address))",
          "phase()",
          "oraclePriceAndTimestamp()",
          "oraclePrice()",
          "canResolve()",
          "result()",
          "balancesOf(address)",
          "totalSupplies()",
          "getMaximumBurnable(address)",
          "getOptions()",
          "getOracleDetails()",
          "requireUnpaused()",
          "mint(uint256)",
          "burnOptionsMaximum()",
          "burnOptions(uint256)",
          "resolve()",
          "exerciseOptions()",
          "expire(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/Positions/PositionalMarket.sol:75"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:7"
            },
            {
              "label": "options",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Options)30212_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:59"
            },
            {
              "label": "times",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Times)30217_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:60"
            },
            {
              "label": "oracleDetails",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(OracleDetails)30228_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:61"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Fees)33199_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:62"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IPriceFeed)48614",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:63"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)6957",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:64"
            },
            {
              "label": "deposited",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:68"
            },
            {
              "label": "initialMint",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:69"
            },
            {
              "label": "creator",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:70"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:71"
            },
            {
              "label": "initialized",
              "offset": 21,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)48614": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(Position)30175": {
              "label": "contract Position",
              "numberOfBytes": "20"
            },
            "t_struct(Fees)33199_storage": {
              "label": "struct PositionalMarketManager.Fees",
              "members": [
                {
                  "label": "poolFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "creatorFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Options)30212_storage": {
              "label": "struct PositionalMarket.Options",
              "members": [
                {
                  "label": "up",
                  "type": "t_contract(Position)30175",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "down",
                  "type": "t_contract(Position)30175",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(OracleDetails)30228_storage": {
              "label": "struct PositionalMarket.OracleDetails",
              "members": [
                {
                  "label": "key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "strikePrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "finalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "customMarket",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "iOracleInstanceAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Times)30217_storage": {
              "label": "struct PositionalMarket.Times",
              "members": [
                {
                  "label": "maturity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketData.sol:PositionalMarketData": {
        "src": "contracts/Positions/PositionalMarketData.sol:16",
        "version": {
          "withMetadata": "8f9ac240a196ed19e52316121ffb0570886ba06cfa1fae1fc4a309926b5853ac",
          "withoutMetadata": "8f9ac240a196ed19e52316121ffb0570886ba06cfa1fae1fc4a309926b5853ac",
          "linkedWithoutMetadata": "8f9ac240a196ed19e52316121ffb0570886ba06cfa1fae1fc4a309926b5853ac"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getMarketParameters(address)",
          "getMarketData(address)",
          "getAccountMarketData(address,address)",
          "getBatchPriceImpactForAllActiveMarkets(uint256,uint256)",
          "getBatchBasePricesForAllActiveMarkets(uint256,uint256)",
          "getAvailableAssets()",
          "getMaturityDates(bytes32)",
          "getMarketsForAssetAndStrikeDate(bytes32,uint256)",
          "getActiveMarketsInfoPerPosition(address[],uint8)",
          "getRangedActiveMarketsInfoPerPosition(address[],uint8)",
          "getAmmMarketData(address)",
          "getRangedAmmMarketData(address)",
          "setPositionalMarketManager(address)",
          "setThalesAMM(address)",
          "setRangedMarketsAMM(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "manager",
              "offset": 1,
              "slot": "3",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:124"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:125"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:126"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketFactory.sol:PositionalMarketFactory": {
        "src": "contracts/Positions/PositionalMarketFactory.sol:18",
        "version": {
          "withMetadata": "d4ce836680d20e1f1db135ed060b183f121db684a59437f75536cebb9a76a082",
          "withoutMetadata": "d4ce836680d20e1f1db135ed060b183f121db684a59437f75536cebb9a76a082",
          "linkedWithoutMetadata": "d4ce836680d20e1f1db135ed060b183f121db684a59437f75536cebb9a76a082"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "createMarket((address,address,address,bytes32,uint256,uint256[2],uint256))",
          "setPositionalMarketManager(address)",
          "setPositionalMarketMastercopy(address)",
          "setPositionMastercopy(address)",
          "setThalesAMM(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "positionalMarketManager",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:20"
            },
            {
              "label": "positionalMarketMastercopy",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:22"
            },
            {
              "label": "positionMastercopy",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:23"
            },
            {
              "label": "limitOrderProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:25"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketManager.sol:PositionalMarketManager": {
        "src": "contracts/Positions/PositionalMarketManager.sol:25",
        "version": {
          "withMetadata": "b8daa5af844b12eb9143fab43dc314d8da77c0541018768c1ed1f53a4c9d5afd",
          "withoutMetadata": "b8daa5af844b12eb9143fab43dc314d8da77c0541018768c1ed1f53a4c9d5afd",
          "linkedWithoutMetadata": "b8daa5af844b12eb9143fab43dc314d8da77c0541018768c1ed1f53a4c9d5afd"
        },
        "inherit": [
          "contracts/interfaces/IPositionalMarketManager.sol:IPositionalMarketManager",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256,uint256)",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "incrementTotalDeposited(uint256)",
          "decrementTotalDeposited(uint256)",
          "createMarket(bytes32,uint256,uint256,uint256)",
          "createMarkets(bytes32[],uint256[],uint256[])",
          "transferSusdTo(address,address,uint256)",
          "resolveMarket(address)",
          "resolveMarketsBatch(address[])",
          "expireMarkets(address[])",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "canCreateMarket(bytes32,uint256,uint256)",
          "enableWhitelistedAddresses()",
          "disableWhitelistedAddresses()",
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "setWhitelistedAddresses(address[])",
          "setPositionalMarketFactory(address)",
          "setNeedsTransformingCollateral(bool)",
          "setExpiryDuration(uint256)",
          "setMaxTimeToMaturity(uint256)",
          "setPriceFeed(address)",
          "setOnlyAMMMintingAndBurning(bool)",
          "setsUSD(address)",
          "setPriceBuffer(uint256)",
          "setTimeframeBuffer(uint256)",
          "setMarketCreationEnabled(bool)",
          "setMarketCreationParameters(uint256,uint256)",
          "getStrikePriceStep(bytes32)",
          "getThalesAMM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "durations",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Durations)33204_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:47"
            },
            {
              "label": "capitalRequirement",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:48"
            },
            {
              "label": "marketCreationEnabled",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:50"
            },
            {
              "label": "customMarketCreationEnabled",
              "offset": 1,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:51"
            },
            {
              "label": "onlyWhitelistedAddressesCanCreateMarkets",
              "offset": 2,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:53"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:54"
            },
            {
              "label": "totalDeposited",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:56"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(AddressSet)51842_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:58"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(AddressSet)51842_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:59"
            },
            {
              "label": "_migratingManager",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(PositionalMarketManager)34896",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:61"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(IPriceFeed)48614",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:63"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IERC20)6957",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:64"
            },
            {
              "label": "positionalMarketFactory",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:66"
            },
            {
              "label": "needsTransformingCollateral",
              "offset": 20,
              "slot": "17",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:68"
            },
            {
              "label": "timeframeBuffer",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:70"
            },
            {
              "label": "priceBuffer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:71"
            },
            {
              "label": "marketsPerOracleKey",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:73"
            },
            {
              "label": "marketsStrikePrice",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:74"
            },
            {
              "label": "onlyAMMMintingAndBurning",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:76"
            },
            {
              "label": "marketCreationMonthLimit",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:78"
            },
            {
              "label": "allowedDate1",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:80"
            },
            {
              "label": "allowedDate2",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:81"
            },
            {
              "label": "marketExistsByOracleKeyDateAndStrikePrice",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:83"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)48614": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(PositionalMarketManager)34896": {
              "label": "contract PositionalMarketManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => address[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
              "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
              "label": "mapping(uint256 => mapping(uint256 => address))",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)51842_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Durations)33204_storage": {
              "label": "struct PositionalMarketManager.Durations",
              "members": [
                {
                  "label": "expiryDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxTimeToMaturity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketMastercopy.sol:PositionalMarketMastercopy": {
        "src": "contracts/Positions/PositionalMarketMastercopy.sol:8",
        "version": {
          "withMetadata": "d07c576d83368f598ba8f28dd992db6409ad0a38a8f549c31e3e1ed7218252ab",
          "withoutMetadata": "d07c576d83368f598ba8f28dd992db6409ad0a38a8f549c31e3e1ed7218252ab",
          "linkedWithoutMetadata": "d07c576d83368f598ba8f28dd992db6409ad0a38a8f549c31e3e1ed7218252ab"
        },
        "inherit": [
          "contracts/Positions/PositionalMarket.sol:PositionalMarket",
          "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket",
          "contracts/OwnedWithInit.sol:OwnedWithInit"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PositionalMarketMastercopy",
            "src": "contracts/Positions/PositionalMarketMastercopy.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:7"
            },
            {
              "label": "options",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Options)30212_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:59"
            },
            {
              "label": "times",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Times)30217_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:60"
            },
            {
              "label": "oracleDetails",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(OracleDetails)30228_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:61"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Fees)33199_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:62"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IPriceFeed)48614",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:63"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)6957",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:64"
            },
            {
              "label": "deposited",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:68"
            },
            {
              "label": "initialMint",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:69"
            },
            {
              "label": "creator",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:70"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:71"
            },
            {
              "label": "initialized",
              "offset": 21,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)48614": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(Position)30175": {
              "label": "contract Position",
              "numberOfBytes": "20"
            },
            "t_struct(Fees)33199_storage": {
              "label": "struct PositionalMarketManager.Fees",
              "members": [
                {
                  "label": "poolFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "creatorFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Options)30212_storage": {
              "label": "struct PositionalMarket.Options",
              "members": [
                {
                  "label": "up",
                  "type": "t_contract(Position)30175",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "down",
                  "type": "t_contract(Position)30175",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(OracleDetails)30228_storage": {
              "label": "struct PositionalMarket.OracleDetails",
              "members": [
                {
                  "label": "key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "strikePrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "finalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "customMarket",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "iOracleInstanceAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Times)30217_storage": {
              "label": "struct PositionalMarket.Times",
              "members": [
                {
                  "label": "maturity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/PriceFeed/PriceFeed.sol:PriceFeed": {
        "src": "contracts/PriceFeed/PriceFeed.sol:19",
        "version": {
          "withMetadata": "ba1ea2abd7bfc7eba056524b61cb31eb483e1ddde9683f2a59a7ae1cb9a4d588",
          "withoutMetadata": "ba1ea2abd7bfc7eba056524b61cb31eb483e1ddde9683f2a59a7ae1cb9a4d588",
          "linkedWithoutMetadata": "ba1ea2abd7bfc7eba056524b61cb31eb483e1ddde9683f2a59a7ae1cb9a4d588"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addAggregator(bytes32,address)",
          "addPool(bytes32,address,address)",
          "removeAggregator(bytes32)",
          "removePool(bytes32)",
          "getRates()",
          "getCurrencies()",
          "rateForCurrency(bytes32)",
          "rateAndUpdatedTime(bytes32)",
          "setTwapInterval(int56)",
          "setLastTickForTWAP(bytes32)",
          "setWETH(address)",
          "setETH(address)",
          "transferCurrencyKeys()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "aggregators",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:23"
            },
            {
              "label": "currencyKeyDecimals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_uint8)",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:25"
            },
            {
              "label": "aggregatorKeys",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:27"
            },
            {
              "label": "currencyKeys",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:30"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12139)",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:31"
            },
            {
              "label": "twapInterval",
              "offset": 0,
              "slot": "7",
              "type": "t_int56",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:33"
            },
            {
              "label": "_ETH",
              "offset": 7,
              "slot": "7",
              "type": "t_address",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:40"
            },
            {
              "label": "_wETH",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:41"
            },
            {
              "label": "useLastTickForTWAP",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV2V3Interface)141": {
              "label": "contract AggregatorV2V3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV3Pool)12139": {
              "label": "contract IUniswapV3Pool",
              "numberOfBytes": "20"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
              "label": "mapping(bytes32 => contract AggregatorV2V3Interface)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12139)": {
              "label": "mapping(bytes32 => contract IUniswapV3Pool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarket.sol:RangedMarket": {
        "src": "contracts/RangedMarkets/RangedMarket.sol:13",
        "version": {
          "withMetadata": "a99c270f1d30eefbaad20420c8eec1f07f583aadfd32da216b89aef7c8ccfd40",
          "withoutMetadata": "a99c270f1d30eefbaad20420c8eec1f07f583aadfd32da216b89aef7c8ccfd40",
          "linkedWithoutMetadata": "a99c270f1d30eefbaad20420c8eec1f07f583aadfd32da216b89aef7c8ccfd40"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address)",
          "mint(uint256,uint8,address)",
          "burnIn(uint256,address)",
          "burnOut(uint256,address)",
          "canExercisePositions()",
          "exercisePositions()",
          "canResolve()",
          "resolveMarket()",
          "result()",
          "withdrawCollateral(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "resolved",
            "src": "contracts/RangedMarkets/RangedMarket.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/RangedMarkets/RangedMarket.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "leftMarket",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPositionalMarket)48421",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:21"
            },
            {
              "label": "rightMarket",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPositionalMarket)48421",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:22"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Positions)36018_storage",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:29"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(RangedMarketsAMM)39799",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:31"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "4",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:33"
            },
            {
              "label": "finalPrice",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:35"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:39"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPositionalMarket)48421": {
              "label": "contract IPositionalMarket",
              "numberOfBytes": "20"
            },
            "t_contract(RangedMarketsAMM)39799": {
              "label": "contract RangedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_contract(RangedPosition)40236": {
              "label": "contract RangedPosition",
              "numberOfBytes": "20"
            },
            "t_struct(Positions)36018_storage": {
              "label": "struct RangedMarket.Positions",
              "members": [
                {
                  "label": "inp",
                  "type": "t_contract(RangedPosition)40236",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "outp",
                  "type": "t_contract(RangedPosition)40236",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarketMastercopy.sol:RangedMarketMastercopy": {
        "src": "contracts/RangedMarkets/RangedMarketMastercopy.sol:7",
        "version": {
          "withMetadata": "4eb9b10e75e33f258031dc667817c5b6f984e887ceec4b7f6186c0d3d9b380e8",
          "withoutMetadata": "4eb9b10e75e33f258031dc667817c5b6f984e887ceec4b7f6186c0d3d9b380e8",
          "linkedWithoutMetadata": "4eb9b10e75e33f258031dc667817c5b6f984e887ceec4b7f6186c0d3d9b380e8"
        },
        "inherit": [
          "contracts/RangedMarkets/RangedMarket.sol:RangedMarket"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RangedMarketMastercopy",
            "src": "contracts/RangedMarkets/RangedMarketMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "leftMarket",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPositionalMarket)48421",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:21"
            },
            {
              "label": "rightMarket",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPositionalMarket)48421",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:22"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Positions)36018_storage",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:29"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(RangedMarketsAMM)39799",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:31"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "4",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:33"
            },
            {
              "label": "finalPrice",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:35"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:39"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPositionalMarket)48421": {
              "label": "contract IPositionalMarket",
              "numberOfBytes": "20"
            },
            "t_contract(RangedMarketsAMM)39799": {
              "label": "contract RangedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_contract(RangedPosition)40236": {
              "label": "contract RangedPosition",
              "numberOfBytes": "20"
            },
            "t_struct(Positions)36018_storage": {
              "label": "struct RangedMarket.Positions",
              "members": [
                {
                  "label": "inp",
                  "type": "t_contract(RangedPosition)40236",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "outp",
                  "type": "t_contract(RangedPosition)40236",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarketsAMM.sol:RangedMarketsAMM": {
        "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:32",
        "version": {
          "withMetadata": "7a4f24ffc0c994e6a49e11a828cc5fa6b4f6336f3e6a4088b17660b7b58ac71f",
          "withoutMetadata": "7a4f24ffc0c994e6a49e11a828cc5fa6b4f6336f3e6a4088b17660b7b58ac71f",
          "linkedWithoutMetadata": "7a4f24ffc0c994e6a49e11a828cc5fa6b4f6336f3e6a4088b17660b7b58ac71f"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256,uint256,address,address,uint256)",
          "createRangedMarket(address,address)",
          "createRangedMarkets(address[],address[])",
          "canCreateRangedMarket(address,address)",
          "availableToBuyFromAMM(address,uint8)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteDetailed(address,uint8,uint256)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)",
          "buyFromAMMWithReferrer(address,uint8,uint256,uint256,uint256,address)",
          "buyFromAMMWithDifferentCollateralAndReferrer(address,uint8,uint256,uint256,uint256,address,address)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellToAmmQuoteDetailed(address,uint8,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "resolveRangedMarketsBatch(address[])",
          "getPriceImpact(address,uint8)",
          "transferSusdTo(address,uint256)",
          "retrieveSUSDAmount(address payable,uint256)",
          "setRangedMarketMastercopies(address,address)",
          "setMinMaxSupportedPrice(uint256,uint256,uint256,uint256)",
          "setSafeBoxDataAndRangedAMMFee(address,uint256,uint256)",
          "setThalesAMMStakingThalesAndReferrals(address,address,address,uint256)",
          "setCurveSUSD(bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "thalesAmm",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IThalesAMM)49529",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:39"
            },
            {
              "label": "rangedAmmFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:41"
            },
            {
              "label": "createdRangedMarkets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:43"
            },
            {
              "label": "_knownMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)51842_storage",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:44"
            },
            {
              "label": "rangedMarketMastercopy",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:46"
            },
            {
              "label": "rangedPositionMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:47"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:49"
            },
            {
              "label": "spentOnMarket",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:51"
            },
            {
              "label": "capPerMarket",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:54"
            },
            {
              "label": "minSupportedPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:56"
            },
            {
              "label": "maxSupportedPrice",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:57"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:59"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:60"
            },
            {
              "label": "minimalDifBetweenStrikes",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:62"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(IStakingThales)49359",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:64"
            },
            {
              "label": "maximalDifBetweenStrikes",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:66"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:68"
            },
            {
              "label": "referrerFee",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:69"
            },
            {
              "label": "curveSUSD",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(ICurveSUSD)47856",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:71"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:73"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:74"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:75"
            },
            {
              "label": "curveOnrampEnabled",
              "offset": 20,
              "slot": "27",
              "type": "t_bool",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:77"
            },
            {
              "label": "maxAllowedPegSlippagePercentage",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICurveSUSD)47856": {
              "label": "contract ICurveSUSD",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)49359": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMM)49529": {
              "label": "contract IThalesAMM",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)51842_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedPosition.sol:RangedPosition": {
        "src": "contracts/RangedMarkets/RangedPosition.sol:13",
        "version": {
          "withMetadata": "f26418029e354b2ebc66257b8492f5d4814b996c5becaa667dda5f08e3ff8a8f",
          "withoutMetadata": "f26418029e354b2ebc66257b8492f5d4814b996c5becaa667dda5f08e3ff8a8f",
          "linkedWithoutMetadata": "f26418029e354b2ebc66257b8492f5d4814b996c5becaa667dda5f08e3ff8a8f"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,string,string,address)",
          "allowance(address,address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getBalanceOf(address)",
          "getTotalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/RangedMarkets/RangedPosition.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:16"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:17"
            },
            {
              "label": "rangedMarket",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(RangedMarket)36844",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:20"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:22"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:23"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:26"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:31"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(RangedMarket)36844": {
              "label": "contract RangedMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedPositionMastercopy.sol:RangedPositionMastercopy": {
        "src": "contracts/RangedMarkets/RangedPositionMastercopy.sol:7",
        "version": {
          "withMetadata": "9053194cd821553c9ec3a602307f35158901e132eebe2dd68c7586bee8d3e76a",
          "withoutMetadata": "9053194cd821553c9ec3a602307f35158901e132eebe2dd68c7586bee8d3e76a",
          "linkedWithoutMetadata": "9053194cd821553c9ec3a602307f35158901e132eebe2dd68c7586bee8d3e76a"
        },
        "inherit": [
          "contracts/RangedMarkets/RangedPosition.sol:RangedPosition",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RangedPositionMastercopy",
            "src": "contracts/RangedMarkets/RangedPositionMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:16"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:17"
            },
            {
              "label": "rangedMarket",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(RangedMarket)36844",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:20"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:22"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:23"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:26"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:31"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(RangedMarket)36844": {
              "label": "contract RangedMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RetroDistribution/VestingEscrow.sol:VestingEscrow": {
        "src": "contracts/RetroDistribution/VestingEscrow.sol:11",
        "version": {
          "withMetadata": "c48f6e49415081385ec2b6d62a0e652435a1e464ad9528d0bd1ad7e207eab32c",
          "withoutMetadata": "c48f6e49415081385ec2b6d62a0e652435a1e464ad9528d0bd1ad7e207eab32c",
          "linkedWithoutMetadata": "c48f6e49415081385ec2b6d62a0e652435a1e464ad9528d0bd1ad7e207eab32c"
        },
        "inherit": [
          "contracts/utils/Owned.sol:Owned",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address,address,uint256,uint256)",
          "addTokens(uint256)",
          "fund(address[],uint256[])",
          "vestedSupply()",
          "vestedOf(address)",
          "lockedSupply()",
          "balanceOf(address)",
          "lockedOf(address)",
          "_selfDestruct(address payable)",
          "claim()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VestingEscrow",
            "src": "contracts/RetroDistribution/VestingEscrow.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:7"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:15"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:16"
            },
            {
              "label": "endTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:17"
            },
            {
              "label": "initialLocked",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:18"
            },
            {
              "label": "totalClaimed",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:19"
            },
            {
              "label": "initialLockedSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:21"
            },
            {
              "label": "unallocatedSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RetroDistribution/VestingEscrowCC.sol:VestingEscrowCC": {
        "src": "contracts/RetroDistribution/VestingEscrowCC.sol:15",
        "version": {
          "withMetadata": "3e7fd8b3f5f81eef47bc03d721a08349cf4b7629fb5cab613e11c09624c92e23",
          "withoutMetadata": "3e7fd8b3f5f81eef47bc03d721a08349cf4b7629fb5cab613e11c09624c92e23",
          "linkedWithoutMetadata": "3e7fd8b3f5f81eef47bc03d721a08349cf4b7629fb5cab613e11c09624c92e23"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256)",
          "fund(address,uint256,uint256)",
          "increaseAllocation(address,uint256)",
          "decreaseAllocation(address,uint256)",
          "vestedSupply()",
          "vestedOf(address)",
          "lockedSupply()",
          "balanceOf(address)",
          "lockedOf(address)",
          "claim()",
          "partialClaim(uint256)",
          "pauseClaim(address)",
          "unpauseClaim(address)",
          "disableClaim(address)",
          "enableClaim(address)",
          "changeWallet(address,address)",
          "setStartTime(address,uint256)",
          "setEndTime(address,uint256)",
          "setToken(address)",
          "setVestingPeriod(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "owner",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "token",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:24"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:25"
            },
            {
              "label": "endTime",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:26"
            },
            {
              "label": "initialLocked",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:27"
            },
            {
              "label": "totalClaimed",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:28"
            },
            {
              "label": "disabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:29"
            },
            {
              "label": "pausedAt",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:30"
            },
            {
              "label": "initialLockedSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:32"
            },
            {
              "label": "vestingPeriod",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:33"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_address)dyn_storage",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RetroDistribution/VestingEscrowProxy.sol:VestingEscrowProxy": {
        "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:15",
        "version": {
          "withMetadata": "146e2cd3abe3ebd48d2062ba2b689f39102efa42bd4f1811fd146547f134295c",
          "withoutMetadata": "146e2cd3abe3ebd48d2062ba2b689f39102efa42bd4f1811fd146547f134295c",
          "linkedWithoutMetadata": "146e2cd3abe3ebd48d2062ba2b689f39102efa42bd4f1811fd146547f134295c"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256,uint256)",
          "fund(address[],uint256[])",
          "vestedSupply()",
          "vestedOf(address)",
          "lockedSupply()",
          "balanceOf(address)",
          "lockedOf(address)",
          "claim()",
          "setStartTime(uint256)",
          "setEndTime(uint256)",
          "setToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "owner",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "token",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:19"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:20"
            },
            {
              "label": "endTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:21"
            },
            {
              "label": "initialLocked",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:22"
            },
            {
              "label": "totalClaimed",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:23"
            },
            {
              "label": "initialLockedSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:MultiCollateralOnOffRamp": {
        "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:35",
        "version": {
          "withMetadata": "e94fdc7404057ccaf808c003ad087a15afed5c8c6e63641b36c66328a055e8c6",
          "withoutMetadata": "e94fdc7404057ccaf808c003ad087a15afed5c8c6e63641b36c66328a055e8c6",
          "linkedWithoutMetadata": "e94fdc7404057ccaf808c003ad087a15afed5c8c6e63641b36c66328a055e8c6"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "onramp(address,uint256)",
          "onrampWithEth(uint256)",
          "getMinimumReceived(address,uint256)",
          "getMaximumReceived(address,uint256)",
          "getEncodedPacked(address,uint24,address,uint24,address)",
          "setSupportedCollateral(address,bool)",
          "setSupportedAMM(address,bool)",
          "setWETH(address)",
          "setSUSD(address)",
          "setSwapRouter(address)",
          "setPriceFeed(address)",
          "setPriceFeedKeyPerAsset(bytes32,address)",
          "setPathPerCollateral(address,bytes,bool)",
          "setManager(address)",
          "setCurveSUSD(address,address,address,address,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "sUSD",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:40"
            },
            {
              "label": "collateralSupported",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:42"
            },
            {
              "label": "ammsSupported",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:44"
            },
            {
              "label": "swapRouter",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISwapRouter)12982",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:46"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPriceFeed)48614",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:48"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:50"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:51"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:52"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:53"
            },
            {
              "label": "curveOnrampEnabled",
              "offset": 20,
              "slot": "13",
              "type": "t_bool",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:55"
            },
            {
              "label": "maxAllowedPegSlippagePercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:57"
            },
            {
              "label": "curveSUSD",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ICurveSUSD)47856",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:59"
            },
            {
              "label": "pathPerCollateral",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:61"
            },
            {
              "label": "priceFeedKeyPerCollateral",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:63"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IPositionalMarketManagerTruncated)48566",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ICurveSUSD)47856": {
              "label": "contract ICurveSUSD",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPositionalMarketManagerTruncated)48566": {
              "label": "contract IPositionalMarketManagerTruncated",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)48614": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(ISwapRouter)12982": {
              "label": "contract ISwapRouter",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:WethLike": {
        "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket": {
        "src": "contracts/SpeedMarkets/SpeedMarket.sol:9",
        "version": {
          "withMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "withoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6",
          "linkedWithoutMetadata": "3102db8e7dbc7c85b6998b24b7496146f82ab322acacab5c8c0ab7c02ac58cd6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize((address,address,bytes32,uint64,int64,uint8,uint256))",
          "resolve(int64)",
          "isUserWinner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)43335",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)43335",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)45883",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)45883": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)43335": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:SpeedMarketMastercopy": {
        "src": "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:7",
        "version": {
          "withMetadata": "7e807585dbd3ad15f0c4814905c69d1bc612ebbec7cffaf2407c4066538f9586",
          "withoutMetadata": "7e807585dbd3ad15f0c4814905c69d1bc612ebbec7cffaf2407c4066538f9586",
          "linkedWithoutMetadata": "7e807585dbd3ad15f0c4814905c69d1bc612ebbec7cffaf2407c4066538f9586"
        },
        "inherit": [
          "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SpeedMarketMastercopy",
            "src": "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)43335",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)43335",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)45883",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)45883": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)43335": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketsAMM.sol:SpeedMarketsAMM": {
        "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:31",
        "version": {
          "withMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "withoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb",
          "linkedWithoutMetadata": "7344b1efe2bd7d28e00560b7aae2f4aa96b3d3e0d39ff91c8e6c90bfa079d0bb"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "createNewMarket(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDelta(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDifferentCollateral(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "createNewMarketWithDifferentCollateralAndDelta(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "resolveMarket(address,bytes[])",
          "resolveMarketsBatch(address[],bytes[])",
          "resolveMarketManually(address,int64)",
          "resolveMarketManuallyBatch(address[],int64[])",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "numActiveMarketsPerUser(address)",
          "activeMarketsPerUser(uint256,uint256,address)",
          "numMaturedMarketsPerUser(address)",
          "maturedMarketsPerUser(uint256,uint256,address)",
          "canResolveMarket(address)",
          "getMarketsData(address[])",
          "getDirectionalRiskPerAsset(bytes32)",
          "setMastercopy(address)",
          "setAmounts(uint256,uint256)",
          "setTimes(uint256,uint256)",
          "setAssetToPythID(bytes32,bytes32)",
          "setMaximumPriceDelay(uint64)",
          "setMaximumPriceDelayForResolving(uint64)",
          "setMaxRiskPerAsset(bytes32,uint256)",
          "setMaxRiskPerAssetAndDirection(bytes32,uint256)",
          "setSafeBoxParams(address,uint256)",
          "setLPFee(uint256)",
          "setStakingThales(address)",
          "setReferrals(address)",
          "setPyth(address)",
          "setSupportedAsset(bytes32,bool)",
          "setMultiCollateralOnOffRamp(address,bool)",
          "addToWhitelist(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(AddressSet)51842_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:35"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)51842_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:36"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:40"
            },
            {
              "label": "speedMarketMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:42"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:44"
            },
            {
              "label": "lpFee",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:45"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:47"
            },
            {
              "label": "supportedAsset",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:49"
            },
            {
              "label": "minimalTimeToMaturity",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:51"
            },
            {
              "label": "maximalTimeToMaturity",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:52"
            },
            {
              "label": "minBuyinAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:54"
            },
            {
              "label": "maxBuyinAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:55"
            },
            {
              "label": "maxRiskPerAsset",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:57"
            },
            {
              "label": "currentRiskPerAsset",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:58"
            },
            {
              "label": "assetToPythId",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:60"
            },
            {
              "label": "pyth",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(IPyth)11991",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:63"
            },
            {
              "label": "maximumPriceDelay",
              "offset": 20,
              "slot": "23",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:65"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(IStakingThales)49359",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
            },
            {
              "label": "_activeMarketsPerUser",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_struct(AddressSet)51842_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
            },
            {
              "label": "_maturedMarketsPerUser",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_struct(AddressSet)51842_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
            },
            {
              "label": "multiCollateralOnOffRamp",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IMultiCollateralOnOffRamp)47968",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
            },
            {
              "label": "multicollateralEnabled",
              "offset": 20,
              "slot": "28",
              "type": "t_bool",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
            },
            {
              "label": "maxRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)43335,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
            },
            {
              "label": "currentRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)43335,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:92"
            },
            {
              "label": "maximumPriceDelayForResolving",
              "offset": 0,
              "slot": "31",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
            },
            {
              "label": "marketHasCreatedAtAttribute",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "33",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IMultiCollateralOnOffRamp)47968": {
              "label": "contract IMultiCollateralOnOffRamp",
              "numberOfBytes": "20"
            },
            "t_contract(IPyth)11991": {
              "label": "contract IPyth",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)49359": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)43335": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)51842_storage)": {
              "label": "mapping(address => struct AddressSetLib.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_enum(Direction)43335,t_uint256))": {
              "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Direction)43335,t_uint256)": {
              "label": "mapping(enum SpeedMarket.Direction => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)51842_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Vaults/AmmVault.sol:AmmVault": {
        "src": "contracts/Vaults/AmmVault.sol:16",
        "version": {
          "withMetadata": "579542c5aa7d19b75d44ae2416c101e2514476c1fb833752dee57d1568e6e02f",
          "withoutMetadata": "579542c5aa7d19b75d44ae2416c101e2514476c1fb833752dee57d1568e6e02f",
          "linkedWithoutMetadata": "579542c5aa7d19b75d44ae2416c101e2514476c1fb833752dee57d1568e6e02f"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize((address,address,address,uint256,uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "startVault()",
          "closeRound()",
          "deposit(uint256)",
          "withdrawalRequest()",
          "trade(address,uint256,uint8)",
          "setRoundLength(uint256)",
          "setThalesAmm(address)",
          "setStakingThales(address)",
          "setUtilizationRate(uint256)",
          "setMaxAllowedDeposit(uint256)",
          "setMinAllowedDeposit(uint256)",
          "setMaxAllowedUsers(uint256)",
          "setAllocationLimits(uint256)",
          "setPriceLimits(uint256,uint256)",
          "setSkewImpactLimit(int256)",
          "setMinTradeAmount(uint256)",
          "tradingAllocation()",
          "canCloseCurrentRound()",
          "getAvailableAllocationForMarket(address)",
          "getBalancesPerRound(uint256,address)",
          "getAvailableToDeposit()",
          "getCurrentRoundEnd()",
          "cumulativePnLBetweenRounds(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "52",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "103",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "thalesAMM",
              "offset": 1,
              "slot": "103",
              "type": "t_contract(IThalesAMM)49529",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:47"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:48"
            },
            {
              "label": "vaultStarted",
              "offset": 20,
              "slot": "104",
              "type": "t_bool",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:50"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:52"
            },
            {
              "label": "roundLength",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:53"
            },
            {
              "label": "roundStartTime",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:54"
            },
            {
              "label": "usersPerRound",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:56"
            },
            {
              "label": "userInRound",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:57"
            },
            {
              "label": "balancesPerRound",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:59"
            },
            {
              "label": "withdrawalRequested",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:60"
            },
            {
              "label": "depositReceipts",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_struct(DepositReceipt)45911_storage)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:61"
            },
            {
              "label": "allocationPerRound",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:63"
            },
            {
              "label": "tradingMarketsPerRound",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:65"
            },
            {
              "label": "tradingMarketPositionPerRound",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)49393))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:66"
            },
            {
              "label": "isTradingMarketInARound",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:67"
            },
            {
              "label": "profitAndLossPerRound",
              "offset": 0,
              "slot": "117",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:69"
            },
            {
              "label": "cumulativeProfitAndLoss",
              "offset": 0,
              "slot": "118",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:70"
            },
            {
              "label": "maxAllowedDeposit",
              "offset": 0,
              "slot": "119",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:72"
            },
            {
              "label": "utilizationRate",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:73"
            },
            {
              "label": "capPerRound",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:75"
            },
            {
              "label": "minDepositAmount",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:77"
            },
            {
              "label": "maxAllowedUsers",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:79"
            },
            {
              "label": "usersCurrentlyInVault",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:80"
            },
            {
              "label": "allocationLimitsPerMarketPerRound",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:82"
            },
            {
              "label": "allocationSpentPerRound",
              "offset": 0,
              "slot": "126",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:84"
            },
            {
              "label": "priceLowerLimit",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:86"
            },
            {
              "label": "priceUpperLimit",
              "offset": 0,
              "slot": "128",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:87"
            },
            {
              "label": "skewImpactLimit",
              "offset": 0,
              "slot": "129",
              "type": "t_int256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:88"
            },
            {
              "label": "minTradeAmount",
              "offset": 0,
              "slot": "130",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:90"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "131",
              "type": "t_contract(IStakingThales)49359",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:93"
            },
            {
              "label": "allocationSpentInARound",
              "offset": 0,
              "slot": "132",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)49359": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMM)49529": {
              "label": "contract IThalesAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Position)49393": {
              "label": "enum IThalesAMM.Position",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Position)49393)": {
              "label": "mapping(address => enum IThalesAMM.Position)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositReceipt)45911_storage)": {
              "label": "mapping(address => struct AmmVault.DepositReceipt)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)49393))": {
              "label": "mapping(uint256 => mapping(address => enum IThalesAMM.Position))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositReceipt)45911_storage": {
              "label": "struct AmmVault.DepositReceipt",
              "members": [
                {
                  "label": "round",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Vaults/AmmVaultData.sol:AmmVaultData": {
        "src": "contracts/Vaults/AmmVaultData.sol:10",
        "version": {
          "withMetadata": "71eddd9d521ba8b16de8a49d858d968d8e22cfacf8c4080231f8c6cd97118184",
          "withoutMetadata": "71eddd9d521ba8b16de8a49d858d968d8e22cfacf8c4080231f8c6cd97118184",
          "linkedWithoutMetadata": "71eddd9d521ba8b16de8a49d858d968d8e22cfacf8c4080231f8c6cd97118184"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getAmmVaultData(address)",
          "getUserAmmVaultData(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts/interfaces/IAddressResolver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ICurveSUSD.sol:ICurveSUSD": {
        "src": "contracts/interfaces/ICurveSUSD.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "get_dy_underlying(int128,int128,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IEscrowThales.sol:IEscrowThales": {
        "src": "contracts/interfaces/IEscrowThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStakerPeriod(address,uint256)",
          "getStakerAmounts(address,uint256)",
          "totalAccountEscrowedAmount(address)",
          "getStakedEscrowedBalanceForRewards(address)",
          "totalEscrowedRewards()",
          "totalEscrowBalanceNotIncludedInStaking()",
          "currentVestingPeriod()",
          "updateCurrentPeriod()",
          "claimable(address)",
          "addToEscrow(address,uint256)",
          "vest(uint256)",
          "addTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "subtractTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "mergeAccount(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IMultiCollateralOnOffRamp.sol:IMultiCollateralOnOffRamp": {
        "src": "contracts/interfaces/IMultiCollateralOnOffRamp.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onramp(address,uint256)",
          "onrampWithEth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IOracleInstance.sol:IOracleInstance": {
        "src": "contracts/interfaces/IOracleInstance.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOutcome()",
          "resolvable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayAMMLiquidityPool.sol:IParlayAMMLiquidityPool": {
        "src": "contracts/interfaces/IParlayAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "commitTrade(address,uint256)",
          "getMarketRound(address)",
          "getMarketPool(address)",
          "transferToPool(address,uint256)",
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayMarketData.sol:IParlayMarketData": {
        "src": "contracts/interfaces/IParlayMarketData.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasParlayGamePosition(address,address,uint256)",
          "addParlayForGamePosition(address,uint256,address,address)",
          "removeParlayForGamePosition(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayMarketsAMM.sol:IParlayMarketsAMM": {
        "src": "contracts/interfaces/IParlayMarketsAMM.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "parlaySize()",
          "sUSD()",
          "sportsAmm()",
          "parlayAmmFee()",
          "maxAllowedRiskPerCombination()",
          "maxSupportedOdds()",
          "getSgpFeePerCombination(uint256,uint256,uint256,uint256)",
          "riskPerCombination(address,uint256,address,uint256,address,uint256,address,uint256)",
          "riskPerGameCombination(address,address,address,address,address,address,address,address)",
          "riskPerPackedGamesCombination(bytes32)",
          "isActiveParlay(address)",
          "exerciseParlay(address)",
          "triggerResolvedEvent(address,bool)",
          "resolveParlay()",
          "buyFromParlay(address[],uint256[],uint256,uint256,uint256,address)",
          "buyQuoteFromParlay(address[],uint256[],uint256)",
          "canCreateParlayMarket(address[],uint256[],uint256)",
          "numActiveParlayMarkets()",
          "activeParlayMarkets(uint256,uint256)",
          "minUSDAmount()",
          "maxSupportedAmount()",
          "safeBoxImpact()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPassportPosition.sol:IPassportPosition": {
        "src": "contracts/interfaces/IPassportPosition.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPosition.sol:IPosition": {
        "src": "contracts/interfaces/IPosition.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBalanceOf(address)",
          "getTotalSupply()",
          "exerciseWithAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket": {
        "src": "contracts/interfaces/IPositionalMarket.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptions()",
          "times()",
          "getOracleDetails()",
          "fees()",
          "deposited()",
          "creator()",
          "resolved()",
          "phase()",
          "oraclePrice()",
          "oraclePriceAndTimestamp()",
          "canResolve()",
          "result()",
          "balancesOf(address)",
          "totalSupplies()",
          "getMaximumBurnable(address)",
          "mint(uint256)",
          "exerciseOptions()",
          "burnOptions(uint256)",
          "burnOptionsMaximum()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarketManager.sol:IPositionalMarketManager": {
        "src": "contracts/interfaces/IPositionalMarketManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "durations()",
          "capitalRequirement()",
          "marketCreationEnabled()",
          "onlyAMMMintingAndBurning()",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "totalDeposited()",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "isActiveMarket(address)",
          "isKnownMarket(address)",
          "getThalesAMM()",
          "createMarket(bytes32,uint256,uint256,uint256)",
          "resolveMarket(address)",
          "expireMarkets(address[])",
          "transferSusdTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarketManagerTruncated.sol:IPositionalMarketManagerTruncated": {
        "src": "contracts/interfaces/IPositionalMarketManagerTruncated.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPriceFeed.sol:IPriceFeed": {
        "src": "contracts/interfaces/IPriceFeed.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "rateForCurrency(bytes32)",
          "rateAndUpdatedTime(bytes32)",
          "getRates()",
          "getCurrencies()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IReferrals.sol:IReferrals": {
        "src": "contracts/interfaces/IReferrals.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "referrals(address)",
          "getReferrerFee(address)",
          "sportReferrals(address)",
          "setReferrer(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISNXRewards.sol:ISNXRewards": {
        "src": "contracts/interfaces/ISNXRewards.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collateralisationRatioAndAnyRatesInvalid(address)",
          "debtBalanceOf(address,bytes32)",
          "issuanceRatio()",
          "setCRatio(address,uint256)",
          "setIssuanceRatio(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISNXRewardsState.sol:ISNXRewardsState": {
        "src": "contracts/interfaces/ISNXRewardsState.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAccountsDebtEntry(address,uint256)",
          "setAccountsDebtEntry(address,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportPositionalMarket.sol:ISportPositionalMarket": {
        "src": "contracts/interfaces/ISportPositionalMarket.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptions()",
          "times()",
          "initialMint()",
          "getGameDetails()",
          "getGameId()",
          "deposited()",
          "optionsCount()",
          "creator()",
          "resolved()",
          "cancelled()",
          "paused()",
          "phase()",
          "canResolve()",
          "result()",
          "isChild()",
          "tags(uint256)",
          "getTags()",
          "getParentMarketPositions()",
          "getStampedOdds()",
          "balancesOf(address)",
          "totalSupplies()",
          "isDoubleChance()",
          "parentMarket()",
          "setPaused(bool)",
          "updateDates(uint256,uint256)",
          "mint(uint256)",
          "exerciseOptions()",
          "restoreInvalidOdds(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportPositionalMarketManager.sol:ISportPositionalMarketManager": {
        "src": "contracts/interfaces/ISportPositionalMarketManager.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketCreationEnabled()",
          "totalDeposited()",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "isActiveMarket(address)",
          "isDoubleChanceMarket(address)",
          "isDoubleChanceSupported()",
          "isKnownMarket(address)",
          "getActiveMarketAddress(uint256)",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "isMarketPaused(address)",
          "expiryDuration()",
          "isWhitelistedAddress(address)",
          "getOddsObtainer()",
          "createMarket(bytes32,string,uint256,uint256,uint256,uint256[],bool,address)",
          "setMarketPaused(address,bool)",
          "updateDatesForMarket(address,uint256)",
          "resolveMarket(address,uint256)",
          "expireMarkets(address[])",
          "transferSusdTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportsAMM.sol:ISportsAMM": {
        "src": "contracts/interfaces/ISportsAMM.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "theRundownConsumer()",
          "getMarketDefaultOdds(address,bool)",
          "isMarketInAMMTrading(address)",
          "isMarketForSportOnePositional(uint256)",
          "availableToBuyFromAMM(address,uint8)",
          "parlayAMM()",
          "minSupportedOdds()",
          "maxSupportedOdds()",
          "min_spread()",
          "max_spread()",
          "minimalTimeLeftToMaturity()",
          "getSpentOnGame(address)",
          "safeBoxImpact()",
          "manager()",
          "getLiquidityPool()",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteForParlayAMM(address,uint8,uint256)",
          "updateParlayVolume(address,uint256)",
          "buyPriceImpact(address,uint8,uint256)",
          "obtainOdds(address,uint8)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportsAMMLiquidityPool.sol:ISportsAMMLiquidityPool": {
        "src": "contracts/interfaces/ISportsAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThales.sol:IStakingThales": {
        "src": "contracts/interfaces/IStakingThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateVolume(address,uint256)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "currentPeriodRewards()",
          "currentPeriodFees()",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "getAMMVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThalesBonusRewardsManager.sol:IStakingThalesBonusRewardsManager": {
        "src": "contracts/interfaces/IStakingThalesBonusRewardsManager.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "storePoints(address,address,uint256,uint256)",
          "getUserRoundBonusShare(address,uint256)",
          "useNewBonusModel()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMM.sol:IThalesAMM": {
        "src": "contracts/interfaces/IThalesAMM.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "manager()",
          "availableToBuyFromAMM(address,uint8)",
          "impliedVolatilityPerAsset(bytes32)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "isMarketInAMMTrading(address)",
          "price(address,uint8)",
          "buyPriceImpact(address,uint8,uint256)",
          "sellPriceImpact(address,uint8,uint256)",
          "priceFeed()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMMLiquidityPool.sol:IThalesAMMLiquidityPool": {
        "src": "contracts/interfaces/IThalesAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMMUtils.sol:IThalesAMMUtils": {
        "src": "contracts/interfaces/IThalesAMMUtils.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateOdds(uint256,uint256,uint256,uint256)",
          "calculateDiscount((uint256,uint256,uint256,uint256,uint256))",
          "buyPriceImpactImbalancedSkew((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "sellPriceImpactImbalancedSkew(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "balanceOfPositionOnMarket(address,uint8,address)",
          "balanceOfPositionsOnMarket(address,uint8,address)",
          "getBalanceOfPositionsOnMarket(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesRoyale.sol:IThalesRoyale": {
        "src": "contracts/interfaces/IThalesRoyale.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBuyInAmount()",
          "season()",
          "tokenSeason(uint256)",
          "seasonFinished(uint256)",
          "roundInASeason(uint256)",
          "roundResultPerSeason(uint256,uint256)",
          "isTokenAliveInASpecificSeason(uint256,uint256)",
          "hasParticipatedInCurrentOrLastRoyale(address)",
          "getTokenPositions(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesStakingRewardsPool.sol:IThalesStakingRewardsPool": {
        "src": "contracts/interfaces/IThalesStakingRewardsPool.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addToEscrow(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/AddressResolverHelper.sol:AddressResolverHelper": {
        "src": "contracts/test-helpers/AddressResolverHelper.sol:7",
        "version": {
          "withMetadata": "872a235c5720fb727ae62a835686c3bb843bfd91584fc5c5c402d8aa55149679",
          "withoutMetadata": "872a235c5720fb727ae62a835686c3bb843bfd91584fc5c5c402d8aa55149679",
          "linkedWithoutMetadata": "872a235c5720fb727ae62a835686c3bb843bfd91584fc5c5c402d8aa55149679"
        },
        "inherit": [
          "contracts/interfaces/IAddressResolver.sol:IAddressResolver"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getAddress(bytes32)",
          "setSNXRewardsAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "snxAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AddressResolverHelper",
              "src": "contracts/test-helpers/AddressResolverHelper.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/RundownTest/TherundownConsumerTest.sol:TherundownConsumerTest": {
        "src": "contracts/test-helpers/RundownTest/TherundownConsumerTest.sol:66",
        "version": {
          "withMetadata": "a37a84ec3b7664b0e1701e62dd7874b9faee479b55c9ad46f0577fc20f2e923b",
          "withoutMetadata": "a37a84ec3b7664b0e1701e62dd7874b9faee479b55c9ad46f0577fc20f2e923b",
          "linkedWithoutMetadata": "a37a84ec3b7664b0e1701e62dd7874b9faee479b55c9ad46f0577fc20f2e923b"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "requestGamesResolveWithFilters(bytes32,uint256,string,uint256,uint256,string[],string[])",
          "requestGames(bytes32,uint256,string,uint256,uint256)",
          "fulfillGames(bytes32,bytes[])",
          "getGamesCreated(bytes32,uint256)",
          "getGamesResolved(bytes32,uint256)",
          "getGamesOdds(bytes32,uint256)",
          "getOracleAddress()",
          "setOracle(address)",
          "withdrawLink()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TherundownConsumerTest",
            "src": "contracts/test-helpers/RundownTest/TherundownConsumerTest.sol:101"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)1162",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)1257",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)1337",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
            },
            {
              "label": "requestIdGames",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
              "contract": "TherundownConsumerTest",
              "src": "contracts/test-helpers/RundownTest/TherundownConsumerTest.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes_storage)dyn_storage": {
              "label": "bytes[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)1162": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)1257": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)1337": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
              "label": "mapping(bytes32 => bytes[])",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/interfaces/IUniswapPool.sol:IUniswapPool": {
        "src": "contracts/test-helpers/interfaces/IUniswapPool.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()",
          "slot0()",
          "observe(uint32[])",
          "initialize(uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/libraries/CallbackValidation.sol:CallbackValidation": {
        "src": "contracts/test-helpers/libraries/CallbackValidation.sol:8",
        "version": {
          "withMetadata": "f64b9a2bd99c047893e268e900348ffa51adad1ed258b4ab705f73792de54bd3",
          "withoutMetadata": "f64b9a2bd99c047893e268e900348ffa51adad1ed258b4ab705f73792de54bd3",
          "linkedWithoutMetadata": "f64b9a2bd99c047893e268e900348ffa51adad1ed258b4ab705f73792de54bd3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/libraries/Oracle.sol:Oracle": {
        "src": "contracts/test-helpers/libraries/Oracle.sol:12",
        "version": {
          "withMetadata": "7968d8ed8b76094bfa3947fabaee747d0d2ea1f9ec3190705a33343eaebaac7e",
          "withoutMetadata": "7968d8ed8b76094bfa3947fabaee747d0d2ea1f9ec3190705a33343eaebaac7e",
          "linkedWithoutMetadata": "7968d8ed8b76094bfa3947fabaee747d0d2ea1f9ec3190705a33343eaebaac7e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/libraries/PoolAddress.sol:PoolAddress": {
        "src": "contracts/test-helpers/libraries/PoolAddress.sol:4",
        "version": {
          "withMetadata": "b02a8d441ae0ee95f0dcebac0f80f0a3cbf711572e53b09819c05f32fb133e24",
          "withoutMetadata": "b02a8d441ae0ee95f0dcebac0f80f0a3cbf711572e53b09819c05f32fb133e24",
          "linkedWithoutMetadata": "b02a8d441ae0ee95f0dcebac0f80f0a3cbf711572e53b09819c05f32fb133e24"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/libraries/Tick.sol:Tick": {
        "src": "contracts/test-helpers/libraries/Tick.sol:12",
        "version": {
          "withMetadata": "556445fe214566fd30b8c2e4ec8002f18491f7f705ae4f1a1ad3c2229d4b7b43",
          "withoutMetadata": "556445fe214566fd30b8c2e4ec8002f18491f7f705ae4f1a1ad3c2229d4b7b43",
          "linkedWithoutMetadata": "556445fe214566fd30b8c2e4ec8002f18491f7f705ae4f1a1ad3c2229d4b7b43"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/MultiSend.sol:MultiSend": {
        "src": "contracts/utils/MultiSend.sol:6",
        "version": {
          "withMetadata": "dfa36c790a953c359704fddeb58b2e35ee856319c864aff35d2486c6df1e4f60",
          "withoutMetadata": "dfa36c790a953c359704fddeb58b2e35ee856319c864aff35d2486c6df1e4f60",
          "linkedWithoutMetadata": "dfa36c790a953c359704fddeb58b2e35ee856319c864aff35d2486c6df1e4f60"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "sendToMultipleAddresses(address[],uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/Owned.sol:Owned": {
        "src": "contracts/utils/Owned.sol:5",
        "version": {
          "withMetadata": "bf4494832f86da5bdcc94c3ea4850958e23c6b5468cd02956d2a2f1118969bbe",
          "withoutMetadata": "bf4494832f86da5bdcc94c3ea4850958e23c6b5468cd02956d2a2f1118969bbe",
          "linkedWithoutMetadata": "bf4494832f86da5bdcc94c3ea4850958e23c6b5468cd02956d2a2f1118969bbe"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/utils/Owned.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/Pausable.sol:Pausable": {
        "src": "contracts/utils/Pausable.sol:7",
        "inherit": [
          "contracts/utils/Owned.sol:Owned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:7"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Pausable",
              "src": "contracts/utils/Pausable.sol:8"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/utils/Pausable.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/AddressSetLib.sol:AddressSetLib": {
        "src": "contracts/utils/libraries/AddressSetLib.sol:5",
        "version": {
          "withMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "withoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5",
          "linkedWithoutMetadata": "7164df2755be4ba1b3dce50b9e564631c78822e198e9db6fa1009b680d3ad5f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/DateTime.sol:DateTime": {
        "src": "contracts/utils/libraries/DateTime.sol:29",
        "version": {
          "withMetadata": "a7b8fa7ae0a7f2a29068afee0a19926e2261e0eb0e397c5e80440ed7ca212cd6",
          "withoutMetadata": "a7b8fa7ae0a7f2a29068afee0a19926e2261e0eb0e397c5e80440ed7ca212cd6",
          "linkedWithoutMetadata": "a7b8fa7ae0a7f2a29068afee0a19926e2261e0eb0e397c5e80440ed7ca212cd6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/NFTDescriptor.sol:NFTDescriptor": {
        "src": "contracts/utils/libraries/NFTDescriptor.sol:9",
        "version": {
          "withMetadata": "be2b1a5f087004a714a0a8e3baef01bedc740264195bbbbbe7b236c44c6425da",
          "withoutMetadata": "be2b1a5f087004a714a0a8e3baef01bedc740264195bbbbbe7b236c44c6425da",
          "linkedWithoutMetadata": "be2b1a5f087004a714a0a8e3baef01bedc740264195bbbbbe7b236c44c6425da"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/NFTSVG.sol:NFTSVG": {
        "src": "contracts/utils/libraries/NFTSVG.sol:11",
        "version": {
          "withMetadata": "dedd5c0f33b293943337893cfc96fd1fb4de6449262874eb36434293a4ec80f3",
          "withoutMetadata": "dedd5c0f33b293943337893cfc96fd1fb4de6449262874eb36434293a4ec80f3",
          "linkedWithoutMetadata": "dedd5c0f33b293943337893cfc96fd1fb4de6449262874eb36434293a4ec80f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/SafeCast.sol:SafeCast": {
        "src": "contracts/utils/libraries/SafeCast.sol:20",
        "version": {
          "withMetadata": "05f4f55854ed6224e7d702b68b2b87f88c522b165a8c5e36a967cec3a44f70bb",
          "withoutMetadata": "05f4f55854ed6224e7d702b68b2b87f88c522b165a8c5e36a967cec3a44f70bb",
          "linkedWithoutMetadata": "05f4f55854ed6224e7d702b68b2b87f88c522b165a8c5e36a967cec3a44f70bb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/utils/libraries/TransferHelper.sol:6",
        "version": {
          "withMetadata": "fba67076e05dba2d32046f95f250f55140f4bfaae06658e5e9fb40757bf90670",
          "withoutMetadata": "fba67076e05dba2d32046f95f250f55140f4bfaae06658e5e9fb40757bf90670",
          "linkedWithoutMetadata": "fba67076e05dba2d32046f95f250f55140f4bfaae06658e5e9fb40757bf90670"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/UniswapMath.sol:UniswapMath": {
        "src": "contracts/utils/libraries/UniswapMath.sol:11",
        "version": {
          "withMetadata": "88767d24a8343b8530023f6572abf3004f1a0d42bf7a9dad72b08bb23f5a737c",
          "withoutMetadata": "88767d24a8343b8530023f6572abf3004f1a0d42bf7a9dad72b08bb23f5a737c",
          "linkedWithoutMetadata": "88767d24a8343b8530023f6572abf3004f1a0d42bf7a9dad72b08bb23f5a737c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:ITransparentUpgradeableProxy": {
        "src": "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:OwnedUpgradeabilityProxy": {
        "src": "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:58",
        "version": {
          "withMetadata": "506676ff48ce4438af6c2e0583690600449c93dc1bab52673c851b4ad6fb7679",
          "withoutMetadata": "506676ff48ce4438af6c2e0583690600449c93dc1bab52673c851b4ad6fb7679",
          "linkedWithoutMetadata": "506676ff48ce4438af6c2e0583690600449c93dc1bab52673c851b4ad6fb7679"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnedUpgradeabilityProxy",
            "src": "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/Proxy.sol:Proxy": {
        "src": "contracts/utils/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "55fc69a464aac66148b4aac7806bcd893bea15e487a4c865f03ebe00b8f8af92",
          "withoutMetadata": "55fc69a464aac66148b4aac7806bcd893bea15e487a4c865f03ebe00b8f8af92",
          "linkedWithoutMetadata": "55fc69a464aac66148b4aac7806bcd893bea15e487a4c865f03ebe00b8f8af92"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "3990c38a433350446726a2819d41bf363d775a04679088a26218cee032efbb0a",
          "withoutMetadata": "3990c38a433350446726a2819d41bf363d775a04679088a26218cee032efbb0a",
          "linkedWithoutMetadata": "3990c38a433350446726a2819d41bf363d775a04679088a26218cee032efbb0a"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "fc188cf63a6db6517cfd21341f4bf17510468c88352435b202a4065e8f647198",
          "withoutMetadata": "fc188cf63a6db6517cfd21341f4bf17510468c88352435b202a4065e8f647198",
          "linkedWithoutMetadata": "fc188cf63a6db6517cfd21341f4bf17510468c88352435b202a4065e8f647198"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/UpgradeabilityProxy.sol:UpgradeabilityProxy": {
        "src": "contracts/utils/proxy/UpgradeabilityProxy.sol:11",
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "withoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3",
          "linkedWithoutMetadata": "4afab9906628f0fd881bc046c6da0bcf914213e08b48b480e97b20a29039bae3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "withoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606",
          "linkedWithoutMetadata": "4bd9e86b4b0fa046b6ee94cec682f0a2ac63f6ea9e0189cb4c30e626c9913606"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "withoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4",
          "linkedWithoutMetadata": "b8b7df211c14ce3b9957693e90c20b552c3f3e5e6f6f71aece24beb4cb8acad4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/token/ExoticUSD.sol:ExoticUSD": {
        "src": "contracts/utils/token/ExoticUSD.sol:8",
        "version": {
          "withMetadata": "cd2ba96eb7ff30fc1411b5230b637c6399d91dd43c12e24a7b47e9dc4ac1f784",
          "withoutMetadata": "cd2ba96eb7ff30fc1411b5230b637c6399d91dd43c12e24a7b47e9dc4ac1f784",
          "linkedWithoutMetadata": "cd2ba96eb7ff30fc1411b5230b637c6399d91dd43c12e24a7b47e9dc4ac1f784"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "()",
          "mintForUser(address payable)",
          "sendEthToUser(address payable)",
          "()",
          "()",
          "setName(string)",
          "setSymbol(string)",
          "setDefaultAmount(uint256)",
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExoticUSD",
            "src": "contracts/utils/token/ExoticUSD.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "__name",
            "src": "contracts/utils/token/ExoticUSD.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "__symbol",
            "src": "contracts/utils/token/ExoticUSD.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "__name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ExoticUSD",
              "src": "contracts/utils/token/ExoticUSD.sol:9"
            },
            {
              "label": "__symbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ExoticUSD",
              "src": "contracts/utils/token/ExoticUSD.sol:10"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "ExoticUSD",
              "src": "contracts/utils/token/ExoticUSD.sol:14"
            },
            {
              "label": "defaultAmount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ExoticUSD",
              "src": "contracts/utils/token/ExoticUSD.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "1b9f431ee71e510a5d0fd643dd34f829a3f82762291742de0242416a7567316e",
          "withoutMetadata": "1b9f431ee71e510a5d0fd643dd34f829a3f82762291742de0242416a7567316e",
          "linkedWithoutMetadata": "1b9f431ee71e510a5d0fd643dd34f829a3f82762291742de0242416a7567316e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "7cf83710c4394c9ca3ebe3bb8165e9511bbb4ff88a0c1cd534f4928ca595bb15",
          "withoutMetadata": "7cf83710c4394c9ca3ebe3bb8165e9511bbb4ff88a0c1cd534f4928ca595bb15",
          "linkedWithoutMetadata": "7cf83710c4394c9ca3ebe3bb8165e9511bbb4ff88a0c1cd534f4928ca595bb15"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "bb979f532bd060eb1206765544d7dbacf284712ad17df0ff995c67d74ef66b2c",
          "withoutMetadata": "bb979f532bd060eb1206765544d7dbacf284712ad17df0ff995c67d74ef66b2c",
          "linkedWithoutMetadata": "bb979f532bd060eb1206765544d7dbacf284712ad17df0ff995c67d74ef66b2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "c7d57788f17fd88611f9e5ddd363817569f1f545861e4005c95afce32e4c7d91",
          "withoutMetadata": "c7d57788f17fd88611f9e5ddd363817569f1f545861e4005c95afce32e4c7d91",
          "linkedWithoutMetadata": "c7d57788f17fd88611f9e5ddd363817569f1f545861e4005c95afce32e4c7d91"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "34897e041f0727547809790b7aea5d009c2cde1ace2945ca5ef827ee79f24592",
          "withoutMetadata": "34897e041f0727547809790b7aea5d009c2cde1ace2945ca5ef827ee79f24592",
          "linkedWithoutMetadata": "34897e041f0727547809790b7aea5d009c2cde1ace2945ca5ef827ee79f24592"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3",
          "withoutMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3",
          "linkedWithoutMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0",
          "withoutMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0",
          "linkedWithoutMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b",
          "withoutMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b",
          "linkedWithoutMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPyth.sol:IPyth": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPyth.sol:10",
        "inherit": [
          "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents"
        ],
        "libraries": [],
        "methods": [
          "getValidTimePeriod()",
          "getPrice(bytes32)",
          "getEmaPrice(bytes32)",
          "getPriceUnsafe(bytes32)",
          "getPriceNoOlderThan(bytes32,uint256)",
          "getEmaPriceUnsafe(bytes32)",
          "getEmaPriceNoOlderThan(bytes32,uint256)",
          "updatePriceFeeds(bytes[])",
          "updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])",
          "getUpdateFee(bytes[])",
          "parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:IPythEvents": {
        "src": "@pythnetwork/pyth-sdk-solidity/IPythEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:PythStructs": {
        "src": "@pythnetwork/pyth-sdk-solidity/PythStructs.sol:4",
        "version": {
          "withMetadata": "e28d3eb1fbfebe22802692e62fc9f415d4e3cacd5f2fe7c0588d7fb2fd0b73e1",
          "withoutMetadata": "e28d3eb1fbfebe22802692e62fc9f415d4e3cacd5f2fe7c0588d7fb2fd0b73e1",
          "linkedWithoutMetadata": "e28d3eb1fbfebe22802692e62fc9f415d4e3cacd5f2fe7c0588d7fb2fd0b73e1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:IQuoter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:ThalesAMMLiquidityPool": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:19",
        "version": {
          "withMetadata": "4567999fe8d9389ea4d3c0b4f43e33f9b8328f0fcaa04e1656f03393a961a6a6",
          "withoutMetadata": "4567999fe8d9389ea4d3c0b4f43e33f9b8328f0fcaa04e1656f03393a961a6a6",
          "linkedWithoutMetadata": "4567999fe8d9389ea4d3c0b4f43e33f9b8328f0fcaa04e1656f03393a961a6a6"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize((address,address,address,uint256,uint256,uint256,uint256,bool))",
          "start()",
          "deposit(uint256)",
          "commitTrade(address,uint256)",
          "getOptionsForBuy(address,uint256,uint8)",
          "getOptionsForBuyByAddress(address,uint256,address)",
          "getOrCreateMarketPool(address)",
          "withdrawalRequest()",
          "partialWithdrawalRequest(uint256)",
          "prepareRoundClosing()",
          "processRoundClosingBatch(uint256)",
          "closeRound()",
          "exerciseMarketsReadyToExercised()",
          "exerciseMarketsReadyToExercisedBatch(uint256)",
          "isUserLPing(address)",
          "getMaxAvailableDepositForUser(address)",
          "getNeededStakedThalesToWithdrawForUser(address)",
          "getMarketPool(address)",
          "canCloseCurrentRound()",
          "hasMarketsReadyToBeExercised()",
          "cumulativePnLBetweenRounds(uint256,uint256)",
          "getRoundStartTime(uint256)",
          "getRoundEndTime(uint256)",
          "getMarketRound(address)",
          "getUsersCountInCurrentRound()",
          "setPaused(bool)",
          "setOnlyWhitelistedStakersAllowed(bool)",
          "setPoolRoundMastercopy(address)",
          "setStakedThalesMultiplier(uint256)",
          "setStakingThales(address)",
          "setMaxAllowedDeposit(uint256)",
          "setMinAllowedDeposit(uint256)",
          "setMaxAllowedUsers(uint256)",
          "setThalesAmm(address)",
          "setDefaultLiquidityProvider(address)",
          "setRoundLength(uint256)",
          "setWhitelistedAddresses(address[],bool)",
          "setWhitelistedStakerAddresses(address[],bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "52",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "103",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "thalesAMM",
              "offset": 1,
              "slot": "103",
              "type": "t_contract(IThalesAMM)25245",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:41"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:42"
            },
            {
              "label": "started",
              "offset": 20,
              "slot": "104",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:44"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:46"
            },
            {
              "label": "roundLength",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:47"
            },
            {
              "label": "firstRoundStartTime",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:48"
            },
            {
              "label": "roundPools",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:50"
            },
            {
              "label": "usersPerRound",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:52"
            },
            {
              "label": "userInRound",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:53"
            },
            {
              "label": "balancesPerRound",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:55"
            },
            {
              "label": "allocationPerRound",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:56"
            },
            {
              "label": "withdrawalRequested",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:58"
            },
            {
              "label": "tradingMarketsPerRound",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:60"
            },
            {
              "label": "isTradingMarketInARound",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:61"
            },
            {
              "label": "profitAndLossPerRound",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:63"
            },
            {
              "label": "cumulativeProfitAndLoss",
              "offset": 0,
              "slot": "117",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:64"
            },
            {
              "label": "maxAllowedDeposit",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:66"
            },
            {
              "label": "minDepositAmount",
              "offset": 0,
              "slot": "119",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:67"
            },
            {
              "label": "maxAllowedUsers",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:68"
            },
            {
              "label": "usersCurrentlyInPool",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:69"
            },
            {
              "label": "defaultLiquidityProvider",
              "offset": 0,
              "slot": "122",
              "type": "t_address",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:71"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "123",
              "type": "t_contract(IStakingThales)25103",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:73"
            },
            {
              "label": "stakedThalesMultiplier",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:75"
            },
            {
              "label": "poolRoundMastercopy",
              "offset": 0,
              "slot": "125",
              "type": "t_address",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:77"
            },
            {
              "label": "whitelistedDeposits",
              "offset": 0,
              "slot": "126",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:79"
            },
            {
              "label": "totalDeposited",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:81"
            },
            {
              "label": "onlyWhitelistedStakersAllowed",
              "offset": 0,
              "slot": "128",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:83"
            },
            {
              "label": "whitelistedStakers",
              "offset": 0,
              "slot": "129",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:85"
            },
            {
              "label": "needsTransformingCollateral",
              "offset": 0,
              "slot": "130",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:87"
            },
            {
              "label": "marketAlreadyExercisedInRound",
              "offset": 0,
              "slot": "131",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:89"
            },
            {
              "label": "roundClosingPrepared",
              "offset": 0,
              "slot": "132",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:91"
            },
            {
              "label": "usersProcessedInRound",
              "offset": 0,
              "slot": "133",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:93"
            },
            {
              "label": "marketsProcessedInRound",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:95"
            },
            {
              "label": "withdrawalShare",
              "offset": 0,
              "slot": "135",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)25103": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMM)25245": {
              "label": "contract IThalesAMM",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:ThalesAMMLiquidityPoolRound": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:10",
        "version": {
          "withMetadata": "ee8b05b6b1124e168403ecbb9aca059c75006b9d94ef8a178263fa066306b8a9",
          "withoutMetadata": "ee8b05b6b1124e168403ecbb9aca059c75006b9d94ef8a178263fa066306b8a9",
          "linkedWithoutMetadata": "ee8b05b6b1124e168403ecbb9aca059c75006b9d94ef8a178263fa066306b8a9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256,uint256,uint256)",
          "updateRoundTimes(uint256,uint256)",
          "exerciseMarketReadyToExercised(address)",
          "moveOptions(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ThalesAMMLiquidityPool)7304",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:16"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:17"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:19"
            },
            {
              "label": "roundStartTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:20"
            },
            {
              "label": "roundEndTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:21"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:25"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ThalesAMMLiquidityPool)7304": {
              "label": "contract ThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/ThalesAMM.sol:ThalesAMM": {
        "src": "contracts/AMM/ThalesAMM.sol:30",
        "version": {
          "withMetadata": "01750a75fd190cc05f9d4881c5530af57ba88577c4a37e970ae5ad1e0f6530ac",
          "withoutMetadata": "01750a75fd190cc05f9d4881c5530af57ba88577c4a37e970ae5ad1e0f6530ac",
          "linkedWithoutMetadata": "01750a75fd190cc05f9d4881c5530af57ba88577c4a37e970ae5ad1e0f6530ac"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256,address,uint256,uint256,uint256)",
          "availableToBuyFromAMM(address,uint8)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)",
          "buyPriceImpact(address,uint8,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellPriceImpact(address,uint8,uint256)",
          "price(address,uint8)",
          "isMarketInAMMTrading(address)",
          "getCapPerAsset(bytes32)",
          "buyFromAMMWithReferrer(address,uint8,uint256,uint256,uint256,address)",
          "buyFromAMMWithDifferentCollateralAndReferrer(address,uint8,uint256,uint256,uint256,address,address)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "retrieveSUSDAmount(address payable,uint256)",
          "setMinimalTimeLeftToMaturity(uint256)",
          "setWhitelistedAddress(address,bool)",
          "setSafeBoxFeePerAddress(address,uint256)",
          "setMinSpreadPerAddress(address,uint256)",
          "setMinMaxSpread(uint256,uint256)",
          "setSafeBoxData(address,uint256)",
          "setMinMaxSupportedPriceAndCap(uint256,uint256,uint256)",
          "setImpliedVolatilityPerAsset(bytes32,uint256)",
          "setPriceFeedAndSUSD(address,address)",
          "setAmmUtils(address)",
          "setStakingThalesAndReferrals(address,address,uint256)",
          "setPositionalMarketManager(address)",
          "setLiquidityPool(address)",
          "setCurveSUSD(address,address,address,address,bool,uint256)",
          "setCapPerAsset(bytes32,uint256)",
          "transferTokens(address[],address payable,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "priceFeed",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IPriceFeed)24995",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:46"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:47"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:48"
            },
            {
              "label": "capPerMarket",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:50"
            },
            {
              "label": "min_spread",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:51"
            },
            {
              "label": "max_spread",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:52"
            },
            {
              "label": "impliedVolatilityPerAsset",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:54"
            },
            {
              "label": "minimalTimeLeftToMaturity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:56"
            },
            {
              "label": "spentOnMarket",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:58"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:60"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:61"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IStakingThales)25103",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:63"
            },
            {
              "label": "minSupportedPrice",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:65"
            },
            {
              "label": "maxSupportedPrice",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:66"
            },
            {
              "label": "_capPerAsset",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:68"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:70"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:72"
            },
            {
              "label": "referrerFee",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:73"
            },
            {
              "label": "curveSUSD",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(ICurveSUSD)24616",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:75"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:77"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:78"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:79"
            },
            {
              "label": "curveOnrampEnabled",
              "offset": 20,
              "slot": "26",
              "type": "t_bool",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:81"
            },
            {
              "label": "maxAllowedPegSlippagePercentage",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:83"
            },
            {
              "label": "ammUtils",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IThalesAMMUtils)25360",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:85"
            },
            {
              "label": "safeBoxFeePerAddress",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:90"
            },
            {
              "label": "min_spreadPerAddress",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:91"
            },
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "31",
              "type": "t_contract(ThalesAMMLiquidityPool)7304",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:93"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ICurveSUSD)24616": {
              "label": "contract ICurveSUSD",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)24995": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)25103": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMMUtils)25360": {
              "label": "contract IThalesAMMUtils",
              "numberOfBytes": "20"
            },
            "t_contract(ThalesAMMLiquidityPool)7304": {
              "label": "contract ThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/OwnedWithInit.sol:OwnedWithInit": {
        "src": "contracts/OwnedWithInit.sol:5",
        "version": {
          "withMetadata": "8b7514f41bf97b8937265336d08cbb6e032ef9ade39a2197290374b4b93a7567",
          "withoutMetadata": "8b7514f41bf97b8937265336d08cbb6e032ef9ade39a2197290374b4b93a7567",
          "linkedWithoutMetadata": "8b7514f41bf97b8937265336d08cbb6e032ef9ade39a2197290374b4b93a7567"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "nominateNewOwner(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/Position.sol:Position": {
        "src": "contracts/Positions/Position.sol:15",
        "version": {
          "withMetadata": "3e83342c6bcc1561de26986b5e685cd21f4c3e6e19001a16430b82869f3268b2",
          "withoutMetadata": "3e83342c6bcc1561de26986b5e685cd21f4c3e6e19001a16430b82869f3268b2",
          "linkedWithoutMetadata": "3e83342c6bcc1561de26986b5e685cd21f4c3e6e19001a16430b82869f3268b2"
        },
        "inherit": [
          "contracts/interfaces/IPosition.sol:IPosition",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "allowance(address,address)",
          "mint(address,uint256)",
          "exercise(address)",
          "exerciseWithAmount(address,uint256)",
          "expire(address payable)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getBalanceOf(address)",
          "getTotalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/Positions/Position.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:18"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:19"
            },
            {
              "label": "market",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PositionalMarket)13043",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:22"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:24"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:25"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:28"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:33"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PositionalMarket)13043": {
              "label": "contract PositionalMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarket.sol:PositionalMarket": {
        "src": "contracts/Positions/PositionalMarket.sol:18",
        "version": {
          "withMetadata": "6dd6dd4227c9719197358e563262d031f135e033ee48e2269213c0b8d546fd06",
          "withoutMetadata": "6dd6dd4227c9719197358e563262d031f135e033ee48e2269213c0b8d546fd06",
          "linkedWithoutMetadata": "6dd6dd4227c9719197358e563262d031f135e033ee48e2269213c0b8d546fd06"
        },
        "inherit": [
          "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket",
          "contracts/OwnedWithInit.sol:OwnedWithInit"
        ],
        "libraries": [],
        "methods": [
          "initialize((address,address,address,address,bytes32,uint256,uint256[2],uint256,address,address,address))",
          "phase()",
          "oraclePriceAndTimestamp()",
          "oraclePrice()",
          "canResolve()",
          "result()",
          "balancesOf(address)",
          "totalSupplies()",
          "getMaximumBurnable(address)",
          "getOptions()",
          "getOracleDetails()",
          "requireUnpaused()",
          "mint(uint256)",
          "burnOptionsMaximum()",
          "burnOptions(uint256)",
          "resolve()",
          "exerciseOptions()",
          "expire(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/Positions/PositionalMarket.sol:75"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:7"
            },
            {
              "label": "options",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Options)11831_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:59"
            },
            {
              "label": "times",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Times)11836_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:60"
            },
            {
              "label": "oracleDetails",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(OracleDetails)11847_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:61"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Fees)14818_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:62"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IPriceFeed)24995",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:63"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)2625",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:64"
            },
            {
              "label": "deposited",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:68"
            },
            {
              "label": "initialMint",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:69"
            },
            {
              "label": "creator",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:70"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:71"
            },
            {
              "label": "initialized",
              "offset": 21,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)2625": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)24995": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(Position)11808": {
              "label": "contract Position",
              "numberOfBytes": "20"
            },
            "t_struct(Fees)14818_storage": {
              "label": "struct PositionalMarketManager.Fees",
              "members": [
                {
                  "label": "poolFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "creatorFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Options)11831_storage": {
              "label": "struct PositionalMarket.Options",
              "members": [
                {
                  "label": "up",
                  "type": "t_contract(Position)11808",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "down",
                  "type": "t_contract(Position)11808",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(OracleDetails)11847_storage": {
              "label": "struct PositionalMarket.OracleDetails",
              "members": [
                {
                  "label": "key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "strikePrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "finalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "customMarket",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "iOracleInstanceAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Times)11836_storage": {
              "label": "struct PositionalMarket.Times",
              "members": [
                {
                  "label": "maturity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketData.sol:PositionalMarketData": {
        "src": "contracts/Positions/PositionalMarketData.sol:16",
        "version": {
          "withMetadata": "0582de39ae4960c6597f3a37a900f546ee845912526593b8ecad1f40caa34404",
          "withoutMetadata": "0582de39ae4960c6597f3a37a900f546ee845912526593b8ecad1f40caa34404",
          "linkedWithoutMetadata": "0582de39ae4960c6597f3a37a900f546ee845912526593b8ecad1f40caa34404"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getMarketParameters(address)",
          "getMarketData(address)",
          "getAccountMarketData(address,address)",
          "getBatchPriceImpactForAllActiveMarkets(uint256,uint256)",
          "getBatchBasePricesForAllActiveMarkets(uint256,uint256)",
          "getAvailableAssets()",
          "getMaturityDates(bytes32)",
          "getMarketsForAssetAndStrikeDate(bytes32,uint256)",
          "getActiveMarketsInfoPerPosition(address[],uint8)",
          "getRangedActiveMarketsInfoPerPosition(address[],uint8)",
          "getAmmMarketData(address)",
          "getRangedAmmMarketData(address)",
          "setPositionalMarketManager(address)",
          "setThalesAMM(address)",
          "setRangedMarketsAMM(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "manager",
              "offset": 1,
              "slot": "3",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:124"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:125"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:126"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketFactory.sol:PositionalMarketFactory": {
        "src": "contracts/Positions/PositionalMarketFactory.sol:18",
        "version": {
          "withMetadata": "55578f298c22fb1d22448d6f35ab74fb17b541de5b84cd47d72cdd3caa2544d4",
          "withoutMetadata": "55578f298c22fb1d22448d6f35ab74fb17b541de5b84cd47d72cdd3caa2544d4",
          "linkedWithoutMetadata": "55578f298c22fb1d22448d6f35ab74fb17b541de5b84cd47d72cdd3caa2544d4"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "createMarket((address,address,address,bytes32,uint256,uint256[2],uint256))",
          "setPositionalMarketManager(address)",
          "setPositionalMarketMastercopy(address)",
          "setPositionMastercopy(address)",
          "setThalesAMM(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "positionalMarketManager",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:20"
            },
            {
              "label": "positionalMarketMastercopy",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:22"
            },
            {
              "label": "positionMastercopy",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:23"
            },
            {
              "label": "limitOrderProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:25"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketManager.sol:PositionalMarketManager": {
        "src": "contracts/Positions/PositionalMarketManager.sol:25",
        "version": {
          "withMetadata": "36a43ca33039a3c06f4ead604f5780b99d4ebbe4d3bd615e46bfe634c50d0b2b",
          "withoutMetadata": "36a43ca33039a3c06f4ead604f5780b99d4ebbe4d3bd615e46bfe634c50d0b2b",
          "linkedWithoutMetadata": "36a43ca33039a3c06f4ead604f5780b99d4ebbe4d3bd615e46bfe634c50d0b2b"
        },
        "inherit": [
          "contracts/interfaces/IPositionalMarketManager.sol:IPositionalMarketManager",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256,uint256)",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "incrementTotalDeposited(uint256)",
          "decrementTotalDeposited(uint256)",
          "createMarket(bytes32,uint256,uint256,uint256)",
          "createMarkets(bytes32[],uint256[],uint256[])",
          "transferSusdTo(address,address,uint256)",
          "resolveMarket(address)",
          "resolveMarketsBatch(address[])",
          "expireMarkets(address[])",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "canCreateMarket(bytes32,uint256,uint256)",
          "enableWhitelistedAddresses()",
          "disableWhitelistedAddresses()",
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "setWhitelistedAddresses(address[])",
          "setPositionalMarketFactory(address)",
          "setNeedsTransformingCollateral(bool)",
          "setExpiryDuration(uint256)",
          "setMaxTimeToMaturity(uint256)",
          "setPriceFeed(address)",
          "setOnlyAMMMintingAndBurning(bool)",
          "setsUSD(address)",
          "setPriceBuffer(uint256)",
          "setTimeframeBuffer(uint256)",
          "setMarketCreationEnabled(bool)",
          "setMarketCreationParameters(uint256,uint256)",
          "getStrikePriceStep(bytes32)",
          "getThalesAMM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "durations",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Durations)14823_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:47"
            },
            {
              "label": "capitalRequirement",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:48"
            },
            {
              "label": "marketCreationEnabled",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:50"
            },
            {
              "label": "customMarketCreationEnabled",
              "offset": 1,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:51"
            },
            {
              "label": "onlyWhitelistedAddressesCanCreateMarkets",
              "offset": 2,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:53"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:54"
            },
            {
              "label": "totalDeposited",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:56"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(AddressSet)25370_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:58"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(AddressSet)25370_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:59"
            },
            {
              "label": "_migratingManager",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(PositionalMarketManager)16515",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:61"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(IPriceFeed)24995",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:63"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IERC20)2625",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:64"
            },
            {
              "label": "positionalMarketFactory",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:66"
            },
            {
              "label": "needsTransformingCollateral",
              "offset": 20,
              "slot": "17",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:68"
            },
            {
              "label": "timeframeBuffer",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:70"
            },
            {
              "label": "priceBuffer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:71"
            },
            {
              "label": "marketsPerOracleKey",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:73"
            },
            {
              "label": "marketsStrikePrice",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:74"
            },
            {
              "label": "onlyAMMMintingAndBurning",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:76"
            },
            {
              "label": "marketCreationMonthLimit",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:78"
            },
            {
              "label": "allowedDate1",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:80"
            },
            {
              "label": "allowedDate2",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:81"
            },
            {
              "label": "marketExistsByOracleKeyDateAndStrikePrice",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:83"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)2625": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)24995": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(PositionalMarketManager)16515": {
              "label": "contract PositionalMarketManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => address[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
              "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
              "label": "mapping(uint256 => mapping(uint256 => address))",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)25370_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Durations)14823_storage": {
              "label": "struct PositionalMarketManager.Durations",
              "members": [
                {
                  "label": "expiryDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxTimeToMaturity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarket.sol:RangedMarket": {
        "src": "contracts/RangedMarkets/RangedMarket.sol:13",
        "version": {
          "withMetadata": "f0857b31a6184ec9ce55a4c718c5dfd602038589d15b11e5c2f18aff7e5f4fe6",
          "withoutMetadata": "f0857b31a6184ec9ce55a4c718c5dfd602038589d15b11e5c2f18aff7e5f4fe6",
          "linkedWithoutMetadata": "f0857b31a6184ec9ce55a4c718c5dfd602038589d15b11e5c2f18aff7e5f4fe6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address)",
          "mint(uint256,uint8,address)",
          "burnIn(uint256,address)",
          "burnOut(uint256,address)",
          "canExercisePositions()",
          "exercisePositions()",
          "canResolve()",
          "resolveMarket()",
          "result()",
          "withdrawCollateral(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "resolved",
            "src": "contracts/RangedMarkets/RangedMarket.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/RangedMarkets/RangedMarket.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "leftMarket",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPositionalMarket)24802",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:21"
            },
            {
              "label": "rightMarket",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPositionalMarket)24802",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:22"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Positions)16543_storage",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:29"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(RangedMarketsAMM)20324",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:31"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "4",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:33"
            },
            {
              "label": "finalPrice",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:35"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:39"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPositionalMarket)24802": {
              "label": "contract IPositionalMarket",
              "numberOfBytes": "20"
            },
            "t_contract(RangedMarketsAMM)20324": {
              "label": "contract RangedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_contract(RangedPosition)20761": {
              "label": "contract RangedPosition",
              "numberOfBytes": "20"
            },
            "t_struct(Positions)16543_storage": {
              "label": "struct RangedMarket.Positions",
              "members": [
                {
                  "label": "inp",
                  "type": "t_contract(RangedPosition)20761",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "outp",
                  "type": "t_contract(RangedPosition)20761",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarketMastercopy.sol:RangedMarketMastercopy": {
        "src": "contracts/RangedMarkets/RangedMarketMastercopy.sol:7",
        "version": {
          "withMetadata": "5a47759dea07d66230bfbbb82894af5d3d3614dcc99b0ff8f3556e4a7af66ea2",
          "withoutMetadata": "5a47759dea07d66230bfbbb82894af5d3d3614dcc99b0ff8f3556e4a7af66ea2",
          "linkedWithoutMetadata": "5a47759dea07d66230bfbbb82894af5d3d3614dcc99b0ff8f3556e4a7af66ea2"
        },
        "inherit": [
          "contracts/RangedMarkets/RangedMarket.sol:RangedMarket"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RangedMarketMastercopy",
            "src": "contracts/RangedMarkets/RangedMarketMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "leftMarket",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPositionalMarket)24802",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:21"
            },
            {
              "label": "rightMarket",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPositionalMarket)24802",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:22"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Positions)16543_storage",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:29"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(RangedMarketsAMM)20324",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:31"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "4",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:33"
            },
            {
              "label": "finalPrice",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:35"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:39"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPositionalMarket)24802": {
              "label": "contract IPositionalMarket",
              "numberOfBytes": "20"
            },
            "t_contract(RangedMarketsAMM)20324": {
              "label": "contract RangedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_contract(RangedPosition)20761": {
              "label": "contract RangedPosition",
              "numberOfBytes": "20"
            },
            "t_struct(Positions)16543_storage": {
              "label": "struct RangedMarket.Positions",
              "members": [
                {
                  "label": "inp",
                  "type": "t_contract(RangedPosition)20761",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "outp",
                  "type": "t_contract(RangedPosition)20761",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarketsAMM.sol:RangedMarketsAMM": {
        "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:32",
        "version": {
          "withMetadata": "8104c9433b2aa4513fc01e4d41d9066fb4b1c68987c93a552e61f616e0962cd1",
          "withoutMetadata": "8104c9433b2aa4513fc01e4d41d9066fb4b1c68987c93a552e61f616e0962cd1",
          "linkedWithoutMetadata": "8104c9433b2aa4513fc01e4d41d9066fb4b1c68987c93a552e61f616e0962cd1"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256,uint256,address,address,uint256)",
          "createRangedMarket(address,address)",
          "createRangedMarkets(address[],address[])",
          "canCreateRangedMarket(address,address)",
          "availableToBuyFromAMM(address,uint8)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteDetailed(address,uint8,uint256)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)",
          "buyFromAMMWithReferrer(address,uint8,uint256,uint256,uint256,address)",
          "buyFromAMMWithDifferentCollateralAndReferrer(address,uint8,uint256,uint256,uint256,address,address)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellToAmmQuoteDetailed(address,uint8,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "resolveRangedMarketsBatch(address[])",
          "getPriceImpact(address,uint8)",
          "transferSusdTo(address,uint256)",
          "retrieveSUSDAmount(address payable,uint256)",
          "setRangedMarketMastercopies(address,address)",
          "setMinMaxSupportedPrice(uint256,uint256,uint256,uint256)",
          "setSafeBoxDataAndRangedAMMFee(address,uint256,uint256)",
          "setThalesAMMStakingThalesAndReferrals(address,address,address,uint256)",
          "setCurveSUSD(bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "thalesAmm",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IThalesAMM)25245",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:39"
            },
            {
              "label": "rangedAmmFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:41"
            },
            {
              "label": "createdRangedMarkets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:43"
            },
            {
              "label": "_knownMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)25370_storage",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:44"
            },
            {
              "label": "rangedMarketMastercopy",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:46"
            },
            {
              "label": "rangedPositionMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:47"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:49"
            },
            {
              "label": "spentOnMarket",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:51"
            },
            {
              "label": "capPerMarket",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:54"
            },
            {
              "label": "minSupportedPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:56"
            },
            {
              "label": "maxSupportedPrice",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:57"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:59"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:60"
            },
            {
              "label": "minimalDifBetweenStrikes",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:62"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(IStakingThales)25103",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:64"
            },
            {
              "label": "maximalDifBetweenStrikes",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:66"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:68"
            },
            {
              "label": "referrerFee",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:69"
            },
            {
              "label": "curveSUSD",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(ICurveSUSD)24616",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:71"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:73"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:74"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:75"
            },
            {
              "label": "curveOnrampEnabled",
              "offset": 20,
              "slot": "27",
              "type": "t_bool",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:77"
            },
            {
              "label": "maxAllowedPegSlippagePercentage",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICurveSUSD)24616": {
              "label": "contract ICurveSUSD",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)25103": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMM)25245": {
              "label": "contract IThalesAMM",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)25370_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedPosition.sol:RangedPosition": {
        "src": "contracts/RangedMarkets/RangedPosition.sol:13",
        "version": {
          "withMetadata": "01f6558cd59de885b7af713561d7236ff9eff8b17e76bcb753a5e6f2b0502503",
          "withoutMetadata": "01f6558cd59de885b7af713561d7236ff9eff8b17e76bcb753a5e6f2b0502503",
          "linkedWithoutMetadata": "01f6558cd59de885b7af713561d7236ff9eff8b17e76bcb753a5e6f2b0502503"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,string,string,address)",
          "allowance(address,address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getBalanceOf(address)",
          "getTotalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/RangedMarkets/RangedPosition.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:16"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:17"
            },
            {
              "label": "rangedMarket",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(RangedMarket)17369",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:20"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:22"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:23"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:26"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:31"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(RangedMarket)17369": {
              "label": "contract RangedMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedPositionMastercopy.sol:RangedPositionMastercopy": {
        "src": "contracts/RangedMarkets/RangedPositionMastercopy.sol:7",
        "version": {
          "withMetadata": "b93ffe81b56061f632bf207b01409ee3c03f76080d284e907616b3c7782ec1fd",
          "withoutMetadata": "b93ffe81b56061f632bf207b01409ee3c03f76080d284e907616b3c7782ec1fd",
          "linkedWithoutMetadata": "b93ffe81b56061f632bf207b01409ee3c03f76080d284e907616b3c7782ec1fd"
        },
        "inherit": [
          "contracts/RangedMarkets/RangedPosition.sol:RangedPosition",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RangedPositionMastercopy",
            "src": "contracts/RangedMarkets/RangedPositionMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:16"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:17"
            },
            {
              "label": "rangedMarket",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(RangedMarket)17369",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:20"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:22"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:23"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:26"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:31"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(RangedMarket)17369": {
              "label": "contract RangedMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:MultiCollateralOnOffRamp": {
        "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:35",
        "version": {
          "withMetadata": "263091685f35f1998085d2831f3337ab90444b1f60092e5d0e9452377976b5c8",
          "withoutMetadata": "263091685f35f1998085d2831f3337ab90444b1f60092e5d0e9452377976b5c8",
          "linkedWithoutMetadata": "263091685f35f1998085d2831f3337ab90444b1f60092e5d0e9452377976b5c8"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "onramp(address,uint256)",
          "onrampWithEth(uint256)",
          "getMinimumReceived(address,uint256)",
          "getMaximumReceived(address,uint256)",
          "getEncodedPacked(address,uint24,address,uint24,address)",
          "setSupportedCollateral(address,bool)",
          "setSupportedAMM(address,bool)",
          "setWETH(address)",
          "setSUSD(address)",
          "setSwapRouter(address)",
          "setPriceFeed(address)",
          "setPriceFeedKeyPerAsset(bytes32,address)",
          "setPathPerCollateral(address,bytes,bool)",
          "setManager(address)",
          "setCurveSUSD(address,address,address,address,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "sUSD",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:40"
            },
            {
              "label": "collateralSupported",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:42"
            },
            {
              "label": "ammsSupported",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:44"
            },
            {
              "label": "swapRouter",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISwapRouter)4537",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:46"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPriceFeed)24995",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:48"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:50"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:51"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:52"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:53"
            },
            {
              "label": "curveOnrampEnabled",
              "offset": 20,
              "slot": "13",
              "type": "t_bool",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:55"
            },
            {
              "label": "maxAllowedPegSlippagePercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:57"
            },
            {
              "label": "curveSUSD",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ICurveSUSD)24616",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:59"
            },
            {
              "label": "pathPerCollateral",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:61"
            },
            {
              "label": "priceFeedKeyPerCollateral",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:63"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IPositionalMarketManagerTruncated)24947",
              "contract": "MultiCollateralOnOffRamp",
              "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ICurveSUSD)24616": {
              "label": "contract ICurveSUSD",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPositionalMarketManagerTruncated)24947": {
              "label": "contract IPositionalMarketManagerTruncated",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)24995": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(ISwapRouter)4537": {
              "label": "contract ISwapRouter",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:WethLike": {
        "src": "contracts/SpeedMarkets/MultiCollateralOnOffRamp.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket": {
        "src": "contracts/SpeedMarkets/SpeedMarket.sol:9",
        "version": {
          "withMetadata": "f8424646b36dc5142d23ce097c70eff119de60357c7ae0d18739eac4b5e8150f",
          "withoutMetadata": "f8424646b36dc5142d23ce097c70eff119de60357c7ae0d18739eac4b5e8150f",
          "linkedWithoutMetadata": "f8424646b36dc5142d23ce097c70eff119de60357c7ae0d18739eac4b5e8150f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize((address,address,bytes32,uint64,int64,uint8,uint256))",
          "resolve(int64)",
          "isUserWinner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)22041",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)22041",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)24589",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)24589": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)22041": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:SpeedMarketMastercopy": {
        "src": "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:7",
        "version": {
          "withMetadata": "918dac3ad286d0f1f35bda1faf220268f51ab808e5cd07bdebe0be51e12e3145",
          "withoutMetadata": "918dac3ad286d0f1f35bda1faf220268f51ab808e5cd07bdebe0be51e12e3145",
          "linkedWithoutMetadata": "918dac3ad286d0f1f35bda1faf220268f51ab808e5cd07bdebe0be51e12e3145"
        },
        "inherit": [
          "contracts/SpeedMarkets/SpeedMarket.sol:SpeedMarket"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SpeedMarketMastercopy",
            "src": "contracts/SpeedMarkets/SpeedMarketMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "user",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:27"
            },
            {
              "label": "asset",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:28"
            },
            {
              "label": "strikeTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:29"
            },
            {
              "label": "strikePrice",
              "offset": 8,
              "slot": "2",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:30"
            },
            {
              "label": "direction",
              "offset": 16,
              "slot": "2",
              "type": "t_enum(Direction)22041",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:31"
            },
            {
              "label": "buyinAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:32"
            },
            {
              "label": "resolved",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:34"
            },
            {
              "label": "finalPrice",
              "offset": 1,
              "slot": "4",
              "type": "t_int64",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:35"
            },
            {
              "label": "result",
              "offset": 9,
              "slot": "4",
              "type": "t_enum(Direction)22041",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:36"
            },
            {
              "label": "speedMarketsAMM",
              "offset": 10,
              "slot": "4",
              "type": "t_contract(SpeedMarketsAMM)24589",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:38"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:40"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "SpeedMarket",
              "src": "contracts/SpeedMarkets/SpeedMarket.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(SpeedMarketsAMM)24589": {
              "label": "contract SpeedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)22041": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int64": {
              "label": "int64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/SpeedMarkets/SpeedMarketsAMM.sol:SpeedMarketsAMM": {
        "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:31",
        "version": {
          "withMetadata": "4160bf2216a9de85026f1852f3e81e01e7b2b5b20f7396806261bd0794c1663e",
          "withoutMetadata": "4160bf2216a9de85026f1852f3e81e01e7b2b5b20f7396806261bd0794c1663e",
          "linkedWithoutMetadata": "4160bf2216a9de85026f1852f3e81e01e7b2b5b20f7396806261bd0794c1663e"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "createNewMarket(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDelta(bytes32,uint64,uint8,uint256,bytes[],address)",
          "createNewMarketWithDifferentCollateral(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "createNewMarketWithDifferentCollateralAndDelta(bytes32,uint64,uint8,bytes[],address,uint256,bool,address)",
          "resolveMarket(address,bytes[])",
          "resolveMarketsBatch(address[],bytes[])",
          "resolveMarketManually(address,int64)",
          "resolveMarketManuallyBatch(address[],int64[])",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "numActiveMarketsPerUser(address)",
          "activeMarketsPerUser(uint256,uint256,address)",
          "numMaturedMarketsPerUser(address)",
          "maturedMarketsPerUser(uint256,uint256,address)",
          "canResolveMarket(address)",
          "getMarketsData(address[])",
          "getDirectionalRiskPerAsset(bytes32)",
          "setMastercopy(address)",
          "setAmounts(uint256,uint256)",
          "setTimes(uint256,uint256)",
          "setAssetToPythID(bytes32,bytes32)",
          "setMaximumPriceDelay(uint64)",
          "setMaximumPriceDelayForResolving(uint64)",
          "setMaxRiskPerAsset(bytes32,uint256)",
          "setMaxRiskPerAssetAndDirection(bytes32,uint256)",
          "setSafeBoxParams(address,uint256)",
          "setLPFee(uint256)",
          "setStakingThales(address)",
          "setReferrals(address)",
          "setPyth(address)",
          "setSupportedAsset(bytes32,bool)",
          "setMultiCollateralOnOffRamp(address,bool)",
          "addToWhitelist(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(AddressSet)25370_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:35"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)25370_storage",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:36"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IERC20Upgradeable)505",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:40"
            },
            {
              "label": "speedMarketMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:42"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:44"
            },
            {
              "label": "lpFee",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:45"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:47"
            },
            {
              "label": "supportedAsset",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:49"
            },
            {
              "label": "minimalTimeToMaturity",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:51"
            },
            {
              "label": "maximalTimeToMaturity",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:52"
            },
            {
              "label": "minBuyinAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:54"
            },
            {
              "label": "maxBuyinAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:55"
            },
            {
              "label": "maxRiskPerAsset",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:57"
            },
            {
              "label": "currentRiskPerAsset",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:58"
            },
            {
              "label": "assetToPythId",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:60"
            },
            {
              "label": "pyth",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(IPyth)3798",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:63"
            },
            {
              "label": "maximumPriceDelay",
              "offset": 20,
              "slot": "23",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:65"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(IStakingThales)25103",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
            },
            {
              "label": "_activeMarketsPerUser",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_struct(AddressSet)25370_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
            },
            {
              "label": "_maturedMarketsPerUser",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_struct(AddressSet)25370_storage)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
            },
            {
              "label": "multiCollateralOnOffRamp",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IMultiCollateralOnOffRamp)24635",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
            },
            {
              "label": "multicollateralEnabled",
              "offset": 20,
              "slot": "28",
              "type": "t_bool",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
            },
            {
              "label": "maxRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)22041,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
            },
            {
              "label": "currentRiskPerAssetAndDirection",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)22041,t_uint256))",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:92"
            },
            {
              "label": "maximumPriceDelayForResolving",
              "offset": 0,
              "slot": "31",
              "type": "t_uint64",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
            },
            {
              "label": "marketHasCreatedAtAttribute",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "33",
              "type": "t_address",
              "contract": "SpeedMarketsAMM",
              "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)505": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IMultiCollateralOnOffRamp)24635": {
              "label": "contract IMultiCollateralOnOffRamp",
              "numberOfBytes": "20"
            },
            "t_contract(IPyth)3798": {
              "label": "contract IPyth",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)25103": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_enum(Direction)22041": {
              "label": "enum SpeedMarket.Direction",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)25370_storage)": {
              "label": "mapping(address => struct AddressSetLib.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_enum(Direction)22041,t_uint256))": {
              "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Direction)22041,t_uint256)": {
              "label": "mapping(enum SpeedMarket.Direction => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)25370_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ICurveSUSD.sol:ICurveSUSD": {
        "src": "contracts/interfaces/ICurveSUSD.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "get_dy_underlying(int128,int128,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IMultiCollateralOnOffRamp.sol:IMultiCollateralOnOffRamp": {
        "src": "contracts/interfaces/IMultiCollateralOnOffRamp.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onramp(address,uint256)",
          "onrampWithEth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IOracleInstance.sol:IOracleInstance": {
        "src": "contracts/interfaces/IOracleInstance.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOutcome()",
          "resolvable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPosition.sol:IPosition": {
        "src": "contracts/interfaces/IPosition.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBalanceOf(address)",
          "getTotalSupply()",
          "exerciseWithAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket": {
        "src": "contracts/interfaces/IPositionalMarket.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptions()",
          "times()",
          "getOracleDetails()",
          "fees()",
          "deposited()",
          "creator()",
          "resolved()",
          "phase()",
          "oraclePrice()",
          "oraclePriceAndTimestamp()",
          "canResolve()",
          "result()",
          "balancesOf(address)",
          "totalSupplies()",
          "getMaximumBurnable(address)",
          "mint(uint256)",
          "exerciseOptions()",
          "burnOptions(uint256)",
          "burnOptionsMaximum()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarketManager.sol:IPositionalMarketManager": {
        "src": "contracts/interfaces/IPositionalMarketManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "durations()",
          "capitalRequirement()",
          "marketCreationEnabled()",
          "onlyAMMMintingAndBurning()",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "totalDeposited()",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "isActiveMarket(address)",
          "isKnownMarket(address)",
          "getThalesAMM()",
          "createMarket(bytes32,uint256,uint256,uint256)",
          "resolveMarket(address)",
          "expireMarkets(address[])",
          "transferSusdTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarketManagerTruncated.sol:IPositionalMarketManagerTruncated": {
        "src": "contracts/interfaces/IPositionalMarketManagerTruncated.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPriceFeed.sol:IPriceFeed": {
        "src": "contracts/interfaces/IPriceFeed.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "rateForCurrency(bytes32)",
          "rateAndUpdatedTime(bytes32)",
          "getRates()",
          "getCurrencies()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IReferrals.sol:IReferrals": {
        "src": "contracts/interfaces/IReferrals.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "referrals(address)",
          "getReferrerFee(address)",
          "sportReferrals(address)",
          "setReferrer(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThales.sol:IStakingThales": {
        "src": "contracts/interfaces/IStakingThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateVolume(address,uint256)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "currentPeriodRewards()",
          "currentPeriodFees()",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "getAMMVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMM.sol:IThalesAMM": {
        "src": "contracts/interfaces/IThalesAMM.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "manager()",
          "availableToBuyFromAMM(address,uint8)",
          "impliedVolatilityPerAsset(bytes32)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "isMarketInAMMTrading(address)",
          "price(address,uint8)",
          "buyPriceImpact(address,uint8,uint256)",
          "sellPriceImpact(address,uint8,uint256)",
          "priceFeed()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMMUtils.sol:IThalesAMMUtils": {
        "src": "contracts/interfaces/IThalesAMMUtils.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateOdds(uint256,uint256,uint256,uint256)",
          "calculateDiscount((uint256,uint256,uint256,uint256,uint256))",
          "buyPriceImpactImbalancedSkew((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "sellPriceImpactImbalancedSkew(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "balanceOfPositionOnMarket(address,uint8,address)",
          "balanceOfPositionsOnMarket(address,uint8,address)",
          "getBalanceOfPositionsOnMarket(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/AddressSetLib.sol:AddressSetLib": {
        "src": "contracts/utils/libraries/AddressSetLib.sol:5",
        "version": {
          "withMetadata": "c1a5a4aede77c5032c2b889da1601e28025c3651f24ac291cb3bfae35c408378",
          "withoutMetadata": "c1a5a4aede77c5032c2b889da1601e28025c3651f24ac291cb3bfae35c408378",
          "linkedWithoutMetadata": "c1a5a4aede77c5032c2b889da1601e28025c3651f24ac291cb3bfae35c408378"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/DateTime.sol:DateTime": {
        "src": "contracts/utils/libraries/DateTime.sol:29",
        "version": {
          "withMetadata": "157de19a3436f518b9bb286b2cdb1e7dab354580b342fc3b5b56d6f25136021f",
          "withoutMetadata": "157de19a3436f518b9bb286b2cdb1e7dab354580b342fc3b5b56d6f25136021f",
          "linkedWithoutMetadata": "157de19a3436f518b9bb286b2cdb1e7dab354580b342fc3b5b56d6f25136021f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/UniswapMath.sol:UniswapMath": {
        "src": "contracts/utils/libraries/UniswapMath.sol:11",
        "version": {
          "withMetadata": "fe917b76272d05b69d8d1b41a8905375dc8999b72a2d17b081aea0b2264d5a8b",
          "withoutMetadata": "fe917b76272d05b69d8d1b41a8905375dc8999b72a2d17b081aea0b2264d5a8b",
          "linkedWithoutMetadata": "fe917b76272d05b69d8d1b41a8905375dc8999b72a2d17b081aea0b2264d5a8b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "15f5a8ce3b4403aae3e4758da57a2273666b7c52ae16664ebb5b2a7cfe89b5fd",
          "withoutMetadata": "15f5a8ce3b4403aae3e4758da57a2273666b7c52ae16664ebb5b2a7cfe89b5fd",
          "linkedWithoutMetadata": "15f5a8ce3b4403aae3e4758da57a2273666b7c52ae16664ebb5b2a7cfe89b5fd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "b7f6e4cdd501adf91211a3dc70f5f2fa0c09433f2939a2acdf87b181748fdac3",
          "withoutMetadata": "b7f6e4cdd501adf91211a3dc70f5f2fa0c09433f2939a2acdf87b181748fdac3",
          "linkedWithoutMetadata": "b7f6e4cdd501adf91211a3dc70f5f2fa0c09433f2939a2acdf87b181748fdac3"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "550bced8a36700f7951cf1f432c57975c3c251e2cfd1a70dbcd727bb3c38ab79",
          "withoutMetadata": "550bced8a36700f7951cf1f432c57975c3c251e2cfd1a70dbcd727bb3c38ab79",
          "linkedWithoutMetadata": "550bced8a36700f7951cf1f432c57975c3c251e2cfd1a70dbcd727bb3c38ab79"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3",
          "withoutMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3",
          "linkedWithoutMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0",
          "withoutMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0",
          "linkedWithoutMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b",
          "withoutMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b",
          "linkedWithoutMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/EscrowThales.sol:EscrowThales": {
        "src": "contracts/EscrowAndStaking/EscrowThales.sol:18",
        "version": {
          "withMetadata": "da40f21593ae479487aef4cf41823825c2b8fa052960f99fd8e9bd21953094b7",
          "withoutMetadata": "da40f21593ae479487aef4cf41823825c2b8fa052960f99fd8e9bd21953094b7",
          "linkedWithoutMetadata": "da40f21593ae479487aef4cf41823825c2b8fa052960f99fd8e9bd21953094b7"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/interfaces/IEscrowThales.sol:IEscrowThales"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "getStakerPeriod(address,uint256)",
          "getStakerAmounts(address,uint256)",
          "getStakedEscrowedBalanceForRewards(address)",
          "claimable(address)",
          "addToEscrow(address,uint256)",
          "vest(uint256)",
          "addTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "subtractTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "updateCurrentPeriod()",
          "setStakingThalesContract(address)",
          "enableTestMode()",
          "setAirdropContract(address)",
          "setThalesStakingRewardsPool(address)",
          "fixEscrowEntry(address)",
          "mergeAccount(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "vestingToken",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20)324",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:22"
            },
            {
              "label": "iStakingThales",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IStakingThales)7557",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:23"
            },
            {
              "label": "airdropContract",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:24"
            },
            {
              "label": "totalEscrowedRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:27"
            },
            {
              "label": "totalEscrowBalanceNotIncludedInStaking",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:28"
            },
            {
              "label": "currentVestingPeriod",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:29"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:31"
            },
            {
              "label": "vestingEntries",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_struct(VestingEntry)1431_storage)10_storage)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:38"
            },
            {
              "label": "totalAccountEscrowedAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:39"
            },
            {
              "label": "lastPeriodAddedReward",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:41"
            },
            {
              "label": "testMode",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:43"
            },
            {
              "label": "ThalesStakingRewardsPool",
              "offset": 1,
              "slot": "15",
              "type": "t_contract(IThalesStakingRewardsPool)7817",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VestingEntry)1431_storage)10_storage": {
              "label": "struct EscrowThales.VestingEntry[10]",
              "numberOfBytes": "640"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)324": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)7557": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesStakingRewardsPool)7817": {
              "label": "contract IThalesStakingRewardsPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(VestingEntry)1431_storage)10_storage)": {
              "label": "mapping(address => struct EscrowThales.VestingEntry[10])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(VestingEntry)1431_storage": {
              "label": "struct EscrowThales.VestingEntry",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "vesting_period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/StakingData.sol:StakingData": {
        "src": "contracts/EscrowAndStaking/StakingData.sol:12",
        "version": {
          "withMetadata": "95229b12d9c0146ae499ac0ab7295c20b03d404a15e5d4c910f963f86b3465c4",
          "withoutMetadata": "95229b12d9c0146ae499ac0ab7295c20b03d404a15e5d4c910f963f86b3465c4",
          "linkedWithoutMetadata": "95229b12d9c0146ae499ac0ab7295c20b03d404a15e5d4c910f963f86b3465c4"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getStakingData()",
          "getUserStakingData(address)",
          "getUserVestingData(address)",
          "setStakingThales(address)",
          "setEscrowThales(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "stakingThales",
              "offset": 1,
              "slot": "3",
              "type": "t_address",
              "contract": "StakingData",
              "src": "contracts/EscrowAndStaking/StakingData.sol:62"
            },
            {
              "label": "escrowThales",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "StakingData",
              "src": "contracts/EscrowAndStaking/StakingData.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/StakingThales.sol:StakingThales": {
        "src": "contracts/EscrowAndStaking/StakingThales.sol:30",
        "version": {
          "withMetadata": "5bf1cdef802b966fe5dc383723c70597e39bb2f2b6e9ceddd15627df2d950da3",
          "withoutMetadata": "5bf1cdef802b966fe5dc383723c70597e39bb2f2b6e9ceddd15627df2d950da3",
          "linkedWithoutMetadata": "5bf1cdef802b966fe5dc383723c70597e39bb2f2b6e9ceddd15627df2d950da3"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/interfaces/IStakingThales.sol:IStakingThales"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,uint256,uint256,address)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "setStakingParameters(bool,bool,uint256,uint256,bool)",
          "setStakingRewardsParameters(uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256)",
          "setAddresses(address,address,address,address,address,address,address,address,address,address,address)",
          "setEscrow(address)",
          "setSupportedSportVault(address,bool)",
          "setSupportedAMMVault(address,bool)",
          "getSNXRewardsAddress()",
          "getSNXStaked(address)",
          "getBaseReward(address)",
          "getAMMVolume(address)",
          "getThalesAMMVolume(address)",
          "getThalesRangedAMMVolume(address)",
          "getExoticMarketsVolume(address)",
          "getSportsAMMVolume(address)",
          "getSNXBonusPercentage(address)",
          "getSNXBonus(address)",
          "getAMMBonusPercentage(address)",
          "getAMMBonus(address)",
          "getTotalBonusPercentage(address)",
          "getTotalBonus(address)",
          "canClosePeriod()",
          "getSNXTargetRatio()",
          "getCRatio(address)",
          "getSNXRateForCurrency()",
          "getSNXDebt(address)",
          "startStakingPeriod()",
          "closePeriod()",
          "stake(uint256)",
          "startUnstake(uint256)",
          "cancelUnstake()",
          "unstake()",
          "claimReward()",
          "claimRewardOnBehalf(address)",
          "updateVolume(address,uint256)",
          "mergeAccount(address)",
          "setCanClaimOnBehalf(address,bool)",
          "delegateVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "iEscrowThales",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IEscrowThales)6253",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)324",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
            },
            {
              "label": "feeToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)324",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
            },
            {
              "label": "SNXRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISNXRewards)6906",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
            },
            {
              "label": "thalesRoyale",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IThalesRoyale)7807",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IPriceFeed)6868",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
            },
            {
              "label": "periodsOfStaking",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
            },
            {
              "label": "lastPeriodTimeStamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
            },
            {
              "label": "durationPeriod",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
            },
            {
              "label": "unstakeDurationPeriod",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
            },
            {
              "label": "startTimeStamp",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
            },
            {
              "label": "currentPeriodRewards",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
            },
            {
              "label": "currentPeriodFees",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
            },
            {
              "label": "distributeFeesEnabled",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
            },
            {
              "label": "fixedPeriodReward",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
            },
            {
              "label": "periodExtraReward",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
            },
            {
              "label": "totalSNXRewardsInPeriod",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
            },
            {
              "label": "totalSNXFeesInPeriod",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
            },
            {
              "label": "claimEnabled",
              "offset": 0,
              "slot": "23",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
            },
            {
              "label": "stakerLifetimeRewardsClaimed",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
            },
            {
              "label": "stakerFeesClaimed",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
            },
            {
              "label": "_totalStakedAmount",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
            },
            {
              "label": "_totalEscrowedAmount",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
            },
            {
              "label": "_totalPendingStakeAmount",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
            },
            {
              "label": "_totalUnclaimedRewards",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
            },
            {
              "label": "_totalRewardsClaimed",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
            },
            {
              "label": "_totalRewardFeesClaimed",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
            },
            {
              "label": "lastUnstakeTime",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
            },
            {
              "label": "unstaking",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
            },
            {
              "label": "unstakingAmount",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
            },
            {
              "label": "_stakedBalances",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
            },
            {
              "label": "_lastRewardsClaimedPeriod",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:73"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "37",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:74"
            },
            {
              "label": "lastAMMUpdatePeriod",
              "offset": 0,
              "slot": "38",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
            },
            {
              "label": "stakerAMMVolume",
              "offset": 0,
              "slot": "39",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)2910_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
            },
            {
              "label": "extraRewardsActive",
              "offset": 0,
              "slot": "40",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
            },
            {
              "label": "ThalesStakingRewardsPool",
              "offset": 1,
              "slot": "40",
              "type": "t_contract(IThalesStakingRewardsPool)7817",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:87"
            },
            {
              "label": "maxSNXRewardsPercentage",
              "offset": 0,
              "slot": "41",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
            },
            {
              "label": "maxAMMVolumeRewardsPercentage",
              "offset": 0,
              "slot": "42",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
            },
            {
              "label": "AMMVolumeRewardsMultiplier",
              "offset": 0,
              "slot": "43",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
            },
            {
              "label": "maxThalesRoyaleRewardsPercentage",
              "offset": 0,
              "slot": "44",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:92"
            },
            {
              "label": "SNXVolumeRewardsMultiplier",
              "offset": 0,
              "slot": "45",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
            },
            {
              "label": "_lastStakingPeriod",
              "offset": 0,
              "slot": "46",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
            },
            {
              "label": "totalStakedLastPeriodEnd",
              "offset": 0,
              "slot": "47",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
            },
            {
              "label": "totalEscrowedLastPeriodEnd",
              "offset": 0,
              "slot": "48",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
            },
            {
              "label": "exoticBonds",
              "offset": 0,
              "slot": "49",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
            },
            {
              "label": "addressResolver",
              "offset": 0,
              "slot": "50",
              "type": "t_contract(IAddressResolver)6160",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
            },
            {
              "label": "sportsAMM",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
            },
            {
              "label": "lastThalesAMMUpdatePeriod",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
            },
            {
              "label": "thalesAMMVolume",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)2910_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
            },
            {
              "label": "lastThalesRangedAMMUpdatePeriod",
              "offset": 0,
              "slot": "55",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
            },
            {
              "label": "thalesRangedAMMVolume",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)2910_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
            },
            {
              "label": "lastExoticMarketsUpdatePeriod",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
            },
            {
              "label": "exoticMarketsVolume",
              "offset": 0,
              "slot": "58",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)2910_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
            },
            {
              "label": "lastSportsAMMUpdatePeriod",
              "offset": 0,
              "slot": "59",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
            },
            {
              "label": "sportsAMMVolume",
              "offset": 0,
              "slot": "60",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)2910_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
            },
            {
              "label": "canClaimOnBehalf",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:119"
            },
            {
              "label": "mergeAccountEnabled",
              "offset": 0,
              "slot": "62",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:121"
            },
            {
              "label": "delegatedVolume",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_address)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
            },
            {
              "label": "supportedSportVault",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
            },
            {
              "label": "supportedAMMVault",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:125"
            },
            {
              "label": "sportsAMMLiquidityPool",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(ISportsAMMLiquidityPool)7480",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:127"
            },
            {
              "label": "thalesAMMLiquidityPool",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(IThalesAMMLiquidityPool)7737",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:128"
            },
            {
              "label": "stakingThalesBonusRewardsManager",
              "offset": 0,
              "slot": "68",
              "type": "t_contract(IStakingThalesBonusRewardsManager)7585",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:130"
            },
            {
              "label": "parlayAMMLiquidityPool",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(IParlayAMMLiquidityPool)6291",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(AMMVolumeEntry)2910_storage)4_storage": {
              "label": "struct StakingThales.AMMVolumeEntry[4]",
              "numberOfBytes": "256"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IAddressResolver)6160": {
              "label": "contract IAddressResolver",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)324": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IEscrowThales)6253": {
              "label": "contract IEscrowThales",
              "numberOfBytes": "20"
            },
            "t_contract(IParlayAMMLiquidityPool)6291": {
              "label": "contract IParlayAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)6868": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(ISNXRewards)6906": {
              "label": "contract ISNXRewards",
              "numberOfBytes": "20"
            },
            "t_contract(ISportsAMMLiquidityPool)7480": {
              "label": "contract ISportsAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThalesBonusRewardsManager)7585": {
              "label": "contract IStakingThalesBonusRewardsManager",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMMLiquidityPool)7737": {
              "label": "contract IThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesRoyale)7807": {
              "label": "contract IThalesRoyale",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesStakingRewardsPool)7817": {
              "label": "contract IThalesStakingRewardsPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)2910_storage)4_storage)": {
              "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AMMVolumeEntry)2910_storage": {
              "label": "struct StakingThales.AMMVolumeEntry",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts/interfaces/IAddressResolver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IEscrowThales.sol:IEscrowThales": {
        "src": "contracts/interfaces/IEscrowThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStakerPeriod(address,uint256)",
          "getStakerAmounts(address,uint256)",
          "totalAccountEscrowedAmount(address)",
          "getStakedEscrowedBalanceForRewards(address)",
          "totalEscrowedRewards()",
          "totalEscrowBalanceNotIncludedInStaking()",
          "currentVestingPeriod()",
          "updateCurrentPeriod()",
          "claimable(address)",
          "addToEscrow(address,uint256)",
          "vest(uint256)",
          "addTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "subtractTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "mergeAccount(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayAMMLiquidityPool.sol:IParlayAMMLiquidityPool": {
        "src": "contracts/interfaces/IParlayAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "commitTrade(address,uint256)",
          "getMarketRound(address)",
          "getMarketPool(address)",
          "transferToPool(address,uint256)",
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayMarketData.sol:IParlayMarketData": {
        "src": "contracts/interfaces/IParlayMarketData.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasParlayGamePosition(address,address,uint256)",
          "addParlayForGamePosition(address,uint256,address,address)",
          "removeParlayForGamePosition(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayMarketsAMM.sol:IParlayMarketsAMM": {
        "src": "contracts/interfaces/IParlayMarketsAMM.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "parlaySize()",
          "sUSD()",
          "sportsAmm()",
          "parlayAmmFee()",
          "maxAllowedRiskPerCombination()",
          "maxSupportedOdds()",
          "getSgpFeePerCombination(uint256,uint256,uint256,uint256)",
          "riskPerCombination(address,uint256,address,uint256,address,uint256,address,uint256)",
          "riskPerGameCombination(address,address,address,address,address,address,address,address)",
          "riskPerPackedGamesCombination(bytes32)",
          "isActiveParlay(address)",
          "exerciseParlay(address)",
          "triggerResolvedEvent(address,bool)",
          "resolveParlay()",
          "buyFromParlay(address[],uint256[],uint256,uint256,uint256,address)",
          "buyQuoteFromParlay(address[],uint256[],uint256)",
          "canCreateParlayMarket(address[],uint256[],uint256)",
          "numActiveParlayMarkets()",
          "activeParlayMarkets(uint256,uint256)",
          "minUSDAmount()",
          "maxSupportedAmount()",
          "safeBoxImpact()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPassportPosition.sol:IPassportPosition": {
        "src": "contracts/interfaces/IPassportPosition.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPosition.sol:IPosition": {
        "src": "contracts/interfaces/IPosition.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBalanceOf(address)",
          "getTotalSupply()",
          "exerciseWithAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket": {
        "src": "contracts/interfaces/IPositionalMarket.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptions()",
          "times()",
          "getOracleDetails()",
          "fees()",
          "deposited()",
          "creator()",
          "resolved()",
          "phase()",
          "oraclePrice()",
          "oraclePriceAndTimestamp()",
          "canResolve()",
          "result()",
          "balancesOf(address)",
          "totalSupplies()",
          "getMaximumBurnable(address)",
          "mint(uint256)",
          "exerciseOptions()",
          "burnOptions(uint256)",
          "burnOptionsMaximum()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarketManager.sol:IPositionalMarketManager": {
        "src": "contracts/interfaces/IPositionalMarketManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "durations()",
          "capitalRequirement()",
          "marketCreationEnabled()",
          "onlyAMMMintingAndBurning()",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "totalDeposited()",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "isActiveMarket(address)",
          "isKnownMarket(address)",
          "getThalesAMM()",
          "createMarket(bytes32,uint256,uint256,uint256)",
          "resolveMarket(address)",
          "expireMarkets(address[])",
          "transferSusdTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPriceFeed.sol:IPriceFeed": {
        "src": "contracts/interfaces/IPriceFeed.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "rateForCurrency(bytes32)",
          "rateAndUpdatedTime(bytes32)",
          "getRates()",
          "getCurrencies()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISNXRewards.sol:ISNXRewards": {
        "src": "contracts/interfaces/ISNXRewards.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collateralisationRatioAndAnyRatesInvalid(address)",
          "debtBalanceOf(address,bytes32)",
          "issuanceRatio()",
          "setCRatio(address,uint256)",
          "setIssuanceRatio(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportPositionalMarket.sol:ISportPositionalMarket": {
        "src": "contracts/interfaces/ISportPositionalMarket.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptions()",
          "times()",
          "initialMint()",
          "getGameDetails()",
          "getGameId()",
          "deposited()",
          "optionsCount()",
          "creator()",
          "resolved()",
          "cancelled()",
          "paused()",
          "phase()",
          "canResolve()",
          "result()",
          "isChild()",
          "tags(uint256)",
          "getTags()",
          "getParentMarketPositions()",
          "getStampedOdds()",
          "balancesOf(address)",
          "totalSupplies()",
          "isDoubleChance()",
          "parentMarket()",
          "setPaused(bool)",
          "updateDates(uint256,uint256)",
          "mint(uint256)",
          "exerciseOptions()",
          "restoreInvalidOdds(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportPositionalMarketManager.sol:ISportPositionalMarketManager": {
        "src": "contracts/interfaces/ISportPositionalMarketManager.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketCreationEnabled()",
          "totalDeposited()",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "isActiveMarket(address)",
          "isDoubleChanceMarket(address)",
          "isDoubleChanceSupported()",
          "isKnownMarket(address)",
          "getActiveMarketAddress(uint256)",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "isMarketPaused(address)",
          "expiryDuration()",
          "isWhitelistedAddress(address)",
          "getOddsObtainer()",
          "createMarket(bytes32,string,uint256,uint256,uint256,uint256[],bool,address)",
          "setMarketPaused(address,bool)",
          "updateDatesForMarket(address,uint256)",
          "resolveMarket(address,uint256)",
          "expireMarkets(address[])",
          "transferSusdTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportsAMM.sol:ISportsAMM": {
        "src": "contracts/interfaces/ISportsAMM.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "theRundownConsumer()",
          "getMarketDefaultOdds(address,bool)",
          "isMarketInAMMTrading(address)",
          "isMarketForSportOnePositional(uint256)",
          "availableToBuyFromAMM(address,uint8)",
          "parlayAMM()",
          "minSupportedOdds()",
          "maxSupportedOdds()",
          "min_spread()",
          "max_spread()",
          "minimalTimeLeftToMaturity()",
          "getSpentOnGame(address)",
          "safeBoxImpact()",
          "manager()",
          "getLiquidityPool()",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteForParlayAMM(address,uint8,uint256)",
          "updateParlayVolume(address,uint256)",
          "buyPriceImpact(address,uint8,uint256)",
          "obtainOdds(address,uint8)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportsAMMLiquidityPool.sol:ISportsAMMLiquidityPool": {
        "src": "contracts/interfaces/ISportsAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThales.sol:IStakingThales": {
        "src": "contracts/interfaces/IStakingThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateVolume(address,uint256)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "currentPeriodRewards()",
          "currentPeriodFees()",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "getAMMVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThalesBonusRewardsManager.sol:IStakingThalesBonusRewardsManager": {
        "src": "contracts/interfaces/IStakingThalesBonusRewardsManager.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "storePoints(address,address,uint256,uint256)",
          "getUserRoundBonusShare(address,uint256)",
          "useNewBonusModel()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMM.sol:IThalesAMM": {
        "src": "contracts/interfaces/IThalesAMM.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "manager()",
          "availableToBuyFromAMM(address,uint8)",
          "impliedVolatilityPerAsset(bytes32)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "isMarketInAMMTrading(address)",
          "price(address,uint8)",
          "buyPriceImpact(address,uint8,uint256)",
          "sellPriceImpact(address,uint8,uint256)",
          "priceFeed()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMMLiquidityPool.sol:IThalesAMMLiquidityPool": {
        "src": "contracts/interfaces/IThalesAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesRoyale.sol:IThalesRoyale": {
        "src": "contracts/interfaces/IThalesRoyale.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBuyInAmount()",
          "season()",
          "tokenSeason(uint256)",
          "seasonFinished(uint256)",
          "roundInASeason(uint256)",
          "roundResultPerSeason(uint256,uint256)",
          "isTokenAliveInASpecificSeason(uint256,uint256)",
          "hasParticipatedInCurrentOrLastRoyale(address)",
          "getTokenPositions(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesStakingRewardsPool.sol:IThalesStakingRewardsPool": {
        "src": "contracts/interfaces/IThalesStakingRewardsPool.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addToEscrow(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "a7eb5904779faa88e1712211a120a7e6425360da446c337f0843a1ca35ff7951",
          "withoutMetadata": "a7eb5904779faa88e1712211a120a7e6425360da446c337f0843a1ca35ff7951",
          "linkedWithoutMetadata": "a7eb5904779faa88e1712211a120a7e6425360da446c337f0843a1ca35ff7951"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "80064593b8ab7379587d8961d26c28846b67416711dbe65039a16cffd49aa567",
          "withoutMetadata": "80064593b8ab7379587d8961d26c28846b67416711dbe65039a16cffd49aa567",
          "linkedWithoutMetadata": "80064593b8ab7379587d8961d26c28846b67416711dbe65039a16cffd49aa567"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "624bb7e8bee6d52613373d18cedd85ffded3486375b457d988520e646ea52d50",
          "withoutMetadata": "624bb7e8bee6d52613373d18cedd85ffded3486375b457d988520e646ea52d50",
          "linkedWithoutMetadata": "624bb7e8bee6d52613373d18cedd85ffded3486375b457d988520e646ea52d50"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorInterface.sol:AggregatorInterface": {
        "src": "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorInterface.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "latestTimestamp()",
          "latestRound()",
          "getAnswer(uint256)",
          "getTimestamp(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorV2V3Interface.sol:AggregatorV2V3Interface": {
        "src": "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorV2V3Interface.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "latestTimestamp()",
          "latestRound()",
          "getAnswer(uint256)",
          "getTimestamp(uint256)",
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts-0.0.10/src/v0.5/interfaces/AggregatorV3Interface.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/Chainlink.sol:Chainlink": {
        "src": "@chainlink/contracts/src/v0.8/Chainlink.sol:11",
        "version": {
          "withMetadata": "8176fbe6bcd22e7a288f2f2e5dbbe8e60fc900f7d66164a33883afc15221c0c1",
          "withoutMetadata": "8176fbe6bcd22e7a288f2f2e5dbbe8e60fc900f7d66164a33883afc15221c0c1",
          "linkedWithoutMetadata": "8176fbe6bcd22e7a288f2f2e5dbbe8e60fc900f7d66164a33883afc15221c0c1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient": {
        "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "s_requestCount",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)1162",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)1257",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)1337",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)1162": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)1257": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)1337": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol:ENSInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol:OperatorInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface",
          "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes)",
          "fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)",
          "ownerTransferAndCall(address,uint256,bytes)",
          "distributeFunds(address payable[],uint256[])",
          "getAuthorizedSenders()",
          "setAuthorizedSenders(address[])",
          "getForwarder()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:OracleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)",
          "isAuthorizedSender(address)",
          "withdraw(address,uint256)",
          "withdrawable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol:PointerInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:BufferChainlink": {
        "src": "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:12",
        "version": {
          "withMetadata": "93f9686a176e43e80fff1b9672e76f314436ee93ca5219f0e688446413230c41",
          "withoutMetadata": "93f9686a176e43e80fff1b9672e76f314436ee93ca5219f0e688446413230c41",
          "linkedWithoutMetadata": "93f9686a176e43e80fff1b9672e76f314436ee93ca5219f0e688446413230c41"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:CBORChainlink": {
        "src": "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:6",
        "version": {
          "withMetadata": "07190d880231e803372c30407168028688fc55a41937ccec461bf4285de6f324",
          "withoutMetadata": "07190d880231e803372c30407168028688fc55a41937ccec461bf4285de6f324",
          "linkedWithoutMetadata": "07190d880231e803372c30407168028688fc55a41937ccec461bf4285de6f324"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol:ENSResolver": {
        "src": "@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "1b9f431ee71e510a5d0fd643dd34f829a3f82762291742de0242416a7567316e",
          "withoutMetadata": "1b9f431ee71e510a5d0fd643dd34f829a3f82762291742de0242416a7567316e",
          "linkedWithoutMetadata": "1b9f431ee71e510a5d0fd643dd34f829a3f82762291742de0242416a7567316e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "7cf83710c4394c9ca3ebe3bb8165e9511bbb4ff88a0c1cd534f4928ca595bb15",
          "withoutMetadata": "7cf83710c4394c9ca3ebe3bb8165e9511bbb4ff88a0c1cd534f4928ca595bb15",
          "linkedWithoutMetadata": "7cf83710c4394c9ca3ebe3bb8165e9511bbb4ff88a0c1cd534f4928ca595bb15"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "bb979f532bd060eb1206765544d7dbacf284712ad17df0ff995c67d74ef66b2c",
          "withoutMetadata": "bb979f532bd060eb1206765544d7dbacf284712ad17df0ff995c67d74ef66b2c",
          "linkedWithoutMetadata": "bb979f532bd060eb1206765544d7dbacf284712ad17df0ff995c67d74ef66b2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "c7d57788f17fd88611f9e5ddd363817569f1f545861e4005c95afce32e4c7d91",
          "withoutMetadata": "c7d57788f17fd88611f9e5ddd363817569f1f545861e4005c95afce32e4c7d91",
          "linkedWithoutMetadata": "c7d57788f17fd88611f9e5ddd363817569f1f545861e4005c95afce32e4c7d91"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Clones.sol:Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "34897e041f0727547809790b7aea5d009c2cde1ace2945ca5ef827ee79f24592",
          "withoutMetadata": "34897e041f0727547809790b7aea5d009c2cde1ace2945ca5ef827ee79f24592",
          "linkedWithoutMetadata": "34897e041f0727547809790b7aea5d009c2cde1ace2945ca5ef827ee79f24592"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "b175ad2dfee75990f77334e9dfe0e6cea9e098a77ffdbcb5f9af2a95b7546674",
          "withoutMetadata": "b175ad2dfee75990f77334e9dfe0e6cea9e098a77ffdbcb5f9af2a95b7546674",
          "linkedWithoutMetadata": "b175ad2dfee75990f77334e9dfe0e6cea9e098a77ffdbcb5f9af2a95b7546674"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "9eb88663a944efd0f49bd9087815e45af0b07e6e3b0f277671d77dfcbd1526bb",
          "withoutMetadata": "9eb88663a944efd0f49bd9087815e45af0b07e6e3b0f277671d77dfcbd1526bb",
          "linkedWithoutMetadata": "9eb88663a944efd0f49bd9087815e45af0b07e6e3b0f277671d77dfcbd1526bb"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "a5b46f0dcb1a97cc4914fd7b14d083b6ee5491ec273b6a86ea1d8e61e4e61f5e",
          "withoutMetadata": "a5b46f0dcb1a97cc4914fd7b14d083b6ee5491ec273b6a86ea1d8e61e4e61f5e",
          "linkedWithoutMetadata": "a5b46f0dcb1a97cc4914fd7b14d083b6ee5491ec273b6a86ea1d8e61e4e61f5e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "33acbb613b9f0d865c11d52e0d27c9f521760f90450f04ef9f17c7d4cd51d9ae",
          "withoutMetadata": "33acbb613b9f0d865c11d52e0d27c9f521760f90450f04ef9f17c7d4cd51d9ae",
          "linkedWithoutMetadata": "33acbb613b9f0d865c11d52e0d27c9f521760f90450f04ef9f17c7d4cd51d9ae"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "6ecd5ea2de917ab2c5a1a4e5765f5e116eac8114fd5e5c8ea4c9dd104f13179b",
          "withoutMetadata": "6ecd5ea2de917ab2c5a1a4e5765f5e116eac8114fd5e5c8ea4c9dd104f13179b",
          "linkedWithoutMetadata": "6ecd5ea2de917ab2c5a1a4e5765f5e116eac8114fd5e5c8ea4c9dd104f13179b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "f066132741dabbb3541256bb49bb1736dcd1f5b8165320ac9c391cad96325437",
          "withoutMetadata": "f066132741dabbb3541256bb49bb1736dcd1f5b8165320ac9c391cad96325437",
          "linkedWithoutMetadata": "f066132741dabbb3541256bb49bb1736dcd1f5b8165320ac9c391cad96325437"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3",
          "withoutMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3",
          "linkedWithoutMetadata": "d4a62f6b92a6ce15b909740a5868001a6a93b685e8715f7f0bafae28cfbf71a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0",
          "withoutMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0",
          "linkedWithoutMetadata": "e4c0237dc441ed0a77b91dc84edcabe6019b05584edee8b2a3f3c9d559e347a0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "627c2a90496eb7dfcf4b03ff8d86101b37eba1f6235bfc3c83d848212b4eef9e",
          "withoutMetadata": "627c2a90496eb7dfcf4b03ff8d86101b37eba1f6235bfc3c83d848212b4eef9e",
          "linkedWithoutMetadata": "627c2a90496eb7dfcf4b03ff8d86101b37eba1f6235bfc3c83d848212b4eef9e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "8c776444420520410ed30ae995b1a22dd00cb6fe0768df0f18ec3b3986345e52",
          "withoutMetadata": "8c776444420520410ed30ae995b1a22dd00cb6fe0768df0f18ec3b3986345e52",
          "linkedWithoutMetadata": "8c776444420520410ed30ae995b1a22dd00cb6fe0768df0f18ec3b3986345e52"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "cf2775c9dc67d3c06c605428db41755e80593f77dba7a7ed929510a6d9001021",
          "withoutMetadata": "cf2775c9dc67d3c06c605428db41755e80593f77dba7a7ed929510a6d9001021",
          "linkedWithoutMetadata": "cf2775c9dc67d3c06c605428db41755e80593f77dba7a7ed929510a6d9001021"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b",
          "withoutMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b",
          "linkedWithoutMetadata": "1e41d698481e82a87d9c9bc803f71495d09d36550e4bde8764139ffdcf6ccd3b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "67b048bdb2fcf0492bbc3bf98d1624d4631214af350db69d498dd6b92ec7c478",
          "withoutMetadata": "67b048bdb2fcf0492bbc3bf98d1624d4631214af350db69d498dd6b92ec7c478",
          "linkedWithoutMetadata": "67b048bdb2fcf0492bbc3bf98d1624d4631214af350db69d498dd6b92ec7c478"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@prb/math/contracts/PRBMath.sol:PRBMath": {
        "src": "@prb/math/contracts/PRBMath.sol:97",
        "version": {
          "withMetadata": "fad96dbcabcf68559fc69048485abe705eb1d766a3350a32e2c6ae0c012fdd80",
          "withoutMetadata": "fad96dbcabcf68559fc69048485abe705eb1d766a3350a32e2c6ae0c012fdd80",
          "linkedWithoutMetadata": "fad96dbcabcf68559fc69048485abe705eb1d766a3350a32e2c6ae0c012fdd80"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@prb/math/contracts/PRBMathUD60x18.sol:PRBMathUD60x18": {
        "src": "@prb/math/contracts/PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "480e73a866a92cb897db28de9f1d7fd8d89feff7e73d22a87c7c4dcdc9f36870",
          "withoutMetadata": "480e73a866a92cb897db28de9f1d7fd8d89feff7e73d22a87c7c4dcdc9f36870",
          "linkedWithoutMetadata": "480e73a866a92cb897db28de9f1d7fd8d89feff7e73d22a87c7c4dcdc9f36870"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/libraries/LiquidityMath.sol:LiquidityMath": {
        "src": "@uniswap/v3-core/contracts/libraries/LiquidityMath.sol:5",
        "version": {
          "withMetadata": "e92a63ebc620270eb045e4ec2cb9c37887bc157278e012116a87303c906f0386",
          "withoutMetadata": "e92a63ebc620270eb045e4ec2cb9c37887bc157278e012116a87303c906f0386",
          "linkedWithoutMetadata": "e92a63ebc620270eb045e4ec2cb9c37887bc157278e012116a87303c906f0386"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath": {
        "src": "@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol:6",
        "version": {
          "withMetadata": "ede1d79b93bc54aca5293fc8c398eaf782653315762a2917a3b6711f321e01b4",
          "withoutMetadata": "ede1d79b93bc54aca5293fc8c398eaf782653315762a2917a3b6711f321e01b4",
          "linkedWithoutMetadata": "ede1d79b93bc54aca5293fc8c398eaf782653315762a2917a3b6711f321e01b4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-core/contracts/libraries/SafeCast.sol:SafeCast": {
        "src": "@uniswap/v3-core/contracts/libraries/SafeCast.sol:6",
        "version": {
          "withMetadata": "0e1f81d70cf53657cb339eb94c0fe2345adeae7a1c19ba8e7bcbe1c9fa63009a",
          "withoutMetadata": "0e1f81d70cf53657cb339eb94c0fe2345adeae7a1c19ba8e7bcbe1c9fa63009a",
          "linkedWithoutMetadata": "0e1f81d70cf53657cb339eb94c0fe2345adeae7a1c19ba8e7bcbe1c9fa63009a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "base64-sol/base64.sol:Base64": {
        "src": "base64-sol/base64.sol:8",
        "version": {
          "withMetadata": "fd82ca19059bf17d826393b78762b6653132049e81eb1bc26fc542f5952903d7",
          "withoutMetadata": "fd82ca19059bf17d826393b78762b6653132049e81eb1bc26fc542f5952903d7",
          "linkedWithoutMetadata": "fd82ca19059bf17d826393b78762b6653132049e81eb1bc26fc542f5952903d7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:ThalesAMMDefaultLiquidityProvider": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:11",
        "version": {
          "withMetadata": "0740a06737e8bba56352a0098e4e37747d1b793d77e394491d0e512138e66448",
          "withoutMetadata": "0740a06737e8bba56352a0098e4e37747d1b793d77e394491d0e512138e66448",
          "linkedWithoutMetadata": "0740a06737e8bba56352a0098e4e37747d1b793d77e394491d0e512138e66448"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "setThalesAMMLiquidityPool(address)",
          "retrieveSUSDAmount(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "_initialized",
              "offset": 22,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 23,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "sUSD",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMMDefaultLiquidityProvider",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:14"
            },
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "ThalesAMMDefaultLiquidityProvider",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:ThalesAMMLiquidityPool": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:19",
        "version": {
          "withMetadata": "4567999fe8d9389ea4d3c0b4f43e33f9b8328f0fcaa04e1656f03393a961a6a6",
          "withoutMetadata": "4567999fe8d9389ea4d3c0b4f43e33f9b8328f0fcaa04e1656f03393a961a6a6",
          "linkedWithoutMetadata": "4567999fe8d9389ea4d3c0b4f43e33f9b8328f0fcaa04e1656f03393a961a6a6"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize((address,address,address,uint256,uint256,uint256,uint256,bool))",
          "start()",
          "deposit(uint256)",
          "commitTrade(address,uint256)",
          "getOptionsForBuy(address,uint256,uint8)",
          "getOptionsForBuyByAddress(address,uint256,address)",
          "getOrCreateMarketPool(address)",
          "withdrawalRequest()",
          "partialWithdrawalRequest(uint256)",
          "prepareRoundClosing()",
          "processRoundClosingBatch(uint256)",
          "closeRound()",
          "exerciseMarketsReadyToExercised()",
          "exerciseMarketsReadyToExercisedBatch(uint256)",
          "isUserLPing(address)",
          "getMaxAvailableDepositForUser(address)",
          "getNeededStakedThalesToWithdrawForUser(address)",
          "getMarketPool(address)",
          "canCloseCurrentRound()",
          "hasMarketsReadyToBeExercised()",
          "cumulativePnLBetweenRounds(uint256,uint256)",
          "getRoundStartTime(uint256)",
          "getRoundEndTime(uint256)",
          "getMarketRound(address)",
          "getUsersCountInCurrentRound()",
          "setPaused(bool)",
          "setOnlyWhitelistedStakersAllowed(bool)",
          "setPoolRoundMastercopy(address)",
          "setStakedThalesMultiplier(uint256)",
          "setStakingThales(address)",
          "setMaxAllowedDeposit(uint256)",
          "setMinAllowedDeposit(uint256)",
          "setMaxAllowedUsers(uint256)",
          "setThalesAmm(address)",
          "setDefaultLiquidityProvider(address)",
          "setRoundLength(uint256)",
          "setWhitelistedAddresses(address[],bool)",
          "setWhitelistedStakerAddresses(address[],bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "52",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "103",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "thalesAMM",
              "offset": 1,
              "slot": "103",
              "type": "t_contract(IThalesAMM)45453",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:41"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:42"
            },
            {
              "label": "started",
              "offset": 20,
              "slot": "104",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:44"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:46"
            },
            {
              "label": "roundLength",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:47"
            },
            {
              "label": "firstRoundStartTime",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:48"
            },
            {
              "label": "roundPools",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:50"
            },
            {
              "label": "usersPerRound",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:52"
            },
            {
              "label": "userInRound",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:53"
            },
            {
              "label": "balancesPerRound",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:55"
            },
            {
              "label": "allocationPerRound",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:56"
            },
            {
              "label": "withdrawalRequested",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:58"
            },
            {
              "label": "tradingMarketsPerRound",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:60"
            },
            {
              "label": "isTradingMarketInARound",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:61"
            },
            {
              "label": "profitAndLossPerRound",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:63"
            },
            {
              "label": "cumulativeProfitAndLoss",
              "offset": 0,
              "slot": "117",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:64"
            },
            {
              "label": "maxAllowedDeposit",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:66"
            },
            {
              "label": "minDepositAmount",
              "offset": 0,
              "slot": "119",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:67"
            },
            {
              "label": "maxAllowedUsers",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:68"
            },
            {
              "label": "usersCurrentlyInPool",
              "offset": 0,
              "slot": "121",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:69"
            },
            {
              "label": "defaultLiquidityProvider",
              "offset": 0,
              "slot": "122",
              "type": "t_address",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:71"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "123",
              "type": "t_contract(IStakingThales)45283",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:73"
            },
            {
              "label": "stakedThalesMultiplier",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:75"
            },
            {
              "label": "poolRoundMastercopy",
              "offset": 0,
              "slot": "125",
              "type": "t_address",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:77"
            },
            {
              "label": "whitelistedDeposits",
              "offset": 0,
              "slot": "126",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:79"
            },
            {
              "label": "totalDeposited",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:81"
            },
            {
              "label": "onlyWhitelistedStakersAllowed",
              "offset": 0,
              "slot": "128",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:83"
            },
            {
              "label": "whitelistedStakers",
              "offset": 0,
              "slot": "129",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:85"
            },
            {
              "label": "needsTransformingCollateral",
              "offset": 0,
              "slot": "130",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:87"
            },
            {
              "label": "marketAlreadyExercisedInRound",
              "offset": 0,
              "slot": "131",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:89"
            },
            {
              "label": "roundClosingPrepared",
              "offset": 0,
              "slot": "132",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:91"
            },
            {
              "label": "usersProcessedInRound",
              "offset": 0,
              "slot": "133",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:93"
            },
            {
              "label": "marketsProcessedInRound",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:95"
            },
            {
              "label": "withdrawalShare",
              "offset": 0,
              "slot": "135",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMMLiquidityPool",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:97"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)45283": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMM)45453": {
              "label": "contract IThalesAMM",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolData.sol:ThalesAMMLiquidityPoolData": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolData.sol:10",
        "version": {
          "withMetadata": "6f6a32d4579f05493c1b7cf3796ebaadef876a27a24b881464b9cc61d51911bf",
          "withoutMetadata": "6f6a32d4579f05493c1b7cf3796ebaadef876a27a24b881464b9cc61d51911bf",
          "linkedWithoutMetadata": "6f6a32d4579f05493c1b7cf3796ebaadef876a27a24b881464b9cc61d51911bf"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getLiquidityPoolData(address)",
          "getUserLiquidityPoolData(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:ThalesAMMLiquidityPoolRound": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:10",
        "version": {
          "withMetadata": "ee8b05b6b1124e168403ecbb9aca059c75006b9d94ef8a178263fa066306b8a9",
          "withoutMetadata": "ee8b05b6b1124e168403ecbb9aca059c75006b9d94ef8a178263fa066306b8a9",
          "linkedWithoutMetadata": "ee8b05b6b1124e168403ecbb9aca059c75006b9d94ef8a178263fa066306b8a9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256,uint256,uint256)",
          "updateRoundTimes(uint256,uint256)",
          "exerciseMarketReadyToExercised(address)",
          "moveOptions(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ThalesAMMLiquidityPool)15774",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:16"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:17"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:19"
            },
            {
              "label": "roundStartTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:20"
            },
            {
              "label": "roundEndTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:21"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:25"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ThalesAMMLiquidityPool)15774": {
              "label": "contract ThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRoundMastercopy.sol:ThalesAMMLiquidityPoolRoundMastercopy": {
        "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRoundMastercopy.sol:7",
        "version": {
          "withMetadata": "88b9371b28172f69ac30e603e37f050a0ef2cb889bb433287ac8ea8e48f78b55",
          "withoutMetadata": "88b9371b28172f69ac30e603e37f050a0ef2cb889bb433287ac8ea8e48f78b55",
          "linkedWithoutMetadata": "88b9371b28172f69ac30e603e37f050a0ef2cb889bb433287ac8ea8e48f78b55"
        },
        "inherit": [
          "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:ThalesAMMLiquidityPoolRound"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ThalesAMMLiquidityPoolRoundMastercopy",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRoundMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ThalesAMMLiquidityPool)15774",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:16"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:17"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:19"
            },
            {
              "label": "roundStartTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:20"
            },
            {
              "label": "roundEndTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:21"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ThalesAMMLiquidityPoolRound",
              "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPoolRound.sol:25"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ThalesAMMLiquidityPool)15774": {
              "label": "contract ThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/Referrals.sol:Referrals": {
        "src": "contracts/AMM/Referrals.sol:20",
        "version": {
          "withMetadata": "c8f20ca840f19a09aa3fd7d5be04e059a30033962bd9cf56ff937dfa9c71571a",
          "withoutMetadata": "c8f20ca840f19a09aa3fd7d5be04e059a30033962bd9cf56ff937dfa9c71571a",
          "linkedWithoutMetadata": "c8f20ca840f19a09aa3fd7d5be04e059a30033962bd9cf56ff937dfa9c71571a"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "setReferrer(address,address)",
          "setWhitelistedAddress(address,bool)",
          "setTradedBefore(address[])",
          "setSportTradedBefore(address[])",
          "setSportsAMM(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:21"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:22"
            },
            {
              "label": "referralStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:23"
            },
            {
              "label": "tradedBefore",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:25"
            },
            {
              "label": "sportReferrals",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:27"
            },
            {
              "label": "sportReferralStarted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:28"
            },
            {
              "label": "sportTradedBefore",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:29"
            },
            {
              "label": "sportsAMM",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:30"
            },
            {
              "label": "parlayAMM",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "Referrals",
              "src": "contracts/AMM/Referrals.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/SafeBox.sol:SafeBox": {
        "src": "contracts/AMM/SafeBox.sol:8",
        "version": {
          "withMetadata": "1d057aa3a90ac8147e6ad7302aa21c36e7016d35ba05f0305c6b3326c162c801",
          "withoutMetadata": "1d057aa3a90ac8147e6ad7302aa21c36e7016d35ba05f0305c6b3326c162c801",
          "linkedWithoutMetadata": "1d057aa3a90ac8147e6ad7302aa21c36e7016d35ba05f0305c6b3326c162c801"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "retrieveSUSDAmount(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_initialized",
              "offset": 22,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 23,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)6957",
              "contract": "SafeBox",
              "src": "contracts/AMM/SafeBox.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/SafeBoxBuyback.sol:SafeBoxBuyback": {
        "src": "contracts/AMM/SafeBoxBuyback.sol:16",
        "version": {
          "withMetadata": "2ef7ee87a6b6ea01dc5ccdeb49ca723e35d1e8c5ee80bcf3d2e8eea226076eb4",
          "withoutMetadata": "2ef7ee87a6b6ea01dc5ccdeb49ca723e35d1e8c5ee80bcf3d2e8eea226076eb4",
          "linkedWithoutMetadata": "2ef7ee87a6b6ea01dc5ccdeb49ca723e35d1e8c5ee80bcf3d2e8eea226076eb4"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "executeBuyback()",
          "getTicksFromLastBuys()",
          "setTickRate(uint256)",
          "setTickLength(uint256)",
          "setThalesToken(address)",
          "setWETHAddress(address)",
          "setSwapRouter(address)",
          "setUniswapV3Factory(address)",
          "setMinAccepted(uint256)",
          "setBuybacksEnabled(bool)",
          "retrieveSUSDAmount(address payable,uint256)",
          "retrieveThalesAmount(address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "_initialized",
              "offset": 22,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 23,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "sUSD",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:19"
            },
            {
              "label": "thalesToken",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:20"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:21"
            },
            {
              "label": "swapRouter",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(ISwapRouter)12763",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:23"
            },
            {
              "label": "uniswapFactory",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IUniswapV3Factory)11955",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:24"
            },
            {
              "label": "sUSDperTick",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:26"
            },
            {
              "label": "tickLength",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:27"
            },
            {
              "label": "lastBuyback",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:28"
            },
            {
              "label": "buybacksEnabled",
              "offset": 0,
              "slot": "11",
              "type": "t_bool",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:30"
            },
            {
              "label": "minAccepted",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SafeBoxBuyback",
              "src": "contracts/AMM/SafeBoxBuyback.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ISwapRouter)12763": {
              "label": "contract ISwapRouter",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV3Factory)11955": {
              "label": "contract IUniswapV3Factory",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/ThalesAMM.sol:ThalesAMM": {
        "src": "contracts/AMM/ThalesAMM.sol:30",
        "version": {
          "withMetadata": "af0cb30d2de51426ade18d934dc065eff45eff469f50a8c6656c2a428a04d316",
          "withoutMetadata": "af0cb30d2de51426ade18d934dc065eff45eff469f50a8c6656c2a428a04d316",
          "linkedWithoutMetadata": "af0cb30d2de51426ade18d934dc065eff45eff469f50a8c6656c2a428a04d316"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256,address,uint256,uint256,uint256)",
          "availableToBuyFromAMM(address,uint8)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)",
          "buyPriceImpact(address,uint8,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellPriceImpact(address,uint8,uint256)",
          "price(address,uint8)",
          "isMarketInAMMTrading(address)",
          "getCapPerAsset(bytes32)",
          "buyFromAMMWithReferrer(address,uint8,uint256,uint256,uint256,address)",
          "buyFromAMMWithDifferentCollateralAndReferrer(address,uint8,uint256,uint256,uint256,address,address)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "retrieveSUSDAmount(address payable,uint256)",
          "setMinimalTimeLeftToMaturity(uint256)",
          "setWhitelistedAddress(address,bool)",
          "setSafeBoxFeePerAddress(address,uint256)",
          "setMinSpreadPerAddress(address,uint256)",
          "setMinMaxSpread(uint256,uint256)",
          "setSafeBoxData(address,uint256)",
          "setMinMaxSupportedPriceAndCap(uint256,uint256,uint256)",
          "setImpliedVolatilityPerAsset(bytes32,uint256)",
          "setPriceFeedAndSUSD(address,address)",
          "setAmmUtils(address)",
          "setStakingThalesAndReferrals(address,address,uint256)",
          "setPositionalMarketManager(address)",
          "setLiquidityPool(address)",
          "setCurveSUSD(address,address,address,address,bool,uint256)",
          "setCapPerAsset(bytes32,uint256)",
          "transferTokens(address[],address payable,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "priceFeed",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IPriceFeed)44545",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:46"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:47"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:48"
            },
            {
              "label": "capPerMarket",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:50"
            },
            {
              "label": "min_spread",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:51"
            },
            {
              "label": "max_spread",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:52"
            },
            {
              "label": "impliedVolatilityPerAsset",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:54"
            },
            {
              "label": "minimalTimeLeftToMaturity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:56"
            },
            {
              "label": "spentOnMarket",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:58"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:60"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:61"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IStakingThales)45283",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:63"
            },
            {
              "label": "minSupportedPrice",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:65"
            },
            {
              "label": "maxSupportedPrice",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:66"
            },
            {
              "label": "_capPerAsset",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:68"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:70"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:72"
            },
            {
              "label": "referrerFee",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:73"
            },
            {
              "label": "curveSUSD",
              "offset": 0,
              "slot": "23",
              "type": "t_contract(ICurveSUSD)43823",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:75"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:77"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:78"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:79"
            },
            {
              "label": "curveOnrampEnabled",
              "offset": 20,
              "slot": "26",
              "type": "t_bool",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:81"
            },
            {
              "label": "maxAllowedPegSlippagePercentage",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:83"
            },
            {
              "label": "ammUtils",
              "offset": 0,
              "slot": "28",
              "type": "t_contract(IThalesAMMUtils)45578",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:85"
            },
            {
              "label": "safeBoxFeePerAddress",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:90"
            },
            {
              "label": "min_spreadPerAddress",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:91"
            },
            {
              "label": "liquidityPool",
              "offset": 0,
              "slot": "31",
              "type": "t_contract(ThalesAMMLiquidityPool)15774",
              "contract": "ThalesAMM",
              "src": "contracts/AMM/ThalesAMM.sol:93"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ICurveSUSD)43823": {
              "label": "contract ICurveSUSD",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)44545": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)45283": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMMUtils)45578": {
              "label": "contract IThalesAMMUtils",
              "numberOfBytes": "20"
            },
            "t_contract(ThalesAMMLiquidityPool)15774": {
              "label": "contract ThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AMM/ThalesAMMUtils.sol:ThalesAMMUtils": {
        "src": "contracts/AMM/ThalesAMMUtils.sol:10",
        "version": {
          "withMetadata": "c04123060d2b3562084a4322340eef2a7671bb3b0902ba688f0207b6488acd5d",
          "withoutMetadata": "c04123060d2b3562084a4322340eef2a7671bb3b0902ba688f0207b6488acd5d",
          "linkedWithoutMetadata": "c04123060d2b3562084a4322340eef2a7671bb3b0902ba688f0207b6488acd5d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateOdds(uint256,uint256,uint256,uint256)",
          "calculateDiscount((uint256,uint256,uint256,uint256,uint256))",
          "buyPriceImpactImbalancedSkew((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "sellPriceImpactImbalancedSkew(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "balanceOfPositionOnMarket(address,uint8,address)",
          "balanceOfPositionsOnMarket(address,uint8,address)",
          "getBalanceOfPositionsOnMarket(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/EscrowThales.sol:EscrowThales": {
        "src": "contracts/EscrowAndStaking/EscrowThales.sol:18",
        "version": {
          "withMetadata": "da40f21593ae479487aef4cf41823825c2b8fa052960f99fd8e9bd21953094b7",
          "withoutMetadata": "da40f21593ae479487aef4cf41823825c2b8fa052960f99fd8e9bd21953094b7",
          "linkedWithoutMetadata": "da40f21593ae479487aef4cf41823825c2b8fa052960f99fd8e9bd21953094b7"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/interfaces/IEscrowThales.sol:IEscrowThales"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "getStakerPeriod(address,uint256)",
          "getStakerAmounts(address,uint256)",
          "getStakedEscrowedBalanceForRewards(address)",
          "claimable(address)",
          "addToEscrow(address,uint256)",
          "vest(uint256)",
          "addTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "subtractTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "updateCurrentPeriod()",
          "setStakingThalesContract(address)",
          "enableTestMode()",
          "setAirdropContract(address)",
          "setThalesStakingRewardsPool(address)",
          "fixEscrowEntry(address)",
          "mergeAccount(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "vestingToken",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20)6957",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:22"
            },
            {
              "label": "iStakingThales",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IStakingThales)45283",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:23"
            },
            {
              "label": "airdropContract",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:24"
            },
            {
              "label": "totalEscrowedRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:27"
            },
            {
              "label": "totalEscrowBalanceNotIncludedInStaking",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:28"
            },
            {
              "label": "currentVestingPeriod",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:29"
            },
            {
              "label": "_totalVested",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:31"
            },
            {
              "label": "vestingEntries",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_array(t_struct(VestingEntry)21887_storage)10_storage)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:38"
            },
            {
              "label": "totalAccountEscrowedAmount",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:39"
            },
            {
              "label": "lastPeriodAddedReward",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:41"
            },
            {
              "label": "testMode",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:43"
            },
            {
              "label": "ThalesStakingRewardsPool",
              "offset": 1,
              "slot": "15",
              "type": "t_contract(IThalesStakingRewardsPool)45658",
              "contract": "EscrowThales",
              "src": "contracts/EscrowAndStaking/EscrowThales.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VestingEntry)21887_storage)10_storage": {
              "label": "struct EscrowThales.VestingEntry[10]",
              "numberOfBytes": "640"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)45283": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesStakingRewardsPool)45658": {
              "label": "contract IThalesStakingRewardsPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(VestingEntry)21887_storage)10_storage)": {
              "label": "mapping(address => struct EscrowThales.VestingEntry[10])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(VestingEntry)21887_storage": {
              "label": "struct EscrowThales.VestingEntry",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "vesting_period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:LPStakingDoubleRewards": {
        "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:12",
        "version": {
          "withMetadata": "ababa6d84554c841aed17e1333e9c9a58b35f09510921c1e0fbdef925c4126d0",
          "withoutMetadata": "ababa6d84554c841aed17e1333e9c9a58b35f09510921c1e0fbdef925c4126d0",
          "linkedWithoutMetadata": "ababa6d84554c841aed17e1333e9c9a58b35f09510921c1e0fbdef925c4126d0"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "lastTimeRewardApplicable()",
          "rewardPerToken()",
          "earned(address)",
          "getRewardForDuration()",
          "getSecondRewardForDuration()",
          "stake(uint256)",
          "withdraw(uint256)",
          "getReward()",
          "exit()",
          "notifyRewardAmount(uint256,uint256)",
          "addReward(uint256)",
          "addSecondReward(uint256)",
          "addBothRewards(uint256,uint256)",
          "recoverERC20(address,uint256)",
          "setRewardsDuration(uint256)",
          "setSecondRewardsToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "rewardsToken",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:18"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:19"
            },
            {
              "label": "secondRewardsToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:20"
            },
            {
              "label": "periodFinish",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:21"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:22"
            },
            {
              "label": "secondRewardRate",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:23"
            },
            {
              "label": "rewardsDuration",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:25"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:26"
            },
            {
              "label": "lastUpdateTime",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:27"
            },
            {
              "label": "rewardPerTokenStored",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:28"
            },
            {
              "label": "rewardPerSecondTokenStored",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:29"
            },
            {
              "label": "userRewardPerTokenPaid",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:31"
            },
            {
              "label": "userRewardPerSecondTokenPaid",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:32"
            },
            {
              "label": "rewards",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:33"
            },
            {
              "label": "secondRewards",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingDoubleRewards",
              "src": "contracts/EscrowAndStaking/LPStakingDoubleRewards.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/LPStakingRewards.sol:LPStakingRewards": {
        "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:13",
        "version": {
          "withMetadata": "7881a02200568fe3211d0431237e5018d739ba4d9cfb7c51ff5b6825ef2d0bb9",
          "withoutMetadata": "7881a02200568fe3211d0431237e5018d739ba4d9cfb7c51ff5b6825ef2d0bb9",
          "linkedWithoutMetadata": "7881a02200568fe3211d0431237e5018d739ba4d9cfb7c51ff5b6825ef2d0bb9"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "lastTimeRewardApplicable()",
          "rewardPerToken()",
          "earned(address)",
          "getRewardForDuration()",
          "stake(uint256)",
          "withdraw(uint256)",
          "getReward()",
          "exit()",
          "notifyRewardAmount(uint256)",
          "addReward(uint256)",
          "recoverERC20(address,uint256)",
          "setRewardsDuration(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "rewardsToken",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:19"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)6957",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:20"
            },
            {
              "label": "periodFinish",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:21"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:22"
            },
            {
              "label": "rewardsDuration",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:23"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:24"
            },
            {
              "label": "lastUpdateTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:25"
            },
            {
              "label": "rewardPerTokenStored",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:26"
            },
            {
              "label": "userRewardPerTokenPaid",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:28"
            },
            {
              "label": "rewards",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:29"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LPStakingRewards",
              "src": "contracts/EscrowAndStaking/LPStakingRewards.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/StakingData.sol:StakingData": {
        "src": "contracts/EscrowAndStaking/StakingData.sol:12",
        "version": {
          "withMetadata": "050bae0761a29acaae3449fafc058a5bc6b833a66b04873a59c39e949bb26ba8",
          "withoutMetadata": "050bae0761a29acaae3449fafc058a5bc6b833a66b04873a59c39e949bb26ba8",
          "linkedWithoutMetadata": "050bae0761a29acaae3449fafc058a5bc6b833a66b04873a59c39e949bb26ba8"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getStakingData()",
          "getUserStakingData(address)",
          "getUserVestingData(address)",
          "setStakingThales(address)",
          "setEscrowThales(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "stakingThales",
              "offset": 1,
              "slot": "3",
              "type": "t_address",
              "contract": "StakingData",
              "src": "contracts/EscrowAndStaking/StakingData.sol:62"
            },
            {
              "label": "escrowThales",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "StakingData",
              "src": "contracts/EscrowAndStaking/StakingData.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/StakingThales.sol:StakingThales": {
        "src": "contracts/EscrowAndStaking/StakingThales.sol:30",
        "version": {
          "withMetadata": "f5510a8f3574c7c28861c1a220620b2b992442287d8a9ea13cd9544736d3949c",
          "withoutMetadata": "f5510a8f3574c7c28861c1a220620b2b992442287d8a9ea13cd9544736d3949c",
          "linkedWithoutMetadata": "f5510a8f3574c7c28861c1a220620b2b992442287d8a9ea13cd9544736d3949c"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/interfaces/IStakingThales.sol:IStakingThales"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,uint256,uint256,address)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "setStakingParameters(bool,bool,uint256,uint256,bool)",
          "setStakingRewardsParameters(uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256)",
          "setAddresses(address,address,address,address,address,address,address,address,address,address,address)",
          "setEscrow(address)",
          "setSupportedSportVault(address,bool)",
          "setSupportedAMMVault(address,bool)",
          "getSNXRewardsAddress()",
          "getSNXStaked(address)",
          "getBaseReward(address)",
          "getAMMVolume(address)",
          "getThalesAMMVolume(address)",
          "getThalesRangedAMMVolume(address)",
          "getExoticMarketsVolume(address)",
          "getSportsAMMVolume(address)",
          "getSNXBonusPercentage(address)",
          "getSNXBonus(address)",
          "getAMMBonusPercentage(address)",
          "getAMMBonus(address)",
          "getTotalBonusPercentage(address)",
          "getTotalBonus(address)",
          "canClosePeriod()",
          "getSNXTargetRatio()",
          "getCRatio(address)",
          "getSNXRateForCurrency()",
          "getSNXDebt(address)",
          "startStakingPeriod()",
          "closePeriod()",
          "stake(uint256)",
          "startUnstake(uint256)",
          "cancelUnstake()",
          "unstake()",
          "claimReward()",
          "claimRewardOnBehalf(address)",
          "updateVolume(address,uint256)",
          "mergeAccount(address)",
          "setCanClaimOnBehalf(address,bool)",
          "delegateVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "iEscrowThales",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IEscrowThales)43916",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)6957",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
            },
            {
              "label": "feeToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)6957",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
            },
            {
              "label": "SNXRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISNXRewards)44607",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
            },
            {
              "label": "thalesRoyale",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IThalesRoyale)45648",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IPriceFeed)44545",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
            },
            {
              "label": "periodsOfStaking",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
            },
            {
              "label": "lastPeriodTimeStamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
            },
            {
              "label": "durationPeriod",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
            },
            {
              "label": "unstakeDurationPeriod",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
            },
            {
              "label": "startTimeStamp",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
            },
            {
              "label": "currentPeriodRewards",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
            },
            {
              "label": "currentPeriodFees",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
            },
            {
              "label": "distributeFeesEnabled",
              "offset": 0,
              "slot": "18",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
            },
            {
              "label": "fixedPeriodReward",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
            },
            {
              "label": "periodExtraReward",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
            },
            {
              "label": "totalSNXRewardsInPeriod",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
            },
            {
              "label": "totalSNXFeesInPeriod",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
            },
            {
              "label": "claimEnabled",
              "offset": 0,
              "slot": "23",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
            },
            {
              "label": "stakerLifetimeRewardsClaimed",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
            },
            {
              "label": "stakerFeesClaimed",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
            },
            {
              "label": "_totalStakedAmount",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
            },
            {
              "label": "_totalEscrowedAmount",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
            },
            {
              "label": "_totalPendingStakeAmount",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
            },
            {
              "label": "_totalUnclaimedRewards",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
            },
            {
              "label": "_totalRewardsClaimed",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
            },
            {
              "label": "_totalRewardFeesClaimed",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
            },
            {
              "label": "lastUnstakeTime",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
            },
            {
              "label": "unstaking",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
            },
            {
              "label": "unstakingAmount",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
            },
            {
              "label": "_stakedBalances",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
            },
            {
              "label": "_lastRewardsClaimedPeriod",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:73"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "37",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:74"
            },
            {
              "label": "lastAMMUpdatePeriod",
              "offset": 0,
              "slot": "38",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
            },
            {
              "label": "stakerAMMVolume",
              "offset": 0,
              "slot": "39",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25093_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
            },
            {
              "label": "extraRewardsActive",
              "offset": 0,
              "slot": "40",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
            },
            {
              "label": "ThalesStakingRewardsPool",
              "offset": 1,
              "slot": "40",
              "type": "t_contract(IThalesStakingRewardsPool)45658",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:87"
            },
            {
              "label": "maxSNXRewardsPercentage",
              "offset": 0,
              "slot": "41",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
            },
            {
              "label": "maxAMMVolumeRewardsPercentage",
              "offset": 0,
              "slot": "42",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
            },
            {
              "label": "AMMVolumeRewardsMultiplier",
              "offset": 0,
              "slot": "43",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
            },
            {
              "label": "maxThalesRoyaleRewardsPercentage",
              "offset": 0,
              "slot": "44",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:92"
            },
            {
              "label": "SNXVolumeRewardsMultiplier",
              "offset": 0,
              "slot": "45",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
            },
            {
              "label": "_lastStakingPeriod",
              "offset": 0,
              "slot": "46",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
            },
            {
              "label": "totalStakedLastPeriodEnd",
              "offset": 0,
              "slot": "47",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
            },
            {
              "label": "totalEscrowedLastPeriodEnd",
              "offset": 0,
              "slot": "48",
              "type": "t_uint256",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
            },
            {
              "label": "exoticBonds",
              "offset": 0,
              "slot": "49",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
            },
            {
              "label": "addressResolver",
              "offset": 0,
              "slot": "50",
              "type": "t_contract(IAddressResolver)43796",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
            },
            {
              "label": "sportsAMM",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
            },
            {
              "label": "lastThalesAMMUpdatePeriod",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
            },
            {
              "label": "thalesAMMVolume",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25093_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
            },
            {
              "label": "lastThalesRangedAMMUpdatePeriod",
              "offset": 0,
              "slot": "55",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
            },
            {
              "label": "thalesRangedAMMVolume",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25093_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
            },
            {
              "label": "lastExoticMarketsUpdatePeriod",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
            },
            {
              "label": "exoticMarketsVolume",
              "offset": 0,
              "slot": "58",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25093_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
            },
            {
              "label": "lastSportsAMMUpdatePeriod",
              "offset": 0,
              "slot": "59",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
            },
            {
              "label": "sportsAMMVolume",
              "offset": 0,
              "slot": "60",
              "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25093_storage)4_storage)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
            },
            {
              "label": "canClaimOnBehalf",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:119"
            },
            {
              "label": "mergeAccountEnabled",
              "offset": 0,
              "slot": "62",
              "type": "t_bool",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:121"
            },
            {
              "label": "delegatedVolume",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_address)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
            },
            {
              "label": "supportedSportVault",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
            },
            {
              "label": "supportedAMMVault",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:125"
            },
            {
              "label": "sportsAMMLiquidityPool",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(ISportsAMMLiquidityPool)45206",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:127"
            },
            {
              "label": "thalesAMMLiquidityPool",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(IThalesAMMLiquidityPool)45463",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:128"
            },
            {
              "label": "stakingThalesBonusRewardsManager",
              "offset": 0,
              "slot": "68",
              "type": "t_contract(IStakingThalesBonusRewardsManager)45311",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:130"
            },
            {
              "label": "parlayAMMLiquidityPool",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(IParlayAMMLiquidityPool)43968",
              "contract": "StakingThales",
              "src": "contracts/EscrowAndStaking/StakingThales.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(AMMVolumeEntry)25093_storage)4_storage": {
              "label": "struct StakingThales.AMMVolumeEntry[4]",
              "numberOfBytes": "256"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IAddressResolver)43796": {
              "label": "contract IAddressResolver",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IEscrowThales)43916": {
              "label": "contract IEscrowThales",
              "numberOfBytes": "20"
            },
            "t_contract(IParlayAMMLiquidityPool)43968": {
              "label": "contract IParlayAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)44545": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(ISNXRewards)44607": {
              "label": "contract ISNXRewards",
              "numberOfBytes": "20"
            },
            "t_contract(ISportsAMMLiquidityPool)45206": {
              "label": "contract ISportsAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThalesBonusRewardsManager)45311": {
              "label": "contract IStakingThalesBonusRewardsManager",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMMLiquidityPool)45463": {
              "label": "contract IThalesAMMLiquidityPool",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesRoyale)45648": {
              "label": "contract IThalesRoyale",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesStakingRewardsPool)45658": {
              "label": "contract IThalesStakingRewardsPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)25093_storage)4_storage)": {
              "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AMMVolumeEntry)25093_storage": {
              "label": "struct StakingThales.AMMVolumeEntry",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:StakingThalesBonusRewardsManager": {
        "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:11",
        "version": {
          "withMetadata": "3da74250e7a3ded23c5e341052ab8fce4d5f20d1044aa000d4887eb7889a7265",
          "withoutMetadata": "3da74250e7a3ded23c5e341052ab8fce4d5f20d1044aa000d4887eb7889a7265",
          "linkedWithoutMetadata": "3da74250e7a3ded23c5e341052ab8fce4d5f20d1044aa000d4887eb7889a7265"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "storePoints(address,address,uint256,uint256)",
          "setStakingThales(address)",
          "setKnownVault(address,bool)",
          "setKnownLiquidityPool(address,bool)",
          "setKnownTradingAMM(address,bool)",
          "setStakingBaseDivider(uint256)",
          "setMaxStakingMultiplier(uint256)",
          "setMultipliers(uint256,uint256,uint256)",
          "setUseNewModel(bool)",
          "getUserRoundBonusShare(address,uint256)",
          "getStakingMultiplier(address)",
          "getStakersLeaderboardData(address[],uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "_initialized",
              "offset": 22,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 23,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "stakingThales",
              "offset": 1,
              "slot": "3",
              "type": "t_address",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:24"
            },
            {
              "label": "stakingBaseDivider",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:26"
            },
            {
              "label": "maxStakingMultiplier",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:28"
            },
            {
              "label": "vaultsMultiplier",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:30"
            },
            {
              "label": "lpMultiplier",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:31"
            },
            {
              "label": "tradingMultiplier",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:32"
            },
            {
              "label": "userVaultBasePointsPerRound",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:34"
            },
            {
              "label": "userLPBasePointsPerRound",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:35"
            },
            {
              "label": "userTradingBasePointsPerRound",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:36"
            },
            {
              "label": "userRoundBonusPoints",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:37"
            },
            {
              "label": "totalVaultBasePointsPerRound",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:39"
            },
            {
              "label": "totalLPBasePointsPerRound",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:40"
            },
            {
              "label": "totalTradingBasePointsPerRound",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:41"
            },
            {
              "label": "totalRoundBonusPoints",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:42"
            },
            {
              "label": "knownVaults",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:44"
            },
            {
              "label": "knownLiquidityPools",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:45"
            },
            {
              "label": "knownTradingAMMs",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:46"
            },
            {
              "label": "useNewBonusModel",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "StakingThalesBonusRewardsManager",
              "src": "contracts/EscrowAndStaking/StakingThalesBonusRewardsManager.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:ThalesStakingRewardsPool": {
        "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:17",
        "version": {
          "withMetadata": "ddaa9f9245631685b2741b8f3ee145e1946ebfa1f300d7e8d5f481e438b2f365",
          "withoutMetadata": "ddaa9f9245631685b2741b8f3ee145e1946ebfa1f300d7e8d5f481e438b2f365",
          "linkedWithoutMetadata": "ddaa9f9245631685b2741b8f3ee145e1946ebfa1f300d7e8d5f481e438b2f365"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/interfaces/IThalesStakingRewardsPool.sol:IThalesStakingRewardsPool"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)",
          "setStakingThalesContract(address)",
          "setEscrow(address)",
          "setRewardToken(address)",
          "addToEscrow(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            },
            {
              "label": "iStakingThales",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IStakingThales)45283",
              "contract": "ThalesStakingRewardsPool",
              "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:28"
            },
            {
              "label": "iEscrowThales",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IEscrowThales)43916",
              "contract": "ThalesStakingRewardsPool",
              "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:29"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)6957",
              "contract": "ThalesStakingRewardsPool",
              "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:30"
            },
            {
              "label": "lifetimeClaimedRewards",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ThalesStakingRewardsPool",
              "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IEscrowThales)43916": {
              "label": "contract IEscrowThales",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)45283": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/OwnedWithInit.sol:OwnedWithInit": {
        "src": "contracts/OwnedWithInit.sol:5",
        "version": {
          "withMetadata": "8b7514f41bf97b8937265336d08cbb6e032ef9ade39a2197290374b4b93a7567",
          "withoutMetadata": "8b7514f41bf97b8937265336d08cbb6e032ef9ade39a2197290374b4b93a7567",
          "linkedWithoutMetadata": "8b7514f41bf97b8937265336d08cbb6e032ef9ade39a2197290374b4b93a7567"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "nominateNewOwner(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/Position.sol:Position": {
        "src": "contracts/Positions/Position.sol:15",
        "version": {
          "withMetadata": "3e83342c6bcc1561de26986b5e685cd21f4c3e6e19001a16430b82869f3268b2",
          "withoutMetadata": "3e83342c6bcc1561de26986b5e685cd21f4c3e6e19001a16430b82869f3268b2",
          "linkedWithoutMetadata": "3e83342c6bcc1561de26986b5e685cd21f4c3e6e19001a16430b82869f3268b2"
        },
        "inherit": [
          "contracts/interfaces/IPosition.sol:IPosition",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address)",
          "allowance(address,address)",
          "mint(address,uint256)",
          "exercise(address)",
          "exerciseWithAmount(address,uint256)",
          "expire(address payable)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getBalanceOf(address)",
          "getTotalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/Positions/Position.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:18"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:19"
            },
            {
              "label": "market",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PositionalMarket)31205",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:22"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:24"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:25"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:28"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:33"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PositionalMarket)31205": {
              "label": "contract PositionalMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionMastercopy.sol:PositionMastercopy": {
        "src": "contracts/Positions/PositionMastercopy.sol:8",
        "version": {
          "withMetadata": "b7d573b567b2292637d294feec261fa3a2774840b3e51941b1098f78f562b82b",
          "withoutMetadata": "b7d573b567b2292637d294feec261fa3a2774840b3e51941b1098f78f562b82b",
          "linkedWithoutMetadata": "b7d573b567b2292637d294feec261fa3a2774840b3e51941b1098f78f562b82b"
        },
        "inherit": [
          "contracts/Positions/Position.sol:Position",
          "contracts/interfaces/IPosition.sol:IPosition",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PositionMastercopy",
            "src": "contracts/Positions/PositionMastercopy.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:18"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:19"
            },
            {
              "label": "market",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PositionalMarket)31205",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:22"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:24"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:25"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:28"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:33"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "Position",
              "src": "contracts/Positions/Position.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PositionalMarket)31205": {
              "label": "contract PositionalMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarket.sol:PositionalMarket": {
        "src": "contracts/Positions/PositionalMarket.sol:18",
        "version": {
          "withMetadata": "6dd6dd4227c9719197358e563262d031f135e033ee48e2269213c0b8d546fd06",
          "withoutMetadata": "6dd6dd4227c9719197358e563262d031f135e033ee48e2269213c0b8d546fd06",
          "linkedWithoutMetadata": "6dd6dd4227c9719197358e563262d031f135e033ee48e2269213c0b8d546fd06"
        },
        "inherit": [
          "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket",
          "contracts/OwnedWithInit.sol:OwnedWithInit"
        ],
        "libraries": [],
        "methods": [
          "initialize((address,address,address,address,bytes32,uint256,uint256[2],uint256,address,address,address))",
          "phase()",
          "oraclePriceAndTimestamp()",
          "oraclePrice()",
          "canResolve()",
          "result()",
          "balancesOf(address)",
          "totalSupplies()",
          "getMaximumBurnable(address)",
          "getOptions()",
          "getOracleDetails()",
          "requireUnpaused()",
          "mint(uint256)",
          "burnOptionsMaximum()",
          "burnOptions(uint256)",
          "resolve()",
          "exerciseOptions()",
          "expire(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/Positions/PositionalMarket.sol:75"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:7"
            },
            {
              "label": "options",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Options)29993_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:59"
            },
            {
              "label": "times",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Times)29998_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:60"
            },
            {
              "label": "oracleDetails",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(OracleDetails)30009_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:61"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Fees)32980_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:62"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IPriceFeed)44545",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:63"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)6957",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:64"
            },
            {
              "label": "deposited",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:68"
            },
            {
              "label": "initialMint",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:69"
            },
            {
              "label": "creator",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:70"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:71"
            },
            {
              "label": "initialized",
              "offset": 21,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)44545": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(Position)29956": {
              "label": "contract Position",
              "numberOfBytes": "20"
            },
            "t_struct(Fees)32980_storage": {
              "label": "struct PositionalMarketManager.Fees",
              "members": [
                {
                  "label": "poolFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "creatorFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Options)29993_storage": {
              "label": "struct PositionalMarket.Options",
              "members": [
                {
                  "label": "up",
                  "type": "t_contract(Position)29956",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "down",
                  "type": "t_contract(Position)29956",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(OracleDetails)30009_storage": {
              "label": "struct PositionalMarket.OracleDetails",
              "members": [
                {
                  "label": "key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "strikePrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "finalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "customMarket",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "iOracleInstanceAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Times)29998_storage": {
              "label": "struct PositionalMarket.Times",
              "members": [
                {
                  "label": "maturity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketData.sol:PositionalMarketData": {
        "src": "contracts/Positions/PositionalMarketData.sol:16",
        "version": {
          "withMetadata": "8268678a52d27ff39c49fb358361ebd96b44b2997b0462548f090650b53d641c",
          "withoutMetadata": "8268678a52d27ff39c49fb358361ebd96b44b2997b0462548f090650b53d641c",
          "linkedWithoutMetadata": "8268678a52d27ff39c49fb358361ebd96b44b2997b0462548f090650b53d641c"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getMarketParameters(address)",
          "getMarketData(address)",
          "getAccountMarketData(address,address)",
          "getBatchPriceImpactForAllActiveMarkets(uint256,uint256)",
          "getBatchBasePricesForAllActiveMarkets(uint256,uint256)",
          "getAvailableAssets()",
          "getMaturityDates(bytes32)",
          "getMarketsForAssetAndStrikeDate(bytes32,uint256)",
          "getActiveMarketsInfoPerPosition(address[],uint8)",
          "getRangedActiveMarketsInfoPerPosition(address[],uint8)",
          "getAmmMarketData(address)",
          "getRangedAmmMarketData(address)",
          "setPositionalMarketManager(address)",
          "setThalesAMM(address)",
          "setRangedMarketsAMM(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "manager",
              "offset": 1,
              "slot": "3",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:124"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:125"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PositionalMarketData",
              "src": "contracts/Positions/PositionalMarketData.sol:126"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketFactory.sol:PositionalMarketFactory": {
        "src": "contracts/Positions/PositionalMarketFactory.sol:18",
        "version": {
          "withMetadata": "55578f298c22fb1d22448d6f35ab74fb17b541de5b84cd47d72cdd3caa2544d4",
          "withoutMetadata": "55578f298c22fb1d22448d6f35ab74fb17b541de5b84cd47d72cdd3caa2544d4",
          "linkedWithoutMetadata": "55578f298c22fb1d22448d6f35ab74fb17b541de5b84cd47d72cdd3caa2544d4"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "createMarket((address,address,address,bytes32,uint256,uint256[2],uint256))",
          "setPositionalMarketManager(address)",
          "setPositionalMarketMastercopy(address)",
          "setPositionMastercopy(address)",
          "setThalesAMM(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "positionalMarketManager",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:20"
            },
            {
              "label": "positionalMarketMastercopy",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:22"
            },
            {
              "label": "positionMastercopy",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:23"
            },
            {
              "label": "limitOrderProvider",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:25"
            },
            {
              "label": "thalesAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PositionalMarketFactory",
              "src": "contracts/Positions/PositionalMarketFactory.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketManager.sol:PositionalMarketManager": {
        "src": "contracts/Positions/PositionalMarketManager.sol:25",
        "version": {
          "withMetadata": "36a43ca33039a3c06f4ead604f5780b99d4ebbe4d3bd615e46bfe634c50d0b2b",
          "withoutMetadata": "36a43ca33039a3c06f4ead604f5780b99d4ebbe4d3bd615e46bfe634c50d0b2b",
          "linkedWithoutMetadata": "36a43ca33039a3c06f4ead604f5780b99d4ebbe4d3bd615e46bfe634c50d0b2b"
        },
        "inherit": [
          "contracts/interfaces/IPositionalMarketManager.sol:IPositionalMarketManager",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256,uint256)",
          "isKnownMarket(address)",
          "isActiveMarket(address)",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "incrementTotalDeposited(uint256)",
          "decrementTotalDeposited(uint256)",
          "createMarket(bytes32,uint256,uint256,uint256)",
          "createMarkets(bytes32[],uint256[],uint256[])",
          "transferSusdTo(address,address,uint256)",
          "resolveMarket(address)",
          "resolveMarketsBatch(address[])",
          "expireMarkets(address[])",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "canCreateMarket(bytes32,uint256,uint256)",
          "enableWhitelistedAddresses()",
          "disableWhitelistedAddresses()",
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "setWhitelistedAddresses(address[])",
          "setPositionalMarketFactory(address)",
          "setNeedsTransformingCollateral(bool)",
          "setExpiryDuration(uint256)",
          "setMaxTimeToMaturity(uint256)",
          "setPriceFeed(address)",
          "setOnlyAMMMintingAndBurning(bool)",
          "setsUSD(address)",
          "setPriceBuffer(uint256)",
          "setTimeframeBuffer(uint256)",
          "setMarketCreationEnabled(bool)",
          "setMarketCreationParameters(uint256,uint256)",
          "getStrikePriceStep(bytes32)",
          "getThalesAMM()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "durations",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Durations)32985_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:47"
            },
            {
              "label": "capitalRequirement",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:48"
            },
            {
              "label": "marketCreationEnabled",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:50"
            },
            {
              "label": "customMarketCreationEnabled",
              "offset": 1,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:51"
            },
            {
              "label": "onlyWhitelistedAddressesCanCreateMarkets",
              "offset": 2,
              "slot": "7",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:53"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:54"
            },
            {
              "label": "totalDeposited",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:56"
            },
            {
              "label": "_activeMarkets",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(AddressSet)47766_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:58"
            },
            {
              "label": "_maturedMarkets",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(AddressSet)47766_storage",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:59"
            },
            {
              "label": "_migratingManager",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(PositionalMarketManager)34677",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:61"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(IPriceFeed)44545",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:63"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IERC20)6957",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:64"
            },
            {
              "label": "positionalMarketFactory",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:66"
            },
            {
              "label": "needsTransformingCollateral",
              "offset": 20,
              "slot": "17",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:68"
            },
            {
              "label": "timeframeBuffer",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:70"
            },
            {
              "label": "priceBuffer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:71"
            },
            {
              "label": "marketsPerOracleKey",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:73"
            },
            {
              "label": "marketsStrikePrice",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:74"
            },
            {
              "label": "onlyAMMMintingAndBurning",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:76"
            },
            {
              "label": "marketCreationMonthLimit",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:78"
            },
            {
              "label": "allowedDate1",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:80"
            },
            {
              "label": "allowedDate2",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:81"
            },
            {
              "label": "marketExistsByOracleKeyDateAndStrikePrice",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
              "contract": "PositionalMarketManager",
              "src": "contracts/Positions/PositionalMarketManager.sol:83"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)44545": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(PositionalMarketManager)34677": {
              "label": "contract PositionalMarketManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => address[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
              "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
              "label": "mapping(uint256 => mapping(uint256 => address))",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)47766_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Durations)32985_storage": {
              "label": "struct PositionalMarketManager.Durations",
              "members": [
                {
                  "label": "expiryDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxTimeToMaturity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Positions/PositionalMarketMastercopy.sol:PositionalMarketMastercopy": {
        "src": "contracts/Positions/PositionalMarketMastercopy.sol:8",
        "version": {
          "withMetadata": "b20c23e56d0fbb64b65bdde694f0f300c9b1a7197b38779c8024fa27354474fb",
          "withoutMetadata": "b20c23e56d0fbb64b65bdde694f0f300c9b1a7197b38779c8024fa27354474fb",
          "linkedWithoutMetadata": "b20c23e56d0fbb64b65bdde694f0f300c9b1a7197b38779c8024fa27354474fb"
        },
        "inherit": [
          "contracts/Positions/PositionalMarket.sol:PositionalMarket",
          "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket",
          "contracts/OwnedWithInit.sol:OwnedWithInit"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PositionalMarketMastercopy",
            "src": "contracts/Positions/PositionalMarketMastercopy.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OwnedWithInit",
              "src": "contracts/OwnedWithInit.sol:7"
            },
            {
              "label": "options",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Options)29993_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:59"
            },
            {
              "label": "times",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Times)29998_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:60"
            },
            {
              "label": "oracleDetails",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(OracleDetails)30009_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:61"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Fees)32980_storage",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:62"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IPriceFeed)44545",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:63"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)6957",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:64"
            },
            {
              "label": "deposited",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:68"
            },
            {
              "label": "initialMint",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:69"
            },
            {
              "label": "creator",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:70"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:71"
            },
            {
              "label": "initialized",
              "offset": 21,
              "slot": "16",
              "type": "t_bool",
              "contract": "PositionalMarket",
              "src": "contracts/Positions/PositionalMarket.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)6957": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)44545": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_contract(Position)29956": {
              "label": "contract Position",
              "numberOfBytes": "20"
            },
            "t_struct(Fees)32980_storage": {
              "label": "struct PositionalMarketManager.Fees",
              "members": [
                {
                  "label": "poolFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "creatorFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Options)29993_storage": {
              "label": "struct PositionalMarket.Options",
              "members": [
                {
                  "label": "up",
                  "type": "t_contract(Position)29956",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "down",
                  "type": "t_contract(Position)29956",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(OracleDetails)30009_storage": {
              "label": "struct PositionalMarket.OracleDetails",
              "members": [
                {
                  "label": "key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "strikePrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "finalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "customMarket",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "iOracleInstanceAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Times)29998_storage": {
              "label": "struct PositionalMarket.Times",
              "members": [
                {
                  "label": "maturity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/PriceFeed/PriceFeed.sol:PriceFeed": {
        "src": "contracts/PriceFeed/PriceFeed.sol:19",
        "version": {
          "withMetadata": "eb21615db6aa406bb091970495f5af4a3c630ec85656a2dc108dcd097f9aa1b4",
          "withoutMetadata": "eb21615db6aa406bb091970495f5af4a3c630ec85656a2dc108dcd097f9aa1b4",
          "linkedWithoutMetadata": "eb21615db6aa406bb091970495f5af4a3c630ec85656a2dc108dcd097f9aa1b4"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "addAggregator(bytes32,address)",
          "addPool(bytes32,address,address)",
          "removeAggregator(bytes32)",
          "removePool(bytes32)",
          "getRates()",
          "getCurrencies()",
          "rateForCurrency(bytes32)",
          "rateAndUpdatedTime(bytes32)",
          "setTwapInterval(int56)",
          "setLastTickForTWAP(bytes32)",
          "setWETH(address)",
          "setETH(address)",
          "transferCurrencyKeys()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "aggregators",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:23"
            },
            {
              "label": "currencyKeyDecimals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_uint8)",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:25"
            },
            {
              "label": "aggregatorKeys",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:27"
            },
            {
              "label": "currencyKeys",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:30"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)11977)",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:31"
            },
            {
              "label": "twapInterval",
              "offset": 0,
              "slot": "7",
              "type": "t_int56",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:33"
            },
            {
              "label": "_ETH",
              "offset": 7,
              "slot": "7",
              "type": "t_address",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:40"
            },
            {
              "label": "_wETH",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:41"
            },
            {
              "label": "useLastTickForTWAP",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "PriceFeed",
              "src": "contracts/PriceFeed/PriceFeed.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV2V3Interface)141": {
              "label": "contract AggregatorV2V3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV3Pool)11977": {
              "label": "contract IUniswapV3Pool",
              "numberOfBytes": "20"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
              "label": "mapping(bytes32 => contract AggregatorV2V3Interface)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)11977)": {
              "label": "mapping(bytes32 => contract IUniswapV3Pool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint8)": {
              "label": "mapping(bytes32 => uint8)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarket.sol:RangedMarket": {
        "src": "contracts/RangedMarkets/RangedMarket.sol:13",
        "version": {
          "withMetadata": "a8b35f4b7c643c7f537216906e7e4821fdc1728e54f9f8d5d98fbdaa41079e3f",
          "withoutMetadata": "a8b35f4b7c643c7f537216906e7e4821fdc1728e54f9f8d5d98fbdaa41079e3f",
          "linkedWithoutMetadata": "a8b35f4b7c643c7f537216906e7e4821fdc1728e54f9f8d5d98fbdaa41079e3f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address)",
          "mint(uint256,uint8,address)",
          "burnIn(uint256,address)",
          "burnOut(uint256,address)",
          "canExercisePositions()",
          "exercisePositions()",
          "canResolve()",
          "resolveMarket()",
          "result()",
          "withdrawCollateral(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "resolved",
            "src": "contracts/RangedMarkets/RangedMarket.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/RangedMarkets/RangedMarket.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "leftMarket",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPositionalMarket)44369",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:21"
            },
            {
              "label": "rightMarket",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPositionalMarket)44369",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:22"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Positions)35799_storage",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:29"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(RangedMarketsAMM)39580",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:31"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "4",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:33"
            },
            {
              "label": "finalPrice",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:35"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:39"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPositionalMarket)44369": {
              "label": "contract IPositionalMarket",
              "numberOfBytes": "20"
            },
            "t_contract(RangedMarketsAMM)39580": {
              "label": "contract RangedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_contract(RangedPosition)40017": {
              "label": "contract RangedPosition",
              "numberOfBytes": "20"
            },
            "t_struct(Positions)35799_storage": {
              "label": "struct RangedMarket.Positions",
              "members": [
                {
                  "label": "inp",
                  "type": "t_contract(RangedPosition)40017",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "outp",
                  "type": "t_contract(RangedPosition)40017",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarketMastercopy.sol:RangedMarketMastercopy": {
        "src": "contracts/RangedMarkets/RangedMarketMastercopy.sol:7",
        "version": {
          "withMetadata": "5ad3a95d87602e4eb64f800619f5e0a49a41ea30152737828fb3a76883711912",
          "withoutMetadata": "5ad3a95d87602e4eb64f800619f5e0a49a41ea30152737828fb3a76883711912",
          "linkedWithoutMetadata": "5ad3a95d87602e4eb64f800619f5e0a49a41ea30152737828fb3a76883711912"
        },
        "inherit": [
          "contracts/RangedMarkets/RangedMarket.sol:RangedMarket"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RangedMarketMastercopy",
            "src": "contracts/RangedMarkets/RangedMarketMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "leftMarket",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPositionalMarket)44369",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:21"
            },
            {
              "label": "rightMarket",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPositionalMarket)44369",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:22"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Positions)35799_storage",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:29"
            },
            {
              "label": "rangedMarketsAMM",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(RangedMarketsAMM)39580",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:31"
            },
            {
              "label": "resolved",
              "offset": 20,
              "slot": "4",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:33"
            },
            {
              "label": "finalPrice",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:35"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedMarket",
              "src": "contracts/RangedMarkets/RangedMarket.sol:39"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPositionalMarket)44369": {
              "label": "contract IPositionalMarket",
              "numberOfBytes": "20"
            },
            "t_contract(RangedMarketsAMM)39580": {
              "label": "contract RangedMarketsAMM",
              "numberOfBytes": "20"
            },
            "t_contract(RangedPosition)40017": {
              "label": "contract RangedPosition",
              "numberOfBytes": "20"
            },
            "t_struct(Positions)35799_storage": {
              "label": "struct RangedMarket.Positions",
              "members": [
                {
                  "label": "inp",
                  "type": "t_contract(RangedPosition)40017",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "outp",
                  "type": "t_contract(RangedPosition)40017",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedMarketsAMM.sol:RangedMarketsAMM": {
        "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:32",
        "version": {
          "withMetadata": "47479656635a10a6e21b9cd5e501349c3fd72911726166b80738dbc3688e3913",
          "withoutMetadata": "47479656635a10a6e21b9cd5e501349c3fd72911726166b80738dbc3688e3913",
          "linkedWithoutMetadata": "47479656635a10a6e21b9cd5e501349c3fd72911726166b80738dbc3688e3913"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256,uint256,address,address,uint256)",
          "createRangedMarket(address,address)",
          "createRangedMarkets(address[],address[])",
          "canCreateRangedMarket(address,address)",
          "availableToBuyFromAMM(address,uint8)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteDetailed(address,uint8,uint256)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)",
          "buyFromAMMWithReferrer(address,uint8,uint256,uint256,uint256,address)",
          "buyFromAMMWithDifferentCollateralAndReferrer(address,uint8,uint256,uint256,uint256,address,address)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellToAmmQuoteDetailed(address,uint8,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "resolveRangedMarketsBatch(address[])",
          "getPriceImpact(address,uint8)",
          "transferSusdTo(address,uint256)",
          "retrieveSUSDAmount(address payable,uint256)",
          "setRangedMarketMastercopies(address,address)",
          "setMinMaxSupportedPrice(uint256,uint256,uint256,uint256)",
          "setSafeBoxDataAndRangedAMMFee(address,uint256,uint256)",
          "setThalesAMMStakingThalesAndReferrals(address,address,address,uint256)",
          "setCurveSUSD(bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "thalesAmm",
              "offset": 1,
              "slot": "5",
              "type": "t_contract(IThalesAMM)45453",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:39"
            },
            {
              "label": "rangedAmmFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:41"
            },
            {
              "label": "createdRangedMarkets",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:43"
            },
            {
              "label": "_knownMarkets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)47766_storage",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:44"
            },
            {
              "label": "rangedMarketMastercopy",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:46"
            },
            {
              "label": "rangedPositionMastercopy",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:47"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:49"
            },
            {
              "label": "spentOnMarket",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:51"
            },
            {
              "label": "capPerMarket",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:54"
            },
            {
              "label": "minSupportedPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:56"
            },
            {
              "label": "maxSupportedPrice",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:57"
            },
            {
              "label": "safeBox",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:59"
            },
            {
              "label": "safeBoxImpact",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:60"
            },
            {
              "label": "minimalDifBetweenStrikes",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:62"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(IStakingThales)45283",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:64"
            },
            {
              "label": "maximalDifBetweenStrikes",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:66"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:68"
            },
            {
              "label": "referrerFee",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:69"
            },
            {
              "label": "curveSUSD",
              "offset": 0,
              "slot": "24",
              "type": "t_contract(ICurveSUSD)43823",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:71"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:73"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:74"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:75"
            },
            {
              "label": "curveOnrampEnabled",
              "offset": 20,
              "slot": "27",
              "type": "t_bool",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:77"
            },
            {
              "label": "maxAllowedPegSlippagePercentage",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "RangedMarketsAMM",
              "src": "contracts/RangedMarkets/RangedMarketsAMM.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICurveSUSD)43823": {
              "label": "contract ICurveSUSD",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)45283": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMM)45453": {
              "label": "contract IThalesAMM",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)47766_storage": {
              "label": "struct AddressSetLib.AddressSet",
              "members": [
                {
                  "label": "elements",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedPosition.sol:RangedPosition": {
        "src": "contracts/RangedMarkets/RangedPosition.sol:13",
        "version": {
          "withMetadata": "4bf50ad51266be0576543ca4a2481ac73b7f8dc038bc1a79d88746cd5b67cf0b",
          "withoutMetadata": "4bf50ad51266be0576543ca4a2481ac73b7f8dc038bc1a79d88746cd5b67cf0b",
          "linkedWithoutMetadata": "4bf50ad51266be0576543ca4a2481ac73b7f8dc038bc1a79d88746cd5b67cf0b"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,string,string,address)",
          "allowance(address,address)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getBalanceOf(address)",
          "getTotalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/RangedMarkets/RangedPosition.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:16"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:17"
            },
            {
              "label": "rangedMarket",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(RangedMarket)36625",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:20"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:22"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:23"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:26"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:31"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(RangedMarket)36625": {
              "label": "contract RangedMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RangedMarkets/RangedPositionMastercopy.sol:RangedPositionMastercopy": {
        "src": "contracts/RangedMarkets/RangedPositionMastercopy.sol:7",
        "version": {
          "withMetadata": "c15e31d011bac9d9793d5d2b5f09bbe337340d7f3d1fb1b3348e3bfbbd8addb2",
          "withoutMetadata": "c15e31d011bac9d9793d5d2b5f09bbe337340d7f3d1fb1b3348e3bfbbd8addb2",
          "linkedWithoutMetadata": "c15e31d011bac9d9793d5d2b5f09bbe337340d7f3d1fb1b3348e3bfbbd8addb2"
        },
        "inherit": [
          "contracts/RangedMarkets/RangedPosition.sol:RangedPosition",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RangedPositionMastercopy",
            "src": "contracts/RangedMarkets/RangedPositionMastercopy.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:16"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:17"
            },
            {
              "label": "rangedMarket",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(RangedMarket)36625",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:20"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:22"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:23"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:26"
            },
            {
              "label": "thalesRangedAMM",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:31"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "RangedPosition",
              "src": "contracts/RangedMarkets/RangedPosition.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(RangedMarket)36625": {
              "label": "contract RangedMarket",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RetroDistribution/VestingEscrow.sol:VestingEscrow": {
        "src": "contracts/RetroDistribution/VestingEscrow.sol:11",
        "version": {
          "withMetadata": "066b3f0a119d03f520b860a438b9a45c2a891a992405c10cdb2cea0efb734113",
          "withoutMetadata": "066b3f0a119d03f520b860a438b9a45c2a891a992405c10cdb2cea0efb734113",
          "linkedWithoutMetadata": "066b3f0a119d03f520b860a438b9a45c2a891a992405c10cdb2cea0efb734113"
        },
        "inherit": [
          "contracts/utils/Owned.sol:Owned",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address,address,uint256,uint256)",
          "addTokens(uint256)",
          "fund(address[],uint256[])",
          "vestedSupply()",
          "vestedOf(address)",
          "lockedSupply()",
          "balanceOf(address)",
          "lockedOf(address)",
          "_selfDestruct(address payable)",
          "claim()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VestingEscrow",
            "src": "contracts/RetroDistribution/VestingEscrow.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:7"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:15"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:16"
            },
            {
              "label": "endTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:17"
            },
            {
              "label": "initialLocked",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:18"
            },
            {
              "label": "totalClaimed",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:19"
            },
            {
              "label": "initialLockedSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:21"
            },
            {
              "label": "unallocatedSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "VestingEscrow",
              "src": "contracts/RetroDistribution/VestingEscrow.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RetroDistribution/VestingEscrowCC.sol:VestingEscrowCC": {
        "src": "contracts/RetroDistribution/VestingEscrowCC.sol:15",
        "version": {
          "withMetadata": "c99a0f42436222440dc94b722a60d7bf31c601e72468acb1086aa8f17f798e71",
          "withoutMetadata": "c99a0f42436222440dc94b722a60d7bf31c601e72468acb1086aa8f17f798e71",
          "linkedWithoutMetadata": "c99a0f42436222440dc94b722a60d7bf31c601e72468acb1086aa8f17f798e71"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256)",
          "fund(address,uint256,uint256)",
          "increaseAllocation(address,uint256)",
          "decreaseAllocation(address,uint256)",
          "vestedSupply()",
          "vestedOf(address)",
          "lockedSupply()",
          "balanceOf(address)",
          "lockedOf(address)",
          "claim()",
          "partialClaim(uint256)",
          "pauseClaim(address)",
          "unpauseClaim(address)",
          "disableClaim(address)",
          "enableClaim(address)",
          "changeWallet(address,address)",
          "setStartTime(address,uint256)",
          "setEndTime(address,uint256)",
          "setToken(address)",
          "setVestingPeriod(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "owner",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "token",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:24"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:25"
            },
            {
              "label": "endTime",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:26"
            },
            {
              "label": "initialLocked",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:27"
            },
            {
              "label": "totalClaimed",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:28"
            },
            {
              "label": "disabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:29"
            },
            {
              "label": "pausedAt",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:30"
            },
            {
              "label": "initialLockedSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:32"
            },
            {
              "label": "vestingPeriod",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:33"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_address)dyn_storage",
              "contract": "VestingEscrowCC",
              "src": "contracts/RetroDistribution/VestingEscrowCC.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/RetroDistribution/VestingEscrowProxy.sol:VestingEscrowProxy": {
        "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:15",
        "version": {
          "withMetadata": "7b99a533d4476ddaa99472ac9794caa47c4caf13bc811be3730b7db12883e723",
          "withoutMetadata": "7b99a533d4476ddaa99472ac9794caa47c4caf13bc811be3730b7db12883e723",
          "linkedWithoutMetadata": "7b99a533d4476ddaa99472ac9794caa47c4caf13bc811be3730b7db12883e723"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,uint256,uint256)",
          "fund(address[],uint256[])",
          "vestedSupply()",
          "vestedOf(address)",
          "lockedSupply()",
          "balanceOf(address)",
          "lockedOf(address)",
          "claim()",
          "setStartTime(uint256)",
          "setEndTime(uint256)",
          "setToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "owner",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            },
            {
              "label": "token",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:19"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:20"
            },
            {
              "label": "endTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:21"
            },
            {
              "label": "initialLocked",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:22"
            },
            {
              "label": "totalClaimed",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:23"
            },
            {
              "label": "initialLockedSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "VestingEscrowProxy",
              "src": "contracts/RetroDistribution/VestingEscrowProxy.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Vaults/AmmVault.sol:AmmVault": {
        "src": "contracts/Vaults/AmmVault.sol:16",
        "version": {
          "withMetadata": "4b78f53a286f2e2a0c85ab81bf1f0d9cda11cc43414b7e1c144f95f20a2d7e51",
          "withoutMetadata": "4b78f53a286f2e2a0c85ab81bf1f0d9cda11cc43414b7e1c144f95f20a2d7e51",
          "linkedWithoutMetadata": "4b78f53a286f2e2a0c85ab81bf1f0d9cda11cc43414b7e1c144f95f20a2d7e51"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize((address,address,address,uint256,uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "startVault()",
          "closeRound()",
          "deposit(uint256)",
          "withdrawalRequest()",
          "trade(address,uint256,uint8)",
          "setRoundLength(uint256)",
          "setThalesAmm(address)",
          "setStakingThales(address)",
          "setUtilizationRate(uint256)",
          "setMaxAllowedDeposit(uint256)",
          "setMinAllowedDeposit(uint256)",
          "setMaxAllowedUsers(uint256)",
          "setAllocationLimits(uint256)",
          "setPriceLimits(uint256,uint256)",
          "setSkewImpactLimit(int256)",
          "setMinTradeAmount(uint256)",
          "tradingAllocation()",
          "canCloseCurrentRound()",
          "getAvailableAllocationForMarket(address)",
          "getBalancesPerRound(uint256,address)",
          "getAvailableToDeposit()",
          "getCurrentRoundEnd()",
          "cumulativePnLBetweenRounds(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "52",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "103",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            },
            {
              "label": "thalesAMM",
              "offset": 1,
              "slot": "103",
              "type": "t_contract(IThalesAMM)45453",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:47"
            },
            {
              "label": "sUSD",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IERC20Upgradeable)2869",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:48"
            },
            {
              "label": "vaultStarted",
              "offset": 20,
              "slot": "104",
              "type": "t_bool",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:50"
            },
            {
              "label": "round",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:52"
            },
            {
              "label": "roundLength",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:53"
            },
            {
              "label": "roundStartTime",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:54"
            },
            {
              "label": "usersPerRound",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:56"
            },
            {
              "label": "userInRound",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:57"
            },
            {
              "label": "balancesPerRound",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:59"
            },
            {
              "label": "withdrawalRequested",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:60"
            },
            {
              "label": "depositReceipts",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_struct(DepositReceipt)41878_storage)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:61"
            },
            {
              "label": "allocationPerRound",
              "offset": 0,
              "slot": "113",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:63"
            },
            {
              "label": "tradingMarketsPerRound",
              "offset": 0,
              "slot": "114",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:65"
            },
            {
              "label": "tradingMarketPositionPerRound",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)45317))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:66"
            },
            {
              "label": "isTradingMarketInARound",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:67"
            },
            {
              "label": "profitAndLossPerRound",
              "offset": 0,
              "slot": "117",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:69"
            },
            {
              "label": "cumulativeProfitAndLoss",
              "offset": 0,
              "slot": "118",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:70"
            },
            {
              "label": "maxAllowedDeposit",
              "offset": 0,
              "slot": "119",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:72"
            },
            {
              "label": "utilizationRate",
              "offset": 0,
              "slot": "120",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:73"
            },
            {
              "label": "capPerRound",
              "offset": 0,
              "slot": "121",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:75"
            },
            {
              "label": "minDepositAmount",
              "offset": 0,
              "slot": "122",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:77"
            },
            {
              "label": "maxAllowedUsers",
              "offset": 0,
              "slot": "123",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:79"
            },
            {
              "label": "usersCurrentlyInVault",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:80"
            },
            {
              "label": "allocationLimitsPerMarketPerRound",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:82"
            },
            {
              "label": "allocationSpentPerRound",
              "offset": 0,
              "slot": "126",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:84"
            },
            {
              "label": "priceLowerLimit",
              "offset": 0,
              "slot": "127",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:86"
            },
            {
              "label": "priceUpperLimit",
              "offset": 0,
              "slot": "128",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:87"
            },
            {
              "label": "skewImpactLimit",
              "offset": 0,
              "slot": "129",
              "type": "t_int256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:88"
            },
            {
              "label": "minTradeAmount",
              "offset": 0,
              "slot": "130",
              "type": "t_uint256",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:90"
            },
            {
              "label": "stakingThales",
              "offset": 0,
              "slot": "131",
              "type": "t_contract(IStakingThales)45283",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:93"
            },
            {
              "label": "allocationSpentInARound",
              "offset": 0,
              "slot": "132",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AmmVault",
              "src": "contracts/Vaults/AmmVault.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)2869": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IStakingThales)45283": {
              "label": "contract IStakingThales",
              "numberOfBytes": "20"
            },
            "t_contract(IThalesAMM)45453": {
              "label": "contract IThalesAMM",
              "numberOfBytes": "20"
            },
            "t_enum(Position)45317": {
              "label": "enum IThalesAMM.Position",
              "members": [
                "Up",
                "Down"
              ],
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Position)45317)": {
              "label": "mapping(address => enum IThalesAMM.Position)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(DepositReceipt)41878_storage)": {
              "label": "mapping(address => struct AmmVault.DepositReceipt)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)45317))": {
              "label": "mapping(uint256 => mapping(address => enum IThalesAMM.Position))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(DepositReceipt)41878_storage": {
              "label": "struct AmmVault.DepositReceipt",
              "members": [
                {
                  "label": "round",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Vaults/AmmVaultData.sol:AmmVaultData": {
        "src": "contracts/Vaults/AmmVaultData.sol:10",
        "version": {
          "withMetadata": "f0448e0a647a7b02c0c438eed2bada1afb87ffc6461e7cd92fd68612f0ec595e",
          "withoutMetadata": "f0448e0a647a7b02c0c438eed2bada1afb87ffc6461e7cd92fd68612f0ec595e",
          "linkedWithoutMetadata": "f0448e0a647a7b02c0c438eed2bada1afb87ffc6461e7cd92fd68612f0ec595e"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable",
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getAmmVaultData(address)",
          "getUserAmmVaultData(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "owner",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts/interfaces/IAddressResolver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ICurveSUSD.sol:ICurveSUSD": {
        "src": "contracts/interfaces/ICurveSUSD.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exchange_underlying(int128,int128,uint256,uint256)",
          "get_dy_underlying(int128,int128,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IEscrowThales.sol:IEscrowThales": {
        "src": "contracts/interfaces/IEscrowThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStakerPeriod(address,uint256)",
          "getStakerAmounts(address,uint256)",
          "totalAccountEscrowedAmount(address)",
          "getStakedEscrowedBalanceForRewards(address)",
          "totalEscrowedRewards()",
          "totalEscrowBalanceNotIncludedInStaking()",
          "currentVestingPeriod()",
          "updateCurrentPeriod()",
          "claimable(address)",
          "addToEscrow(address,uint256)",
          "vest(uint256)",
          "addTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "subtractTotalEscrowBalanceNotIncludedInStaking(uint256)",
          "mergeAccount(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IOracleInstance.sol:IOracleInstance": {
        "src": "contracts/interfaces/IOracleInstance.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOutcome()",
          "resolvable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayAMMLiquidityPool.sol:IParlayAMMLiquidityPool": {
        "src": "contracts/interfaces/IParlayAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "commitTrade(address,uint256)",
          "getMarketRound(address)",
          "getMarketPool(address)",
          "transferToPool(address,uint256)",
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayMarketData.sol:IParlayMarketData": {
        "src": "contracts/interfaces/IParlayMarketData.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasParlayGamePosition(address,address,uint256)",
          "addParlayForGamePosition(address,uint256,address,address)",
          "removeParlayForGamePosition(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IParlayMarketsAMM.sol:IParlayMarketsAMM": {
        "src": "contracts/interfaces/IParlayMarketsAMM.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "parlaySize()",
          "sUSD()",
          "sportsAmm()",
          "parlayAmmFee()",
          "maxAllowedRiskPerCombination()",
          "maxSupportedOdds()",
          "getSgpFeePerCombination(uint256,uint256,uint256,uint256)",
          "riskPerCombination(address,uint256,address,uint256,address,uint256,address,uint256)",
          "riskPerGameCombination(address,address,address,address,address,address,address,address)",
          "riskPerPackedGamesCombination(bytes32)",
          "isActiveParlay(address)",
          "exerciseParlay(address)",
          "triggerResolvedEvent(address,bool)",
          "resolveParlay()",
          "buyFromParlay(address[],uint256[],uint256,uint256,uint256,address)",
          "buyQuoteFromParlay(address[],uint256[],uint256)",
          "canCreateParlayMarket(address[],uint256[],uint256)",
          "numActiveParlayMarkets()",
          "activeParlayMarkets(uint256,uint256)",
          "minUSDAmount()",
          "maxSupportedAmount()",
          "safeBoxImpact()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPassportPosition.sol:IPassportPosition": {
        "src": "contracts/interfaces/IPassportPosition.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPosition.sol:IPosition": {
        "src": "contracts/interfaces/IPosition.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBalanceOf(address)",
          "getTotalSupply()",
          "exerciseWithAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarket.sol:IPositionalMarket": {
        "src": "contracts/interfaces/IPositionalMarket.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptions()",
          "times()",
          "getOracleDetails()",
          "fees()",
          "deposited()",
          "creator()",
          "resolved()",
          "phase()",
          "oraclePrice()",
          "oraclePriceAndTimestamp()",
          "canResolve()",
          "result()",
          "balancesOf(address)",
          "totalSupplies()",
          "getMaximumBurnable(address)",
          "mint(uint256)",
          "exerciseOptions()",
          "burnOptions(uint256)",
          "burnOptionsMaximum()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPositionalMarketManager.sol:IPositionalMarketManager": {
        "src": "contracts/interfaces/IPositionalMarketManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "durations()",
          "capitalRequirement()",
          "marketCreationEnabled()",
          "onlyAMMMintingAndBurning()",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "totalDeposited()",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "isActiveMarket(address)",
          "isKnownMarket(address)",
          "getThalesAMM()",
          "createMarket(bytes32,uint256,uint256,uint256)",
          "resolveMarket(address)",
          "expireMarkets(address[])",
          "transferSusdTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IPriceFeed.sol:IPriceFeed": {
        "src": "contracts/interfaces/IPriceFeed.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addAggregator(bytes32,address)",
          "removeAggregator(bytes32)",
          "rateForCurrency(bytes32)",
          "rateAndUpdatedTime(bytes32)",
          "getRates()",
          "getCurrencies()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IReferrals.sol:IReferrals": {
        "src": "contracts/interfaces/IReferrals.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "referrals(address)",
          "sportReferrals(address)",
          "setReferrer(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISNXRewards.sol:ISNXRewards": {
        "src": "contracts/interfaces/ISNXRewards.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collateralisationRatioAndAnyRatesInvalid(address)",
          "debtBalanceOf(address,bytes32)",
          "issuanceRatio()",
          "setCRatio(address,uint256)",
          "setIssuanceRatio(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISNXRewardsState.sol:ISNXRewardsState": {
        "src": "contracts/interfaces/ISNXRewardsState.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAccountsDebtEntry(address,uint256)",
          "setAccountsDebtEntry(address,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportPositionalMarket.sol:ISportPositionalMarket": {
        "src": "contracts/interfaces/ISportPositionalMarket.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOptions()",
          "times()",
          "initialMint()",
          "getGameDetails()",
          "getGameId()",
          "deposited()",
          "optionsCount()",
          "creator()",
          "resolved()",
          "cancelled()",
          "paused()",
          "phase()",
          "canResolve()",
          "result()",
          "isChild()",
          "tags(uint256)",
          "getTags()",
          "getParentMarketPositions()",
          "getStampedOdds()",
          "balancesOf(address)",
          "totalSupplies()",
          "isDoubleChance()",
          "parentMarket()",
          "setPaused(bool)",
          "updateDates(uint256,uint256)",
          "mint(uint256)",
          "exerciseOptions()",
          "restoreInvalidOdds(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportPositionalMarketManager.sol:ISportPositionalMarketManager": {
        "src": "contracts/interfaces/ISportPositionalMarketManager.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "marketCreationEnabled()",
          "totalDeposited()",
          "numActiveMarkets()",
          "activeMarkets(uint256,uint256)",
          "numMaturedMarkets()",
          "maturedMarkets(uint256,uint256)",
          "isActiveMarket(address)",
          "isDoubleChanceMarket(address)",
          "isDoubleChanceSupported()",
          "isKnownMarket(address)",
          "getActiveMarketAddress(uint256)",
          "transformCollateral(uint256)",
          "reverseTransformCollateral(uint256)",
          "isMarketPaused(address)",
          "expiryDuration()",
          "isWhitelistedAddress(address)",
          "getOddsObtainer()",
          "createMarket(bytes32,string,uint256,uint256,uint256,uint256[],bool,address)",
          "setMarketPaused(address,bool)",
          "updateDatesForMarket(address,uint256)",
          "resolveMarket(address,uint256)",
          "expireMarkets(address[])",
          "transferSusdTo(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportsAMM.sol:ISportsAMM": {
        "src": "contracts/interfaces/ISportsAMM.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "theRundownConsumer()",
          "getMarketDefaultOdds(address,bool)",
          "isMarketInAMMTrading(address)",
          "isMarketForSportOnePositional(uint256)",
          "availableToBuyFromAMM(address,uint8)",
          "parlayAMM()",
          "minSupportedOdds()",
          "maxSupportedOdds()",
          "min_spread()",
          "max_spread()",
          "minimalTimeLeftToMaturity()",
          "getSpentOnGame(address)",
          "safeBoxImpact()",
          "manager()",
          "getLiquidityPool()",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAmmQuoteForParlayAMM(address,uint8,uint256)",
          "updateParlayVolume(address,uint256)",
          "buyPriceImpact(address,uint8,uint256)",
          "obtainOdds(address,uint8)",
          "buyFromAmmQuoteWithDifferentCollateral(address,uint8,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/ISportsAMMLiquidityPool.sol:ISportsAMMLiquidityPool": {
        "src": "contracts/interfaces/ISportsAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThales.sol:IStakingThales": {
        "src": "contracts/interfaces/IStakingThales.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateVolume(address,uint256)",
          "totalStakedAmount()",
          "stakedBalanceOf(address)",
          "currentPeriodRewards()",
          "currentPeriodFees()",
          "getLastPeriodOfClaimedRewards(address)",
          "getRewardsAvailable(address)",
          "getRewardFeesAvailable(address)",
          "getAlreadyClaimedRewards(address)",
          "getContractRewardFunds()",
          "getContractFeeFunds()",
          "getAMMVolume(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IStakingThalesBonusRewardsManager.sol:IStakingThalesBonusRewardsManager": {
        "src": "contracts/interfaces/IStakingThalesBonusRewardsManager.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "storePoints(address,address,uint256,uint256)",
          "getUserRoundBonusShare(address,uint256)",
          "useNewBonusModel()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMM.sol:IThalesAMM": {
        "src": "contracts/interfaces/IThalesAMM.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "manager()",
          "availableToBuyFromAMM(address,uint8)",
          "impliedVolatilityPerAsset(bytes32)",
          "buyFromAmmQuote(address,uint8,uint256)",
          "buyFromAMM(address,uint8,uint256,uint256,uint256)",
          "availableToSellToAMM(address,uint8)",
          "sellToAmmQuote(address,uint8,uint256)",
          "sellToAMM(address,uint8,uint256,uint256,uint256)",
          "isMarketInAMMTrading(address)",
          "price(address,uint8)",
          "buyPriceImpact(address,uint8,uint256)",
          "sellPriceImpact(address,uint8,uint256)",
          "priceFeed()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMMLiquidityPool.sol:IThalesAMMLiquidityPool": {
        "src": "contracts/interfaces/IThalesAMMLiquidityPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isUserLPing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesAMMUtils.sol:IThalesAMMUtils": {
        "src": "contracts/interfaces/IThalesAMMUtils.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateOdds(uint256,uint256,uint256,uint256)",
          "calculateDiscount((uint256,uint256,uint256,uint256,uint256))",
          "buyPriceImpactImbalancedSkew((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "sellPriceImpactImbalancedSkew(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
          "balanceOfPositionOnMarket(address,uint8,address)",
          "balanceOfPositionsOnMarket(address,uint8,address)",
          "getBalanceOfPositionsOnMarket(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesRoyale.sol:IThalesRoyale": {
        "src": "contracts/interfaces/IThalesRoyale.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBuyInAmount()",
          "season()",
          "tokenSeason(uint256)",
          "seasonFinished(uint256)",
          "roundInASeason(uint256)",
          "roundResultPerSeason(uint256,uint256)",
          "isTokenAliveInASpecificSeason(uint256,uint256)",
          "hasParticipatedInCurrentOrLastRoyale(address)",
          "getTokenPositions(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IThalesStakingRewardsPool.sol:IThalesStakingRewardsPool": {
        "src": "contracts/interfaces/IThalesStakingRewardsPool.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addToEscrow(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/AddressResolverHelper.sol:AddressResolverHelper": {
        "src": "contracts/test-helpers/AddressResolverHelper.sol:7",
        "version": {
          "withMetadata": "491ed26e1828e76e3f300d20667c7279b49e636cfe83a7a8a47c4976f3d3bc04",
          "withoutMetadata": "491ed26e1828e76e3f300d20667c7279b49e636cfe83a7a8a47c4976f3d3bc04",
          "linkedWithoutMetadata": "491ed26e1828e76e3f300d20667c7279b49e636cfe83a7a8a47c4976f3d3bc04"
        },
        "inherit": [
          "contracts/interfaces/IAddressResolver.sol:IAddressResolver"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getAddress(bytes32)",
          "setSNXRewardsAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "snxAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AddressResolverHelper",
              "src": "contracts/test-helpers/AddressResolverHelper.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/RundownTest/TherundownConsumerTest.sol:TherundownConsumerTest": {
        "src": "contracts/test-helpers/RundownTest/TherundownConsumerTest.sol:66",
        "version": {
          "withMetadata": "d00cb0b4d1835685e0bd1a5b40da344f813b4ed21942deb54395b34cbec186f0",
          "withoutMetadata": "d00cb0b4d1835685e0bd1a5b40da344f813b4ed21942deb54395b34cbec186f0",
          "linkedWithoutMetadata": "d00cb0b4d1835685e0bd1a5b40da344f813b4ed21942deb54395b34cbec186f0"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "requestGamesResolveWithFilters(bytes32,uint256,string,uint256,uint256,string[],string[])",
          "requestGames(bytes32,uint256,string,uint256,uint256)",
          "fulfillGames(bytes32,bytes[])",
          "getGamesCreated(bytes32,uint256)",
          "getGamesResolved(bytes32,uint256)",
          "getGamesOdds(bytes32,uint256)",
          "getOracleAddress()",
          "setOracle(address)",
          "withdrawLink()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TherundownConsumerTest",
            "src": "contracts/test-helpers/RundownTest/TherundownConsumerTest.sol:101"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)1162",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)1257",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)1337",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
            },
            {
              "label": "requestIdGames",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
              "contract": "TherundownConsumerTest",
              "src": "contracts/test-helpers/RundownTest/TherundownConsumerTest.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes_storage)dyn_storage": {
              "label": "bytes[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)1162": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)1257": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)1337": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
              "label": "mapping(bytes32 => bytes[])",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/interfaces/IUniswapPool.sol:IUniswapPool": {
        "src": "contracts/test-helpers/interfaces/IUniswapPool.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()",
          "slot0()",
          "observe(uint32[])",
          "initialize(uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/libraries/CallbackValidation.sol:CallbackValidation": {
        "src": "contracts/test-helpers/libraries/CallbackValidation.sol:8",
        "version": {
          "withMetadata": "76a5f27bcabbe206d7739d980aa218777ae72e50d23625278f24d9468ff45ec8",
          "withoutMetadata": "76a5f27bcabbe206d7739d980aa218777ae72e50d23625278f24d9468ff45ec8",
          "linkedWithoutMetadata": "76a5f27bcabbe206d7739d980aa218777ae72e50d23625278f24d9468ff45ec8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/libraries/Oracle.sol:Oracle": {
        "src": "contracts/test-helpers/libraries/Oracle.sol:12",
        "version": {
          "withMetadata": "decfa74af06feab01e55ad413723d5d0fab483cbcca34355aafc397737678424",
          "withoutMetadata": "decfa74af06feab01e55ad413723d5d0fab483cbcca34355aafc397737678424",
          "linkedWithoutMetadata": "decfa74af06feab01e55ad413723d5d0fab483cbcca34355aafc397737678424"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/libraries/PoolAddress.sol:PoolAddress": {
        "src": "contracts/test-helpers/libraries/PoolAddress.sol:4",
        "version": {
          "withMetadata": "9ee0121d904e70eade4f2534bd86031f2dd6d1eed6f6955541e2c9befa1193b4",
          "withoutMetadata": "9ee0121d904e70eade4f2534bd86031f2dd6d1eed6f6955541e2c9befa1193b4",
          "linkedWithoutMetadata": "9ee0121d904e70eade4f2534bd86031f2dd6d1eed6f6955541e2c9befa1193b4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test-helpers/libraries/Tick.sol:Tick": {
        "src": "contracts/test-helpers/libraries/Tick.sol:12",
        "version": {
          "withMetadata": "702d984d43a990bb2c92d06d1e742bcef5e340bbf5bb8d409747f5ca5064d462",
          "withoutMetadata": "702d984d43a990bb2c92d06d1e742bcef5e340bbf5bb8d409747f5ca5064d462",
          "linkedWithoutMetadata": "702d984d43a990bb2c92d06d1e742bcef5e340bbf5bb8d409747f5ca5064d462"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/MultiSend.sol:MultiSend": {
        "src": "contracts/utils/MultiSend.sol:6",
        "version": {
          "withMetadata": "b363c45913fbc5ce8e54f169841a494782dcc62edf3b0b640853ec0556604b2a",
          "withoutMetadata": "b363c45913fbc5ce8e54f169841a494782dcc62edf3b0b640853ec0556604b2a",
          "linkedWithoutMetadata": "b363c45913fbc5ce8e54f169841a494782dcc62edf3b0b640853ec0556604b2a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "sendToMultipleAddresses(address[],uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/Owned.sol:Owned": {
        "src": "contracts/utils/Owned.sol:5",
        "version": {
          "withMetadata": "c6f6b84d44f3e98015f22f3b94a7e9bfc6962a8001e0c542c6f0131b503d3f91",
          "withoutMetadata": "c6f6b84d44f3e98015f22f3b94a7e9bfc6962a8001e0c542c6f0131b503d3f91",
          "linkedWithoutMetadata": "c6f6b84d44f3e98015f22f3b94a7e9bfc6962a8001e0c542c6f0131b503d3f91"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "contracts/utils/Owned.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/Pausable.sol:Pausable": {
        "src": "contracts/utils/Pausable.sol:7",
        "inherit": [
          "contracts/utils/Owned.sol:Owned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/utils/Pausable.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:6"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/utils/Owned.sol:7"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Pausable",
              "src": "contracts/utils/Pausable.sol:8"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/utils/Pausable.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/AddressSetLib.sol:AddressSetLib": {
        "src": "contracts/utils/libraries/AddressSetLib.sol:5",
        "version": {
          "withMetadata": "c1a5a4aede77c5032c2b889da1601e28025c3651f24ac291cb3bfae35c408378",
          "withoutMetadata": "c1a5a4aede77c5032c2b889da1601e28025c3651f24ac291cb3bfae35c408378",
          "linkedWithoutMetadata": "c1a5a4aede77c5032c2b889da1601e28025c3651f24ac291cb3bfae35c408378"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/DateTime.sol:DateTime": {
        "src": "contracts/utils/libraries/DateTime.sol:29",
        "version": {
          "withMetadata": "157de19a3436f518b9bb286b2cdb1e7dab354580b342fc3b5b56d6f25136021f",
          "withoutMetadata": "157de19a3436f518b9bb286b2cdb1e7dab354580b342fc3b5b56d6f25136021f",
          "linkedWithoutMetadata": "157de19a3436f518b9bb286b2cdb1e7dab354580b342fc3b5b56d6f25136021f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/NFTDescriptor.sol:NFTDescriptor": {
        "src": "contracts/utils/libraries/NFTDescriptor.sol:9",
        "version": {
          "withMetadata": "44cd2a0cfbabc8cbeac7078a42c8829d5b509b2e3829d14be701f6e60eed9760",
          "withoutMetadata": "44cd2a0cfbabc8cbeac7078a42c8829d5b509b2e3829d14be701f6e60eed9760",
          "linkedWithoutMetadata": "44cd2a0cfbabc8cbeac7078a42c8829d5b509b2e3829d14be701f6e60eed9760"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/NFTSVG.sol:NFTSVG": {
        "src": "contracts/utils/libraries/NFTSVG.sol:11",
        "version": {
          "withMetadata": "0de9b299bc1bd1ce4ef81f3a3d9a44176c14854e796887d20c5c1d2069913045",
          "withoutMetadata": "0de9b299bc1bd1ce4ef81f3a3d9a44176c14854e796887d20c5c1d2069913045",
          "linkedWithoutMetadata": "0de9b299bc1bd1ce4ef81f3a3d9a44176c14854e796887d20c5c1d2069913045"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/SafeCast.sol:SafeCast": {
        "src": "contracts/utils/libraries/SafeCast.sol:20",
        "version": {
          "withMetadata": "bf88907a0cb5100c6eb62073b27d745df9e81cb86e0c573ec5db10f6e11b6a7c",
          "withoutMetadata": "bf88907a0cb5100c6eb62073b27d745df9e81cb86e0c573ec5db10f6e11b6a7c",
          "linkedWithoutMetadata": "bf88907a0cb5100c6eb62073b27d745df9e81cb86e0c573ec5db10f6e11b6a7c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/utils/libraries/TransferHelper.sol:6",
        "version": {
          "withMetadata": "8febad0f5472a8caea49ac90434bc395990a849ea4200849586b411e295fbb6b",
          "withoutMetadata": "8febad0f5472a8caea49ac90434bc395990a849ea4200849586b411e295fbb6b",
          "linkedWithoutMetadata": "8febad0f5472a8caea49ac90434bc395990a849ea4200849586b411e295fbb6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/libraries/UniswapMath.sol:UniswapMath": {
        "src": "contracts/utils/libraries/UniswapMath.sol:11",
        "version": {
          "withMetadata": "fe917b76272d05b69d8d1b41a8905375dc8999b72a2d17b081aea0b2264d5a8b",
          "withoutMetadata": "fe917b76272d05b69d8d1b41a8905375dc8999b72a2d17b081aea0b2264d5a8b",
          "linkedWithoutMetadata": "fe917b76272d05b69d8d1b41a8905375dc8999b72a2d17b081aea0b2264d5a8b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:ITransparentUpgradeableProxy": {
        "src": "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:OwnedUpgradeabilityProxy": {
        "src": "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:58",
        "version": {
          "withMetadata": "cff719c6df6a2d2b88978f5e74865d91dc6ed1ba25392c94edf7c4c6b32a853d",
          "withoutMetadata": "cff719c6df6a2d2b88978f5e74865d91dc6ed1ba25392c94edf7c4c6b32a853d",
          "linkedWithoutMetadata": "cff719c6df6a2d2b88978f5e74865d91dc6ed1ba25392c94edf7c4c6b32a853d"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnedUpgradeabilityProxy",
            "src": "contracts/utils/proxy/OwnedUpgradeabilityProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/Proxy.sol:Proxy": {
        "src": "contracts/utils/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "a7eb5904779faa88e1712211a120a7e6425360da446c337f0843a1ca35ff7951",
          "withoutMetadata": "a7eb5904779faa88e1712211a120a7e6425360da446c337f0843a1ca35ff7951",
          "linkedWithoutMetadata": "a7eb5904779faa88e1712211a120a7e6425360da446c337f0843a1ca35ff7951"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "80064593b8ab7379587d8961d26c28846b67416711dbe65039a16cffd49aa567",
          "withoutMetadata": "80064593b8ab7379587d8961d26c28846b67416711dbe65039a16cffd49aa567",
          "linkedWithoutMetadata": "80064593b8ab7379587d8961d26c28846b67416711dbe65039a16cffd49aa567"
        },
        "inherit": [
          "contracts/utils/proxy/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "624bb7e8bee6d52613373d18cedd85ffded3486375b457d988520e646ea52d50",
          "withoutMetadata": "624bb7e8bee6d52613373d18cedd85ffded3486375b457d988520e646ea52d50",
          "linkedWithoutMetadata": "624bb7e8bee6d52613373d18cedd85ffded3486375b457d988520e646ea52d50"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/UpgradeabilityProxy.sol:UpgradeabilityProxy": {
        "src": "contracts/utils/proxy/UpgradeabilityProxy.sol:11",
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:6",
        "version": {
          "withMetadata": "15f5a8ce3b4403aae3e4758da57a2273666b7c52ae16664ebb5b2a7cfe89b5fd",
          "withoutMetadata": "15f5a8ce3b4403aae3e4758da57a2273666b7c52ae16664ebb5b2a7cfe89b5fd",
          "linkedWithoutMetadata": "15f5a8ce3b4403aae3e4758da57a2273666b7c52ae16664ebb5b2a7cfe89b5fd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "nominateNewOwner(address)",
          "acceptOwnership()",
          "transferOwnershipAtInit(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:ProxyPausable": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:10",
        "version": {
          "withMetadata": "b7f6e4cdd501adf91211a3dc70f5f2fa0c09433f2939a2acdf87b181748fdac3",
          "withoutMetadata": "b7f6e4cdd501adf91211a3dc70f5f2fa0c09433f2939a2acdf87b181748fdac3",
          "linkedWithoutMetadata": "b7f6e4cdd501adf91211a3dc70f5f2fa0c09433f2939a2acdf87b181748fdac3"
        },
        "inherit": [
          "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:ProxyOwned"
        ],
        "libraries": [],
        "methods": [
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
            },
            {
              "label": "nominatedOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
            },
            {
              "label": "_transferredAtInit",
              "offset": 21,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyOwned",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
            },
            {
              "label": "lastPauseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ProxyPausable",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:ProxyReentrancyGuard": {
        "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:17",
        "version": {
          "withMetadata": "550bced8a36700f7951cf1f432c57975c3c251e2cfd1a70dbcd727bb3c38ab79",
          "withoutMetadata": "550bced8a36700f7951cf1f432c57975c3c251e2cfd1a70dbcd727bb3c38ab79",
          "linkedWithoutMetadata": "550bced8a36700f7951cf1f432c57975c3c251e2cfd1a70dbcd727bb3c38ab79"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initNonReentrant()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_guardCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "ProxyReentrancyGuard",
              "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/utils/token/ExoticUSD.sol:ExoticUSD": {
        "src": "contracts/utils/token/ExoticUSD.sol:8",
        "version": {
          "withMetadata": "89dedfef111638554c83551e1a8a2c489d566c5481b122a7c10ef6075a302ddb",
          "withoutMetadata": "89dedfef111638554c83551e1a8a2c489d566c5481b122a7c10ef6075a302ddb",
          "linkedWithoutMetadata": "89dedfef111638554c83551e1a8a2c489d566c5481b122a7c10ef6075a302ddb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "()",
          "mintForUser(address payable)",
          "sendEthToUser(address payable)",
          "()",
          "()",
          "setName(string)",
          "setSymbol(string)",
          "setDefaultAmount(uint256)",
          "setPaused(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ExoticUSD",
            "src": "contracts/utils/token/ExoticUSD.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "__name",
            "src": "contracts/utils/token/ExoticUSD.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "__symbol",
            "src": "contracts/utils/token/ExoticUSD.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "__name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ExoticUSD",
              "src": "contracts/utils/token/ExoticUSD.sol:9"
            },
            {
              "label": "__symbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ExoticUSD",
              "src": "contracts/utils/token/ExoticUSD.sol:10"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "ExoticUSD",
              "src": "contracts/utils/token/ExoticUSD.sol:14"
            },
            {
              "label": "defaultAmount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ExoticUSD",
              "src": "contracts/utils/token/ExoticUSD.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    }
  ]
}